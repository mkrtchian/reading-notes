(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[930],{1081:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/books/monolith-to-microservices",function(){return s(4079)}])},4079:function(e,n,s){"use strict";s.r(n),s.d(n,{__toc:function(){return o}});var i=s(5893),r=s(2673),l=s(2643),t=s(7854),a=s(8397);let o=[{depth:2,value:"1 - Just Enough Microservices",id:"1---just-enough-microservices"},{depth:2,value:"2 - Planning a Migration",id:"2---planning-a-migration"},{depth:2,value:"3 - Splitting the Monolith",id:"3---splitting-the-monolith"},{depth:3,value:"Pattern: Strangler Fig Application",id:"pattern-strangler-fig-application"},{depth:3,value:"Pattern: UI Composition",id:"pattern-ui-composition"},{depth:3,value:"Pattern: Branch by Abstraction",id:"pattern-branch-by-abstraction"},{depth:3,value:"Pattern: Parallel Run",id:"pattern-parallel-run"},{depth:3,value:"Pattern: Decorating Collaborator",id:"pattern-decorating-collaborator"},{depth:3,value:"Pattern: Change Data Capture",id:"pattern-change-data-capture"},{depth:2,value:"4 - Decomposing the Database",id:"4---decomposing-the-database"},{depth:4,value:"Pattern: The Shared Database",id:"pattern-the-shared-database"},{depth:4,value:"Pattern: Database View",id:"pattern-database-view"},{depth:4,value:"Pattern: Database Wrapping Service",id:"pattern-database-wrapping-service"},{depth:4,value:"Pattern: Database-as-a-Service Interface",id:"pattern-database-as-a-service-interface"},{depth:3,value:"Transferring Ownership",id:"transferring-ownership"},{depth:4,value:"Pattern: Aggregate Exposing Monolith",id:"pattern-aggregate-exposing-monolith"},{depth:4,value:"Pattern: Change Data Ownership",id:"pattern-change-data-ownership"},{depth:3,value:"Data Synchronization",id:"data-synchronization"},{depth:4,value:"Pattern: Synchronize Data in Application",id:"pattern-synchronize-data-in-application"},{depth:4,value:"Pattern: Tracer Write",id:"pattern-tracer-write"},{depth:3,value:"Splitting Apart the Database",id:"splitting-apart-the-database"},{depth:3,value:"Schema Separation Examples",id:"schema-separation-examples"},{depth:4,value:"Pattern: Split Table",id:"pattern-split-table"},{depth:4,value:"Pattern: Move Foreign-Key Relationship to Code",id:"pattern-move-foreign-key-relationship-to-code"},{depth:4,value:"Exemple : Shared Static Data",id:"exemple--shared-static-data"},{depth:3,value:"Transactions",id:"transactions"},{depth:4,value:"Sagas",id:"sagas"},{depth:2,value:"Chapter 5 - Growing Pains",id:"chapter-5---growing-pains"}];function u(e){let n=Object.assign({h1:"h1",h2:"h2",ul:"ul",li:"li",strong:"strong",em:"em",a:"a",h3:"h3",code:"code",h4:"h4"},(0,l.a)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{children:"Monolith to Microservices: : Evolutionary Patterns to Transform Your Monolith"}),"\n",(0,i.jsx)(n.h2,{id:"1---just-enough-microservices",children:"1 - Just Enough Microservices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les microservices sont un type particulier de service-oriented architecture (SOA).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ils exposent une API via le r\xe9seau, donc forment une architecture distribu\xe9e."}),"\n",(0,i.jsxs)(n.li,{children:["Il sont ",(0,i.jsx)(n.strong,{children:"d\xe9ployables ind\xe9pendamment"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il s'agit d'\xeatre en mesure de modifier et d\xe9ployer un seul service sans toucher aux autres."}),"\n",(0,i.jsxs)(n.li,{children:["Le conseil de l'auteur est d'",(0,i.jsx)(n.em,{children:"effectivement"})," d\xe9ployer les services ind\xe9pendamment, plut\xf4t que le tout ensemble en esp\xe9rant une ind\xe9pendance th\xe9orique."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Ils sont organis\xe9s autour d'un ",(0,i.jsx)(n.strong,{children:"business domain"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le but est de rendre les changements affectant plusieurs microservices le plus rare possible, et favoriser les changement \xe0 l'int\xe9rieur du microservice."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Ils gardent la ",(0,i.jsx)(n.strong,{children:"base de donn\xe9es priv\xe9e"}),", et ne l'exposent que via une API.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Partager la DB est une des pires choses \xe0 faire pour avoir une d\xe9ployabilit\xe9 ind\xe9pendante."}),"\n",(0,i.jsx)(n.li,{children:"Ne pas la partager telle quelle permet de d\xe9cider ce qu'on partage et ce qu'on ne partage pas, et aussi de garder une API publique stable tout en \xe9tant libre de faire des changements en interne."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["L'exemple utilis\xe9 dans ce livre est une entreprise de vente de CD de musique.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Elle a une application organis\xe9e en 3 couches techniques : UI, backend, DB."}),"\n",(0,i.jsxs)(n.li,{children:["Chaque couche est sous la responsabilit\xe9 d'une \xe9quipe : \xe9quipe front, \xe9quipe back, \xe9quipe DB.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Et d'ailleurs cette l'architecture d\xe9coule probablement de l'organisation des \xe9quipes cf. loi de Conway."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["On a donc une forte coh\xe9sion au niveau technique : s'il faut faire un travail sur un aspect technique (par exemple moderniser la UI), une seule \xe9quipe sera impact\xe9e.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Mais on a une faible coh\xe9sion par domaine business, puisque l'ajout d'une fonctionnalit\xe9 n\xe9cessite l'intervention et la coordination de 3 \xe9quipes."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"A l'inverse on peut imaginer une architecture organis\xe9e autour des domaines, avec un bout de UI, un bout de backend et un bout de DB chacun, et sous la responsabilit\xe9 d'\xe9quipes pluridisciplinaires : c'est comme \xe7a qu'on va organiser nos microservices."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"microservices"})," ont de nombreux ",(0,i.jsx)(n.strong,{children:"avantages"}),", et il s'agit de comprendre lesquels on cherche \xe0 obtenir en priorit\xe9 pour orienter notre d\xe9composition de monolithe.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"La possibilit\xe9 de scaler diff\xe9remment des parties du syst\xe8me, et d'obtenir de la robustesse (le syst\xe8me peut continuer \xe0 op\xe9rer m\xeame si une partie est down)."}),"\n",(0,i.jsx)(n.li,{children:"La possibilit\xe9 d'utiliser diff\xe9rentes stacks technologiques et de les faire communiquer ensemble."}),"\n",(0,i.jsx)(n.li,{children:"La possibilit\xe9 pour plusieurs \xe9quipes de travailler sur le syst\xe8me sans se marcher dessus."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Parmi les ",(0,i.jsx)(n.strong,{children:"d\xe9savantages"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les probl\xe9matiques des syst\xe8mes distribu\xe9s : la communication r\xe9seau \xe9tant significativement plus lente que la communication in-process, et les paquets pouvant se perdre, on doit faire attention \xe0 beaucoup plus de choses.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les transactions deviennent probl\xe9matiques."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Les microservices arrivent avec leurs technologies sp\xe9cifiques \xe0 ma\xeetriser, qui peuvent causer bien plus de probl\xe8mes que les syst\xe8mes classiques si elles sont mal utilis\xe9es."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["La ",(0,i.jsx)(n.strong,{children:"UI"})," ne doit pas \xeatre mise de c\xf4t\xe9 dans la d\xe9composition : si on veut pouvoir d\xe9ployer rapidement des features compl\xe8tes, il faut la d\xe9composer elle-aussi pour qu'elle corresponde avec les services c\xf4t\xe9 backend."]}),"\n",(0,i.jsx)(n.li,{children:"L'auteur conseille de ne pas adopter une nouvelle stack technologique pour faire la migration vers les microservices. La migration en elle-m\xeame est d\xe9j\xe0 assez difficile, il vaut mieux garder les outils qu'on conna\xeet dans un premier temps."}),"\n",(0,i.jsxs)(n.li,{children:["A propos de la ",(0,i.jsx)(n.strong,{children:"taille"})," des microservices :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["C'est un des crit\xe8res les ",(0,i.jsx)(n.strong,{children:"moins importants"}),", surtout quand on d\xe9bute avec."]}),"\n",(0,i.jsx)(n.li,{children:"Il vaut mieux s'int\xe9resser d'abord \xe0 la question de savoir combien de microservices on sera capable de g\xe9rer dans l'organisation, et comment faire en sorte de ne pas trop les coupler."}),"\n",(0,i.jsxs)(n.li,{children:["Il cite Chris Richardson qui parle d'avoir des microservices avec de petites interfaces.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["NDLR : c'est par cette id\xe9e que Vlad Khononov caract\xe9rise principalement les microservices dans ",(0,i.jsx)(n.em,{children:"Learning Domain Driven Design"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"L'id\xe9e initiale des microservices \xe9tait de les avoir si petits qu'on pourrait facilement les recoder pour les remplacer (par exemple dans une techno qui permette plus de performance/scalabilit\xe9), mais l'auteur sous-entend que ce n'est plus vraiment un crit\xe8re essentiel, en tout cas qui fait consensus."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["C\xf4t\xe9 ownership, l'architecture en microservices favorise le mod\xe8le o\xf9 les \xe9quipes tech/produit sont au contact du client, et sont support\xe9es par d'\xe9ventuelles \xe9quipes transverses.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:'Ca s\'oppose au mod\xe8le plus traditionnel o\xf9 le "business" g\xe8re la relation avec les clients, et o\xf9 les d\xe9veloppeurs sont dans un silo \xe0 part, sans ownership r\xe9el sur un business domain de bout en bout.'}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le terme ",(0,i.jsx)(n.strong,{children:"monolith"})," d\xe9signe ici l'unit\xe9 de ",(0,i.jsx)(n.strong,{children:"d\xe9ploiement"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"single process monolith"})," : il s'agit d'une app single-process, qu'on peut \xe9ventuellement dupliquer pour des raisons d'availability.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"En g\xe9n\xe9ral le monolithe va au moins communiquer avec une DB, formant un syst\xe8me distribu\xe9 tr\xe8s simple."}),"\n",(0,i.jsx)(n.li,{children:"\xc7a repr\xe9sente l'essentiel des projets qui cherchent \xe0 migrer vers du microservice, donc l'auteur va se concentrer sur \xe7a."}),"\n",(0,i.jsxs)(n.li,{children:["Il est possible de r\xe9aliser un ",(0,i.jsx)(n.strong,{children:"modular monolith"})," en gardant le single-process, mais en cr\xe9ant des modules de code bien s\xe9par\xe9s.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://www.youtube.com/watch?v=ISYKx8sa53g",children:"Shopify"})," est un bon exemple de modular monolith."]}),"\n",(0,i.jsx)(n.li,{children:"On se retrouve ceci dit souvent dans une configuration o\xf9 le split de DB est n\xe9glig\xe9 par les \xe9quipes."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"distributed monolith"})," : on a plusieurs services communiquant \xe0 travers le r\xe9seau, mais le syst\xe8me a besoin d'\xeatre d\xe9ploy\xe9 en un bloc.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"C'est un syst\xe8me qui a tous les d\xe9savantages : absence de modularisation, et syst\xe8me distribu\xe9."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"third-party black-box systems"})," : les services externes SASS qu'on utilise, ou open source qu'on installe."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"monoliths"})," ont un certain nombre de ",(0,i.jsx)(n.strong,{children:"d\xe9savantages"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les diverses parties du code ont tendance \xe0 \xeatre plus facilement coupl\xe9es."}),"\n",(0,i.jsx)(n.li,{children:"Le travail \xe0 plusieurs \xe9quipes est plus compliqu\xe9 en terme de conflit de modification, en terme de confusion d'ownership, et aussi pour savoir quand d\xe9ployer."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Concernant les ",(0,i.jsx)(n.strong,{children:"avantages"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On n'a pas tous les probl\xe8mes associ\xe9s aux syst\xe8mes distribu\xe9s."}),"\n",(0,i.jsx)(n.li,{children:"Le workflow de d\xe9veloppement, le monitoring et le d\xe9bug est plus simple."}),"\n",(0,i.jsx)(n.li,{children:"On peut r\xe9utiliser du code tr\xe8s facilement."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["A propos du ",(0,i.jsx)(n.strong,{children:"couplage"})," et de la ",(0,i.jsx)(n.strong,{children:"coh\xe9sion"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le couplage c'est l'id\xe9e que changer une chose implique d'en changer aussi une autre. La coh\xe9sion c'est le fait de garder ensemble des choses qui ont un rapport entre-elles (et qui d'habitude changent ensemble).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pour avoir un syst\xe8me facile \xe0 transformer, on a envie que le couplage soit faible, et la coh\xe9sion \xe9lev\xe9e."}),"\n",(0,i.jsx)(n.li,{children:"Par exemple, si la logique d'une fonctionnalit\xe9 est pr\xe9sente \xe0 travers plusieurs modules, on va devoir les changer tous pour la modifier (couplage \xe9lev\xe9), et les \xe9l\xe9ments de cette fonctionnalit\xe9 ne sont pas rassembl\xe9s (coh\xe9sion faible)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Dans le cas sp\xe9cifique des microservices, les modules en question qu'il faut consid\xe9rer en priorit\xe9 sont les microservices eux-m\xeames, puisque modifier leurs limites co\xfbte tr\xe8s cher.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On veut donc faire en sorte que chaque changement impacte, et donc oblige le red\xe9ploiement, du moins possible de microservices."}),"\n",(0,i.jsx)(n.li,{children:"Si dans les microservices on peut se tromper dans les limites de chaque service, dans le monolithe ces limites n'existent pas naturellement, et donc on a tendance \xe0 avoir un couplage g\xe9n\xe9ralis\xe9 o\xf9 tout d\xe9pend de tout."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Il y a diff\xe9rents types de couplage :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Implementation coupling"})," : il s'agit d'un service qui doit changer quand on modifie l'impl\xe9mentation d'un autre service.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L'exemple typique c'est le couplage \xe0 la DB d'un autre service.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"La solution c'est soit d'avoir une API pour acc\xe9der \xe0 la donn\xe9e, soit d'avoir une DB publique sp\xe9cifique pour les consommateurs externes, distincte de la DB interne du microservice."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Avoir une interface publique distincte permet aussi de concevoir cette interface pour r\xe9pondre aux besoins des consommateurs, en mode ",(0,i.jsx)(n.strong,{children:"outside-in"}),", plut\xf4t qu'imaginer ce qu'on veut exposer parmi ce qu'on a d\xe9j\xe0.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L'auteur conseille de toujours faire \xe7a : ",(0,i.jsx)(n.strong,{children:"impliquer les consommateurs dans le design de l'API publique"}),", pour que le service les serve au mieux."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Temporal coupling"})," : il s'agit de communication synchrone d\xe9pendante d'autres communications.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Par exemple, si un service envoie un message \xe0 un autre service, qui doit d'abord interroger un 3\xe8me avant de r\xe9pondre. Si le 3\xe8me est down le 2\xe8me ne pourra pas r\xe9pondre.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"La solution peut \xeatre pour le 2\xe8me service d'avoir les donn\xe9es du 3\xe8me en cache."}),"\n",(0,i.jsx)(n.li,{children:"Une autre solution pourrait \xeatre d'utiliser des communications asynchrones : le 3\xe8me service re\xe7oit le message asynchrone et recontacte le 2\xe8me quand il est dispo."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour plus d'infos sur le type de communications, voir le chapitre 4 de ",(0,i.jsx)(t.f,{children:"Building Microservices"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Deployment coupling"})," : \xe0 chaque fois qu'on doit red\xe9ployer des services quand on en d\xe9ploie un.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Id\xe9alement on veut pouvoir d\xe9ployer le plus petit set de choses pour avoir peu de risques et un feedback rapide (et aller vers une continuous delivery)."}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.em,{children:"release trains"})," sont une mauvaise id\xe9e."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Domain coupling"})," : il s'agit des interactions indispensables li\xe9es aux fonctionnalit\xe9s elles-m\xeames.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On ne peut pas les \xe9liminer, mais on peut les agencer de telle sorte qu'elles aient un impact limit\xe9 en termes de couplage."}),"\n",(0,i.jsxs)(n.li,{children:["Par exemple, dans le cas de l'entreprise de vente de CD, le microservice de la commande doit communiquer au microservice de l'entrep\xf4t quels CD ont \xe9t\xe9 achet\xe9s et o\xf9 ils doivent \xeatre achemin\xe9s.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut r\xe9duire au maximum les informations communiqu\xe9es entre services, par exemple l'entrep\xf4t recevrait seulement les donn\xe9es de packaging et pas l'ensemble des d\xe9tails de la commande."}),"\n",(0,i.jsx)(n.li,{children:"On peut faire en sorte que la commande inclut les infos n\xe9cessaires sur l'utilisateur (dont elle aura de toute fa\xe7on besoin pour d'autres raisons) dans le message envoy\xe9 \xe0 l'entrep\xf4t, plut\xf4t qu'avoir l'entrep\xf4t faisant un autre appel pour obtenir les infos de l'utilisateur."}),"\n",(0,i.jsx)(n.li,{children:"Une autre possibilit\xe9 pourrait \xeatre que la commande \xe9mette un event, et que l'entrep\xf4t le consomme."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"Domain Driven Design"})," permet d'organiser les microservices efficacement autour de business domains.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"aggregates"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On peut les voir comme des repr\xe9sentations de choses r\xe9elles, avec un cycle de vie qu'on peut traiter avec une machine \xe0 \xe9tat.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple une commande, une facture, un objet en stock."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Un microservice peut contenir un ou plusieurs aggregates.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Si un autre microservice veut changer le contenu d'un aggregate, il doit soit envoyer un message au microservice qui en a la responsabilit\xe9, soit faire en sorte que ce microservice \xe9coute des events que lui \xe9met."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Il y a de nombreux moyens d'organiser le syst\xe8me en aggregates, mais il vaut mieux commencer par celui qui colle le mieux au mod\xe8le mental des utilisateurs.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'event storming est un bon moyen pour \xe7a."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"bounded contexts"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ils permettent de cacher l'impl\xe9mentation aux bounded contexts ext\xe9rieurs."}),"\n",(0,i.jsx)(n.li,{children:"Ils contiennent un ou plusieurs aggregates, dont certains peuvent \xeatre priv\xe9s pour l'ext\xe9rieur."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Concernant la relation avec les microservices :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Au d\xe9but on cherche de gros microservices, donc les bounded contexts sont de bons candidats."}),"\n",(0,i.jsx)(n.li,{children:"A mesure qu'on avance, on va affiner nos microservices, et opter pour un aggregate par service."}),"\n",(0,i.jsx)(n.li,{children:"A noter que le groupe de microservices autour d'un bounded context peut cacher qu'il y a en fait plusieurs microservices (ce d\xe9tail relevant de l'ordre de l'impl\xe9mentation)."}),"\n",(0,i.jsx)(n.li,{children:"NDLR : selon Vlad Khononov le microservice est de fait un bounded context, et va bien avec la taille d'un subdomain. Il ne peut pas \xeatre plus grand que le plus grand bounded context possible, ni plus petit qu'un aggregate. Mais la taille de l'aggregate marche rarement."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"2---planning-a-migration",children:"2 - Planning a Migration"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut vouloir adopter les microservices pour diverses raisons, et ces raisons peuvent fortement influencer ce sur quoi on va concentrer nos efforts."}),"\n",(0,i.jsxs)(n.li,{children:["L'auteur pose en g\xe9n\xe9ral 3 questions pour aider les entreprises \xe0 ",(0,i.jsx)(n.strong,{children:"savoir si elles ont besoin des microservices"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Qu'est-ce que vous esp\xe9rez accomplir ?","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On devrait pouvoir trouver des choses qui sont align\xe9es avec les besoins business et des utilisateurs finaux."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Est-ce que vous avez consid\xe9r\xe9 des alternatives ?"}),"\n",(0,i.jsx)(n.li,{children:"Comment saurez-vous si la transition fonctionne ?"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Parmi les ",(0,i.jsx)(n.strong,{children:"raisons de choisir les microservices"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Am\xe9liorer l'autonomie des \xe9quipes / Scaler le nombre de d\xe9veloppeurs"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il est notoire que les unit\xe9s business autonomes sont plus efficaces. Et cette r\xe8gle s'applique aussi \xe0 l'\xe9chelle de l'\xe9quipe, comme le mod\xe8le d'Amazon avec les \xe9quipes \xe0 deux pizzas."}),"\n",(0,i.jsx)(n.li,{children:"Avoir le contr\xf4le exclusif sur des microservices permet aux \xe9quipes d'acqu\xe9rir de l'autonomie, et de travailler en parall\xe8le."}),"\n",(0,i.jsxs)(n.li,{children:["Autres moyens d'obtenir \xe7a :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"monolith modulaire"})," peut r\xe9pondre \xe0 ce point, avec une certaine coordination n\xe9cessaire quand m\xeame pour le d\xe9ploiement commun."]}),"\n",(0,i.jsx)(n.li,{children:"On peut aussi penser de mani\xe8re g\xe9n\xe9rale \xe0 des approches self-service o\xf9 on provisionne des machines automatiquement au lieu d'avoir \xe0 passer par un ticket manuel aupr\xe8s d'une autre \xe9quipe."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"R\xe9duire le time to market"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le fait que les microservices permettent de d\xe9ployer sans besoin de coordination fait qu'on peut amener des changements en production plus vite."}),"\n",(0,i.jsxs)(n.li,{children:["Autres moyens d'obtenir \xe7a :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L'auteur recommande de faire l'",(0,i.jsx)(n.strong,{children:"analyse"})," concr\xe8te du chemin et du ",(0,i.jsx)(n.strong,{children:"temps r\xe9el de chaque \xe9tape"})," entre l'id\xe9e obtenue en discovery, et la feature en production."]}),"\n",(0,i.jsx)(n.li,{children:"On trouve souvent des bottlenecks qui permettent de gagner un temps cons\xe9quent."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Scaler efficacement la charge"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Comme les microservices tournent dans des processus diff\xe9rents, on peut les scaler ind\xe9pendamment, et donc ma\xeetriser les co\xfbts de notre infrastructure."}),"\n",(0,i.jsxs)(n.li,{children:["Autres moyens d'obtenir \xe7a :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut essayer de passer sur une plus grosse machine (scaling vertical)."}),"\n",(0,i.jsxs)(n.li,{children:["Faire tourner ",(0,i.jsx)(n.strong,{children:"plusieurs copies du monolithe"}),", derri\xe8re un load balancer (scaling horizontal). Le bottleneck risque d'\xeatre la DB, mais \xe7a ne co\xfbte pas tr\xe8s cher d'essayer."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Am\xe9liorer la robustesse"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Comme on a plusieurs unit\xe9s ind\xe9pendantes et tournant sur des machines s\xe9par\xe9es, on peut concevoir le syst\xe8me de sorte qu'il continue \xe0 fonctionner m\xeame si certaines parties sont en \xe9chec."}),"\n",(0,i.jsx)(n.li,{children:"Attention quand m\xeame : il y a tout un effort \xe0 faire pour obtenir cette robustesse, le fait de distribuer le syst\xe8me ne suffit pas \xe0 le rendre robuste."}),"\n",(0,i.jsxs)(n.li,{children:["Autres moyens d'obtenir \xe7a :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Faire tourner ",(0,i.jsx)(n.strong,{children:"plusieurs copies du monolithe"})," permet de r\xe9pondre \xe0 cette probl\xe9matique. Y compris par exemple dans des racks ou datacenters diff\xe9rents."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Adopter de nouvelles technologies."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les microservices \xe9tant isol\xe9s et communiquant par r\xe9seau, on peut tr\xe8s bien tester un nouveau langage, une nouvelle techno etc. sur un seul microservice."}),"\n",(0,i.jsxs)(n.li,{children:["Autres moyens d'obtenir \xe7a :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On peut parfois switcher de langage, par exemple si on utilise la JVM, on peut basculer entre les langages support\xe9s.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pour les nouvelles DB c'est plus compliqu\xe9."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["On peut toujours remplacer le monolithe par un nouveau avec une approche incr\xe9mentale type ",(0,i.jsx)(n.em,{children:"strangler fig"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"R\xe9utiliser des composants"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["C'est une ",(0,i.jsx)(n.strong,{children:"mauvaise raison"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["En g\xe9n\xe9ral on cherche \xe0 optimiser autre chose derri\xe8re la r\xe9utilisation, il vaut mieux se concentrer sur cette vraie raison.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple, la r\xe9duction du time to market. Or le co\xfbt de coordination entre \xe9quipes peut impliquer que r\xe9\xe9crire le composant serait plus rapide."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Quand ne pas adopter les microservices"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Un domaine pas tr\xe8s clair"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Dans le cas o\xf9 on a un domaine encore jeune et pas tr\xe8s bien compris, la d\xe9composition en microservices peut impliquer de se tromper de limites, et les changer co\xfbte cher."}),"\n",(0,i.jsx)(n.li,{children:"Et donc typiquement il faut \xe9viter les microservices d\xe8s le d\xe9but."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Quand on est une startup"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les microservices sont utiles pour les scale-ups ou les entreprises \xe9tablies qui ont trouv\xe9 leur product market fit. Les startups le cherchent et donc seront amen\xe9es \xe0 beaucoup changer leur produit."}),"\n",(0,i.jsx)(n.li,{children:"On peut \xe9ventuellement s\xe9parer ce qui est clairement \xe0 part dans un service, et laisser le reste dans le monolithe pour nous donner plus de temps pour le faire maturer."}),"\n",(0,i.jsx)(n.li,{children:"Il y a aussi la question de la capacit\xe9 \xe0 g\xe9rer les microservices avec les effectifs de la boite : si on a du mal \xe0 en g\xe9rer 2, en g\xe9rer 10 va \xeatre vraiment difficile."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Quand le logiciel est d\xe9ploy\xe9 chez le client"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le d\xe9ploiement de microservices implique une grande complexit\xe9 au niveau de l'infrastructure. On ne peut pas attendre des clients qu'ils puissent la g\xe9rer."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Quand on n'a pas de bonne raison"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Mine de rien c'est un des cas les plus courants o\xf9 les gens adoptent les microservices alors qu'ils ne devraient pas."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["On a souvent plusieurs raisons d'adopter les microservices dans notre organisation. Il faut les ",(0,i.jsx)(n.strong,{children:"prioriser"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Par exemple, on d\xe9cide qu'il nous faut des microservices pour g\xe9rer une augmentation de trafic. Puis on se dit que ce serait pas mal d'augmenter aussi l'autonomie des \xe9quipes, et d'adopter un nouveau langage.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il faut bien garder en t\xeate que c'\xe9tait l'augmentation du trafic qui \xe9tait la plus importante. Et donc si on trouve un autre moyen plus simple de r\xe9gler le probl\xe8me, peut-\xeatre que les autres raisons devront attendre."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Un bon moyen pour aider aux d\xe9cisions est de repr\xe9senter l'ensemble des raisons d'adopter les microservices avec des curseurs de 1 \xe0 5 : si on augmente le curseur pour une raison, on doit le baisser pour une autre."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour r\xe9ussir \xe0 cr\xe9er un ",(0,i.jsx)(n.strong,{children:"changement organisationnel"})," (pour mettre en place des microservices ou autre chose), l'auteur propose la m\xe9thode en 8 \xe9tapes de John Kotter, d\xe9crite plus en d\xe9tail dans son livre ",(0,i.jsx)(t.f,{children:"Leading Change"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 1 : Establishing a sense of urgency"}),". Le meilleur moment pour initier le changement c'est juste apr\xe8s une crise dont l'id\xe9e qu'on veut mettre en place r\xe8glerait le probl\xe8me sous-jacent, avec l'id\xe9e \"Il faut le mettre en place ",(0,i.jsx)(n.em,{children:"maintenant"}),'".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 2 : Creating the guiding coalition"}),". On a besoin de convaincre des personnes autour de nous. En fonction de l'impact de notre id\xe9e, il faudra avoir des personnes plus ou moins haut plac\xe9es, et typiquement des personnes du business dans le cas o\xf9 on introduit des syst\xe8mes distribu\xe9es qui vont impacter les utilisateurs."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 3 : Developing a vision and strategy"}),'. La vision d\xe9finit le "quoi", elle doit donner envie mais \xeatre r\xe9aliste. La strat\xe9gie d\xe9finit le "comment".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 4 : Communicating the change vision"}),". Il vaut mieux privil\xe9gier la communication en face \xe0 face (plut\xf4t que slack ou ce genre de chose) pour pouvoir ajuster le discours en fonction des r\xe9actions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 5 : Empowering employees for broad-based action"}),". Souvent les organisations am\xe8nent de nouvelles personnes dans l'\xe9quipe pour aider au changement en donnant de la bande passante."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 6 : Generating short-term wins"}),". Pour \xe9viter que l'engouement retombe, il faut obtenir des quick wins. \xc7a peut \xeatre par l'extraction de microservices \"faciles\" (\xe0 condition qu'ils aient un int\xe9r\xeat quand m\xeame)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 7 : Consolidating gains and producing more change"}),". On continue avec des changements plus profonds en fonction des succ\xe8s ou \xe9checs. \xc7a peut \xeatre la d\xe9composition de la DB qu'on ne peut pas mettre de c\xf4t\xe9 \xe9ternellement."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 8 : Anchoring new approaches in the culture"}),". A force de pratiquer la nouvelle mani\xe8re de faire, la question de savoir si c'est la bonne approche ou non dispara\xeet. Elle devient habituelle."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["La d\xe9composition d'un monolithe \xe9tant une chose difficile, il faut qu'elle soit faite de mani\xe8re ",(0,i.jsx)(n.strong,{children:"incr\xe9mentale"}),". On sort un service \xe0 la fois, et on obtient du feedback pour s'am\xe9liorer sur la suite.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le feedback en question est aussi pr\xe9cieux parce que la plupart des probl\xe8mes complexes li\xe9s aux microservices sont remarqu\xe9s une fois que c'est ",(0,i.jsx)(n.strong,{children:"d\xe9ploy\xe9 en production"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Une des raisons de la m\xe9thode incr\xe9mentale est de ",(0,i.jsx)(n.strong,{children:"rendre les erreurs r\xe9versibles"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Mais il y a des d\xe9cisions qui sont plus impactantes que d'autres, et donc il faut ",(0,i.jsx)(n.strong,{children:"adapter le temps pass\xe9 \xe0 analyser \xe0 la facilit\xe9 \xe0 annuler la d\xe9cision"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Exemple : changer de fournisseur cloud ou changer l'API qu'on fournit publiquement est tr\xe8s impactant, alors d'exp\xe9rimenter une librairie open source ou un nouveau langage beaucoup moins."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Certaines d\xe9cisions li\xe9es aux microservices peuvent \xeatre difficiles \xe0 d\xe9faire, par exemple annuler une migration de DB ou d\xe9faire la r\xe9\xe9criture d'une API utilis\xe9e par de nombreux consumers.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Dans ces cas, l'auteur recommande d'utiliser un tableau blanc pour simuler les divers use-cases et leurs cons\xe9quences en terme de communication entre services, pour voir s'il y a des probl\xe8mes apparents."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour ce qui est de savoir o\xf9 on commence, il nous faut une d\xe9composition en composants business. Et pour \xe7a on utilise le ",(0,i.jsx)(n.strong,{children:"Domain Driven Design"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["La notion de ",(0,i.jsx)(n.strong,{children:"bounded context"})," et les relations entre les BCs nous permet de repr\xe9senter un d\xe9coupage possible en microservices."]}),"\n",(0,i.jsxs)(n.li,{children:["On n'a pas besoin d'un mod\xe8le super d\xe9taill\xe9 des BCs, mais d'avoir ",(0,i.jsx)(n.strong,{children:"juste assez d'information"})," pour pouvoir commencer \xe0 faire des choix. Et comme on proc\xe8de de mani\xe8re incr\xe9mentale, une erreur est vite rattrap\xe9e."]}),"\n",(0,i.jsxs)(n.li,{children:["L'",(0,i.jsx)(n.strong,{children:"event storming"})," est un outil recommand\xe9 par l'auteur pour obtenir une connaissance partag\xe9e du mod\xe8le, et pouvoir faire des choix pertinents \xe0 partir de l\xe0.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Pour approfondir il y a ",(0,i.jsx)(t.f,{children:"Introducing EventStorming"}),", le livre pas encore termin\xe9 d'Alberto Brandolini."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour prioriser, on peut se servir du ",(0,i.jsx)(n.strong,{children:"context mapping"})," (le nom n'est pas mentionn\xe9 par l'auteur).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Un BC qui a beaucoup de liens avec d'autres BCs ne sera peut \xeatre pas le bon premier candidat pour \xeatre extrait en microservice parce qu'il impliquera beaucoup de communications r\xe9seau."}),"\n",(0,i.jsx)(n.li,{children:"A noter que le context map qu'on a \xe0 ce stade ne repr\xe9sente pas forc\xe9ment le vrai d\xe9coupage. Il va falloir regarder dans le code et v\xe9rifier ce que le BC fait dans base de donn\xe9es."}),"\n",(0,i.jsxs)(n.li,{children:["Il faudra aussi mettre la facilit\xe9 d'extraction en balance avec l'utilit\xe9 d'extraire ce BC l\xe0.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple, si notre objectif c'est d'am\xe9liorer le time to market, mais qu'on commence par extraire un BC en microservice alors qu'il n'est presque jamais modifi\xe9, on n'aura pas beaucoup d'impact sur ce qu'on voulait faire."}),"\n",(0,i.jsxs)(n.li,{children:["On peut placer les BCs sur un graphique \xe0 deux axes : en abscisses l'int\xe9r\xeat de la d\xe9composition, et en ordonn\xe9e la facilit\xe9 de la d\xe9composition.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On va choisir en priorit\xe9 les BCs qui se retrouvent en haut \xe0 droite."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["A propos de l'",(0,i.jsx)(n.strong,{children:"organisation des \xe9quipes"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Historiquement les \xe9quipes \xe9taient organis\xe9es par comp\xe9tences techniques : devs Java ensemble, DBA ensemble, testeurs ensemble etc.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pour intervenir sur une fonctionnalit\xe9 il fallait passer par plusieurs \xe9quipes."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["De nos jours, avec des mouvements comme DevOps, les sp\xe9cialit\xe9s sont pouss\xe9es vers les \xe9quipes de delivery, qui sont organis\xe9es autour de domaines fonctionnels, en ",(0,i.jsx)(n.em,{children:"vertical slices"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le r\xf4le des \xe9quipes centrales qui restent s'est transform\xe9 : au lieu de faire eux-m\xeames, ils aident les \xe9quipes delivery, en y envoyant des sp\xe9cialistes, organisant des formations, et en cr\xe9ant des ",(0,i.jsx)(n.strong,{children:"outils self-service"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour aller plus loin, l'auteur recommande ",(0,i.jsx)(t.f,{children:"Team Topologies"})," et ",(0,i.jsx)(t.f,{children:"The Devops Handbook"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Il faut faire attention \xe0 ne pas chercher \xe0 copier tel quel les autres organisations, sans prendre en compte le contexte, la culture d'entreprise etc. On peut en revanche s'en inspirer.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le changement ",(0,i.jsx)(n.strong,{children:"prend du temps"}),". Par exemple, on peut int\xe9grer des ops dans des \xe9quipes de dev pour former petit \xe0 petit chacun aux probl\xe9matiques de l'autre."]}),"\n",(0,i.jsx)(n.li,{children:"Pour commencer le changement, on peut r\xe9unir des personnes de chaque \xe9quipe, et faire un mapping des responsabilit\xe9s li\xe9es \xe0 la delivery, en fonction de chaque \xe9quipe."}),"\n",(0,i.jsx)(n.li,{children:"Et ensuite on peut planifier un changement de responsabilit\xe9s li\xe9es aux \xe9quipes, et de la structure des \xe9quipes, sur 6 mois \xe0 un an par exemple."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Concernant la mont\xe9e en comp\xe9tence n\xe9cessaire pour la nouvelle organisation, l'auteur pr\xe9conise de laisser les d\xe9veloppeurs s'auto-\xe9valuer avec une note sur chaque comp\xe9tence n\xe9cessaire, et de les aider ensuite sur celles o\xf9 ils se sont mis un faible score.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ces auto-\xe9valuations devraient \xeatre priv\xe9es pour ne pas \xeatre fauss\xe9es."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour savoir si on va ",(0,i.jsx)(n.strong,{children:"dans la bonne direction"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Il faut avoir quelques ",(0,i.jsx)(n.strong,{children:"m\xe9triques"})," quantitatives et qualitatives li\xe9es aux outcomes qu'on recherche avec la transition qu'on a entam\xe9.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les m\xe9triques quantitatives d\xe9pendent des objectifs.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple, si c'est le time to market, on peut mesurer le cycle time, le nombre de d\xe9ploiements et le failure rate."}),"\n",(0,i.jsx)(n.li,{children:"Si on cherche la scalabilit\xe9, on peut se reporter au dernier test de performance r\xe9alis\xe9."}),"\n",(0,i.jsx)(n.li,{children:"Attention aux m\xe9triques : elles peuvent pousser \xe0 des comportements non souhait\xe9s pour satisfaire la m\xe9trique."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Pour ce qui est des m\xe9triques qualitatives, il s'agit de v\xe9rifier si l'\xe9quipe est contente ou pas, s'ils sont d\xe9bord\xe9s etc."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Il faut organiser des ",(0,i.jsx)(n.strong,{children:"checkpoints r\xe9guliers"})," pour voir o\xf9 on en est.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On v\xe9rifie que les raisons pour lesquelles on a commenc\xe9 la transition sont toujours l\xe0."}),"\n",(0,i.jsx)(n.li,{children:"On jette un œil aux m\xe9triques quantitatives pour voir l'avanc\xe9e."}),"\n",(0,i.jsx)(n.li,{children:"On demande du feedback qualitatif."}),"\n",(0,i.jsx)(n.li,{children:"On d\xe9cide d'\xe9ventuelles actions."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"3---splitting-the-monolith",children:"3 - Splitting the Monolith"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ce chapitre d\xe9crit des patterns pour migrer le code dans des microservices de mani\xe8re incr\xe9mentale."}),"\n",(0,i.jsxs)(n.li,{children:["Un des crit\xe8res \xe0 prendre en compte pour le choix des patterns c'est le fait qu'on ait ou non ",(0,i.jsx)(n.strong,{children:"la possibilit\xe9 de changer le code du monolithe"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On peut avoir de nombreuses raisons pour ne pas le pouvoir :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Si on n'a plus le code source du monolithe."}),"\n",(0,i.jsx)(n.li,{children:"Si le monolithe est \xe9crit dans une technologie pour laquelle on n'a pas les comp\xe9tences."}),"\n",(0,i.jsx)(n.li,{children:"Si on a peur de trop impacter les autres d\xe9veloppeurs du monolithe."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Dans le cas o\xf9 on peut modifier le code du monolithe, si le code est en trop mauvais \xe9tat, \xe7a peut aussi parfois \xeatre plus rapide de le r\xe9\xe9crire dans le microservice plut\xf4t que de l'extraire."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Une des grandes difficult\xe9s c'est d'",(0,i.jsx)(n.strong,{children:"isoler le code qu'on veut extraire dans notre microservice"}),", c'est-\xe0-dire modulariser le monolithe.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"En g\xe9n\xe9ral le code dans les monolithes est organis\xe9 autour de consid\xe9rations techniques et pas de domaines m\xe9tier, c'est pourtant \xe7a qu'on veut extraire."}),"\n",(0,i.jsxs)(n.li,{children:["Pour aider \xe0 faire \xe7a, l'auteur recommande le concept de ",(0,i.jsx)(n.em,{children:"seam"}),", qu'on trouve dans ",(0,i.jsx)(t.f,{children:"Working Effectively with Legacy Code"})," de Michael Feathers.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Un ",(0,i.jsx)(n.em,{children:"seam"})," est une d\xe9limitation autour d'une zone qu'on veut changer. On travaille ensuite \xe0 une nouvelle impl\xe9mentation de la fonctionnalit\xe9, et \xe0 la fin on remplace l'ancienne par la nouvelle."]}),"\n",(0,i.jsx)(n.li,{children:"\xc7a peut \xeatre plus ou moins grand, ici ce qui nous int\xe9resse c'est un bounded context."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["R\xe9organiser le code pour obtenir un ",(0,i.jsx)(n.strong,{children:"modular monolith"})," peut \xeatre suffisant pour ce qu'on recherche, en fonction de nos objectifs (cf. chapitre pr\xe9c\xe9dent).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Et \xe7a peut aussi \xeatre une premi\xe8re \xe9tape pour aller vers l'extraction d'\xe9ventuels microservices ensuite. C'est en tout cas le conseil de l'auteur."}),"\n",(0,i.jsx)(n.li,{children:"Pour autant, de nombreuses \xe9quipes pr\xe9f\xe8rent identifier une fonctionnalit\xe9, et la recoder dans un microservice sans refactorer le monolithe."}),"\n",(0,i.jsxs)(n.li,{children:["Dans tous les cas, l'auteur recommande une ",(0,i.jsx)(n.strong,{children:"approche incr\xe9mentale"})," : si la r\xe9\xe9criture du service se compte en jours ou semaines \xe7a peut \xeatre OK, si \xe7a se compte en mois, il vaut mieux adopter une approche plus incr\xe9mentale."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Dans la suite du chapitre, on voit des patterns de migration, qui permettent d'extraire du code sous forme d'un microservice cohabitant avec le monolithe.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Chaque pattern a des avantages et des inconv\xe9nients, il faut les comprendre pour pouvoir prendre \xe0 chaque fois le plus adapt\xe9."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"On extrait toujours les microservices un par un"}),", en apprenant des erreurs pour le prochain."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"pattern-strangler-fig-application",children:"Pattern: Strangler Fig Application"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"C'est un des patterns les plus utilis\xe9s, et \xe7a se base sur l'image d'un figuier qui s'implante sur un arbre existant, plante ses racines, et petit \xe0 petit \"\xe9trangle\" l'arbre qui finira par mourir sans ressources, laissant le figuier \xe0 sa place."}),"\n",(0,i.jsxs)(n.li,{children:["Cette technique permet d'avoir la nouvelle version en parall\xe8le de l'ancienne. On fait grossir petit \xe0 petit les fonctionnalit\xe9s de la nouvelle, puis on fait le switch quand le microservice est pr\xeat \xe0 remplacer la fonctionnalit\xe9 dans le monolithe.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Il faut faire la diff\xe9rence entre ",(0,i.jsx)(n.strong,{children:"deployment"})," et ",(0,i.jsx)(n.strong,{children:"release"})," : on int\xe8gre et d\xe9ploie r\xe9guli\xe8rement ce qu'on fait en production, pour \xe9viter les probl\xe8mes de merge et d\xe9risquer le plus possible de choses en production, mais on n'active la fonctionnalit\xe9 que quand elle est pr\xeate."]}),"\n",(0,i.jsxs)(n.li,{children:["Concr\xe8tement, vu qu'on est en train de sortir un microservice qui va tourner sur un processus \xe0 part, le switch se passe ",(0,i.jsx)(n.strong,{children:"au niveau r\xe9seau"})," : tant que le microservice n'est pas pr\xeat, les requ\xeates concernant sa fonctionnalit\xe9 vont vers le monolithe, et quand on veut le release, on les redirige vers lui."]}),"\n",(0,i.jsxs)(n.li,{children:["Si attendre que le microservice soit fini n'est pas assez incr\xe9mental pour nous, on peut aussi commencer \xe0 rediriger une partie des requ\xeates du monolithe vers le microservice, en fonction de ce qui a d\xe9j\xe0 \xe9t\xe9 impl\xe9ment\xe9.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\xc7a va par contre nous obliger \xe0 partager temporairement la m\xeame DB entre la fonctionnalit\xe9 dans le monolithe, et celle dans le microservice."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Cette technique a l'avantage de ",(0,i.jsx)(n.strong,{children:"ne pas avoir \xe0 toucher au monolithe"})," dans le cas o\xf9 la portion de fonctionnalit\xe9 qu'on sort est ",(0,i.jsx)(n.strong,{children:"autonome"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pour \xe7a il faut qu'elle n'ait pas besoin de faire d'appel vers le monolithe, et que le monolithe n'ait pas besoin de faire d'appel vers elle non plus."}),"\n",(0,i.jsx)(n.li,{children:"Dans le cas o\xf9 la fonctionnalit\xe9 doit faire des appels vers le monolithe, il faudra que le monolithe expose des endpoints, et donc on devra le modifier."}),"\n",(0,i.jsxs)(n.li,{children:["Si c'est le monolithe qui doit faire des appels vers le microservice, alors on ne peut pas vraiment utiliser cette technique : on ne pourra pas faire le switch de la fonctionnalit\xe9 au niveau r\xe9seau.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On pourra \xe0 la place utiliser le pattern ",(0,i.jsx)(n.em,{children:"Branch by Abstraction"})," par exemple."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Exemple : HTTP Reverse Proxy"})," : HTTP permet tr\xe8s facilement de faire de la redirection.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Si notre monolithe re\xe7oit des requ\xeates HTTP, on va pouvoir mettre en place un proxy pour router les requ\xeates entre le monolithe et le microservice.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\xc9tape 1 : On met en place le proxy, et on le configure pour laisser passer les requ\xeates comme avant vers le monolithe.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\xc7a nous permet de nous assurer que la latence additionnelle d'une \xe9tape r\xe9seau de plus ne pose pas probl\xe8me."}),"\n",(0,i.jsx)(n.li,{children:"On peut aussi d\xe8s cette \xe9tape tester le m\xe9canisme de redirection pour v\xe9rifier qu'il n'y aura pas de probl\xe8me \xe0 le faire."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"\xc9tape 2 : on impl\xe9mente progressivement la fonctionnalit\xe9 dans le microservice, vers lequel il n'y a aucun trafic."}),"\n",(0,i.jsxs)(n.li,{children:["\xc9tape 3 : Quand le microservice est pr\xeat, on redirige le trafic vers lui.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut remettre le trafic vers le monolithe s'il y a un probl\xe8me."}),"\n",(0,i.jsxs)(n.li,{children:["Pour plus de facilit\xe9, la redirection peut \xeatre activ\xe9e avec un ",(0,i.jsx)(n.strong,{children:"feature toggle"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour ce qui est du proxy lui-m\xeame, \xe7a va d\xe9pendre du protocole. Si on a du HTTP, on peut partir sur un serveur connu comme NGINX.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ca peut \xeatre par exemple sur le path : rediriger ",(0,i.jsx)(n.code,{children:"/invoice/"})," vers le monolithe, et ",(0,i.jsx)(n.code,{children:"/payroll/"})," vers le microservice."]}),"\n",(0,i.jsx)(n.li,{children:"Si on route sur un contenu se trouvant dans le body d'une requ\xeate POST (NDLR : comme GraphQL), \xe7a risque d'\xeatre un peu plus compliqu\xe9."}),"\n",(0,i.jsxs)(n.li,{children:["En tout cas, l'auteur ",(0,i.jsx)(n.strong,{children:"d\xe9conseille de coder soi-m\xeame son proxy"})," si on a besoin de quelque chose de custom.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les quelques fois o\xf9 il a essay\xe9, il a obtenu de tr\xe8s mauvaises performances."}),"\n",(0,i.jsx)(n.li,{children:"Il conseille de plut\xf4t partir d'un proxy existant comme NGINX, et de le personnaliser avec du code (du lua pour NGINX)."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Dans le cas o\xf9 on voudrait que notre microservice supporte un autre protocole que celui du monolithe (par exemple gRPC au lieu de SOAP), on pourrait envisager faire la traduction dans le proxy.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pour l'auteur c'est une mauvaise id\xe9e : si on le fait pour plusieurs microservices, on va finir par complexifier ce proxy partag\xe9, alors qu'on voulait que les microservices soient ind\xe9pendants."}),"\n",(0,i.jsx)(n.li,{children:"L'auteur conseille plut\xf4t de faire ce mapping de protocole dans chacun des microservices qui en ont besoin, et \xe9ventuellement de faire en sorte qu'ils supportent les deux protocoles."}),"\n",(0,i.jsxs)(n.li,{children:["On peut aussi aller vers le ",(0,i.jsx)(n.strong,{children:"service mesh"})," o\xf9 chaque microservice a son proxy local, qui peut faire les redirections et mapping qu'il veut.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les outils les plus connus pour \xe7a sont ",(0,i.jsx)(n.strong,{children:"Linkerd"})," et ",(0,i.jsx)(n.strong,{children:"Istio"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Square a mis en place le service mesh et en a fait ",(0,i.jsx)(n.a,{href:"https://squ.re/2nts1Gc",children:"un article"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Exemple : FTP"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'entreprise suisse Homegate a utilis\xe9 le strangler fig pattern pour extraire des microservices, et en profiter pour changer le protocole utilis\xe9 pour uploader des fichiers : de FTP vers HTTP."}),"\n",(0,i.jsx)(n.li,{children:"Mais ils voulaient qu'il n'y ait pas de changement pour les utilisateurs."}),"\n",(0,i.jsx)(n.li,{children:"Donc ils ont mis en place une interception des appels FTP, et le remapping vers du HTTP pour taper dans le microservice responsable de \xe7a."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Exemple : Message Interception"})," : dans le cas de messages ",(0,i.jsx)(n.strong,{children:"asynchrones"})," \xe0 router vers le nouveau microservice.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Une premi\xe8re possibilit\xe9 est le ",(0,i.jsx)(n.strong,{children:"content-based routing"}),", o\xf9 un router va consommer tous les messages du message broker, et les queuer sur deux autres queues : une pour le monolithe, et une pour le microservice extrait.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ce pattern vient d'",(0,i.jsx)(t.f,{children:"Enterprise Integration Patterns"}),". Et de mani\xe8re g\xe9n\xe9rale l'auteur recommande ce livre pour des patterns de communication asynchrone."]}),"\n",(0,i.jsx)(n.li,{children:"L'avantage c'est qu'on n'a pas \xe0 toucher au monolithe."}),"\n",(0,i.jsx)(n.li,{children:"L'inconv\xe9nient c'est qu'on complexifie l\xe0 encore le syst\xe8me de communication plut\xf4t que les programmes. Donc l'auteur est plut\xf4t r\xe9ticent."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["L'autre possibilit\xe9 c'est la ",(0,i.jsx)(n.strong,{children:"selective consumption"}),", o\xf9 le monolithe et le microservice consomment sur la m\xeame queue, mais s\xe9lectionnent les messages qui leur sont destin\xe9s.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'avantage c'est qu'il n'y a pas de complexit\xe9 dans le m\xe9canisme de communication."}),"\n",(0,i.jsxs)(n.li,{children:["Parmi les d\xe9savantages :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le message broker pourrait ne pas supporter la consommation s\xe9lective."}),"\n",(0,i.jsx)(n.li,{children:"Il faut d\xe9ployer les changements dans le monolithe et dans le microservice en m\xeame temps pour que la consommation se passe bien."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Dans le cas o\xf9 on veut ",(0,i.jsx)(n.strong,{children:"ajouter des fonctionnalit\xe9s"})," ou fixer des bugs en m\xeame temps qu'on impl\xe9mente le microservice, il faut bien garder en t\xeate que ",(0,i.jsx)(n.strong,{children:"le rollback sera alors plus difficile"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il n'y a pas de solution facile : soit on accepte que le rollback sera plus compliqu\xe9 \xe0 faire, soit on freeze les features sur la partie extraite en microservice tant que l'extraction est en cours."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"pattern-ui-composition",children:"Pattern: UI Composition"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'interface utilisateur doit aussi \xeatre d\xe9coup\xe9e par consid\xe9rations business, pour obtenir des slices verticaux avec les microservices."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Exemple : Page Composition"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L'auteur a travaill\xe9 chez The Guardian, o\xf9 la migration a \xe9t\xe9 r\xe9alis\xe9e \xe0 plusieurs reprises page par page.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"La 2\xe8me fois en utilisant un CDN pour le routing redirig\xe9 progressivement vers les nouvelles pages."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"REA Group, une entreprise immobili\xe8re australienne, avait plusieurs \xe9quipes responsables de parties diff\xe9rentes du site, et donc la s\xe9paration par pages avait dans ce cas encore plus de sens."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Exemple : Widget Composition."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"De nombreuses entreprises utilisent la s\xe9paration en widgets pour suivre les microservices."}),"\n",(0,i.jsxs)(n.li,{children:["C'est le cas par exemple d'Orbits qui avait une UI d\xe9compos\xe9e en widgets majeurs sous la responsabilit\xe9 d'\xe9quipes diff\xe9rentes.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Quand ils ont voulu migrer vers des microservices, ils ont pu le faire incr\xe9mentalement, en suivant le d\xe9coupage des widgets c\xf4t\xe9 front."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Un des avantages de cette s\xe9paration c'est que m\xeame quand un des widgets ne fonctionne pas, le reste peut \xeatre affich\xe9."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["C\xf4t\xe9 ",(0,i.jsx)(n.strong,{children:"applications mobiles"})," (Android / iOS), on est face \xe0 des monolithes de fait, puisqu'il faut tout red\xe9ployer et faire ret\xe9l\xe9charger \xe0 l'utilisateur \xe0 chaque changement.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["De nombreuses entreprises (comme Spotify cf. ",(0,i.jsx)(n.a,{href:"https://www.youtube.com/watch?v=vuCfKjOwZdU",children:"video"}),") utilisent des composants affich\xe9s qui viennent du backend, pour ne pas avoir \xe0 red\xe9ployer l'app mobile quand ils y font un changement."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Exemple : Micro Frontends"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il s'agit de faire des composants ind\xe9pendants dans un frontend de type SPA, avec des bouts de React, Vue, etc. cohabitant et partageant de l'information, mais sans se g\xeaner."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"pattern-branch-by-abstraction",children:"Pattern: Branch by Abstraction"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Dans le cas o\xf9 le Strangler fig pattern n'est pas possible parce que le composant qu'on veut extraire est profond\xe9ment ancr\xe9 dans le monolithe (il re\xe7oit des appels des autres composants du monolithe par exemple), on peut utiliser cette technique."}),"\n",(0,i.jsxs)(n.li,{children:["On va travailler sur une version alternative du composant ",(0,i.jsx)(n.strong,{children:"\xe0 l'int\xe9rieur m\xeame du monolithe"}),", et l'activer \xe0 la fin."]}),"\n",(0,i.jsxs)(n.li,{children:["Il s'agit du m\xeame principe qu'une branche du gestionnaire de versions, \xe0 la diff\xe9rence que l\xe0 on travaille en int\xe9gration continue, et d\xe9ploiement continu (bien qu'on ne ",(0,i.jsx)(n.em,{children:"release"})," qu'au moment o\xf9 le microservice est pr\xeat).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L'auteur n'insiste pas trop sur les nombreux probl\xe8mes d'une branche de gestionnaire de version qui dure longtemps, mais nous conseille de jeter un œil au ",(0,i.jsx)(n.em,{children:"State of DevOps Report"})," pour nous en convaincre."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Concr\xe8tement :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["1 - On cr\xe9e une abstraction devant la fonctionnalit\xe9 qu'on va remplacer.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cette \xe9tape peut \xeatre plus ou moins complexe, en fonction de la taille de l'API qu'on expose aux autres modules."}),"\n",(0,i.jsxs)(n.li,{children:["Il peut \xeatre n\xe9cessaire de d\xe9finir un ",(0,i.jsx)(n.em,{children:"seam"})," \xe0 extraire."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["2 - On fait en sorte que les clients de notre fonctionnalit\xe9 utilisent cette abstraction pour y acc\xe9der.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"La migration doit \xeatre incr\xe9mentale."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["3 - On cr\xe9e une nouvelle impl\xe9mentation de la fonctionnalit\xe9.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"La nouvelle impl\xe9mentation dans le monolithe va juste faire des appels vers le microservice qu'on d\xe9veloppe \xe0 l'ext\xe9rieur du monolithe."}),"\n",(0,i.jsx)(n.li,{children:"On migre les fonctionnalit\xe9s de mani\xe8re incr\xe9mentale."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["4 - On pointe l'abstraction sur la nouvelle fonctionnalit\xe9 d\xe9velopp\xe9e.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Comme avec le strangler fig pattern, on aimerait bien avoir un feature toggle pour pouvoir activer et d\xe9sactiver la nouvelle fonctionnalit\xe9 sans changer le code."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["5 - On enl\xe8ve l'abstraction et l'ancienne impl\xe9mentation.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il se peut que l'abstraction ait un int\xe9r\xeat en elle-m\xeame, dans cas on peut \xe9ventuellement la laisser."}),"\n",(0,i.jsx)(n.li,{children:"Il faut bien penser \xe0 enlever les \xe9ventuels feature toggles."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Il existe une variante qui s'appelle ",(0,i.jsx)(n.strong,{children:"Verify branch by abstraction"})," : on appelle la nouvelle impl\xe9mentation d'abord, et si elle \xe9choue, on fallback sur l'ancienne."]}),"\n",(0,i.jsxs)(n.li,{children:["Quand l'utiliser :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Cette technique est \xe0 utiliser ",(0,i.jsx)(n.strong,{children:"\xe0 chaque fois qu'un changement va prendre du temps"}),", et qu'on veut ne pas emp\xeacher les autres d'avancer sur ce qu'ils font, tout en restant sur de l'int\xe9gration continue."]}),"\n",(0,i.jsx)(n.li,{children:"Pour les microservices, l'auteur conseille d'utiliser en priorit\xe9 le strangler fig pattern, parce qu'il est plus simple."}),"\n",(0,i.jsx)(n.li,{children:"Si on ne peut pas toucher au code du monolithe, alors il faut choisir une autre technique que celle-l\xe0."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"pattern-parallel-run",children:"Pattern: Parallel Run"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Quand on a besoin d'un ",(0,i.jsx)(n.strong,{children:"grand degr\xe9 de fiabilit\xe9"}),", on peut jouer les deux impl\xe9mentations en parall\xe8le, pour v\xe9rifier que le r\xe9sultat est bien le m\xeame.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il n'y a qu'une des impl\xe9mentations qui sera la source de v\xe9rit\xe9 : en g\xe9n\xe9ral l'ancienne jusqu'\xe0 ce qu'on d\xe9cide que la nouvelle a fait ses preuves et qu'on n'a plus besoin de l'ancienne."}),"\n",(0,i.jsxs)(n.li,{children:["On peut ",(0,i.jsx)(n.strong,{children:"v\xe9rifier le r\xe9sultat, mais aussi des \xe9l\xe9ments non-fonctionnels"})," comme le temps de r\xe9ponse et le nombre de timeouts."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Exemple : calcul de produits financiers d\xe9riv\xe9s"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'auteur a travaill\xe9 sur le syst\xe8me d'une banque, o\xf9 il s'agissait de refaire le calcul de produits d\xe9riv\xe9s."}),"\n",(0,i.jsx)(n.li,{children:"L'enjeu financier \xe9tant important, ils ont d\xe9cid\xe9 de jouer les deux syst\xe8mes en parall\xe8le, et de recueillir la diff\xe9rence entre les deux par des batchs journaliers."}),"\n",(0,i.jsx)(n.li,{children:"Ils ont fini par changer la source de v\xe9rit\xe9 vers le nouveau syst\xe8me apr\xe8s un mois, et ont enlev\xe9 l'ancien apr\xe8s quelques mois de plus."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour v\xe9rifier des side-effects qu'on n'a envie de faire qu'une fois (comme le fait d'envoyer un email), on peut utiliser des ",(0,i.jsx)(n.strong,{children:"spies"}),", comme dans les unit tests mais en production.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il vaut mieux faire les v\xe9rifications \xe0 partir du microservice plut\xf4t qu'\xe0 partir de la partie de la nouvelle fonctionnalit\xe9 qui est dans le monolithe, pour tester le plus possible de choses."}),"\n",(0,i.jsx)(n.li,{children:"Les v\xe9rifications peuvent \xeatre faites en asynchrone, en enregistrant les appels quelque part, et en v\xe9rifiant plus tard qu'on a bien eu la m\xeame chose que pour l'autre impl\xe9mentation."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["L'auteur conseille ",(0,i.jsx)(n.a,{href:"https://github.com/github/scientist",children:"Github Scientist"})," (existant en plusieurs langages) pour aider \xe0 impl\xe9menter ce pattern."]}),"\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"canary release"})," consiste \xe0 releaser d'abord aupr\xe8s d'un nombre r\xe9duit de clients.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"dark launching"})," consiste \xe0 d\xe9ployer pour tester, mais \xe0 ne pas releaser aupr\xe8s des clients."]}),"\n",(0,i.jsx)(n.li,{children:"Le parallel run est une forme de dark launching."}),"\n",(0,i.jsxs)(n.li,{children:["L'ensemble de ces techniques font partie de la ",(0,i.jsx)(n.strong,{children:"progressive delivery"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Ce pattern est tr\xe8s utile dans certains cas, mais a un co\xfbt de mise en place.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'auteur ne l'a utilis\xe9 qu'une ou deux fois dans sa carri\xe8re."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"pattern-decorating-collaborator",children:"Pattern: Decorating Collaborator"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Cette technique permet de ",(0,i.jsx)(n.strong,{children:"ne pas avoir \xe0 modifier le monolithe"}),", tout en permettant de ",(0,i.jsx)(n.strong,{children:"d\xe9clencher quelque chose \xe0 partir de ce que fait le monolithe"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["On laisse l'appel aller dans le monolithe et en sortir, et on l'intercepte \xe0 la sortie, pour \xe9ventuellement faire un appel vers notre microservice.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"De la logique va donc se retrouver dans le proxy qui d\xe9cide de faire l'appel au microservice. Attention \xe0 ce que cette logique ne devienne pas trop complexe."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Exemple : Loyalty Program"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On a un monolithe qui traite un ordre d'achat. On veut y ajouter une fonctionnalit\xe9 de points de fid\xe9lit\xe9, mais le monolithe est compliqu\xe9 et on ne veut pas le modifier maintenant."}),"\n",(0,i.jsx)(n.li,{children:"Le proxy va r\xe9cup\xe9rer la r\xe9ponse du monolithe avant qu'elle n'aille au client, et faire un appel au microservice qui s'occupe d'allouer les points de fid\xe9lit\xe9."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Si on n'a pas suffisamment d'infos suite \xe0 l'appel intercept\xe9, on ",(0,i.jsx)(n.strong,{children:"risque d'avoir besoin de refaire un appel au monolithe"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'auteur conseille d'y r\xe9fl\xe9chir \xe0 deux fois avant d'utiliser ce pattern dans le cas o\xf9 l'information ne se trouve pas dans l'appel intercept\xe9."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Une alternative \xe0 ce pattern peut \xeatre le pattern ",(0,i.jsx)(n.strong,{children:"change data capture"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"pattern-change-data-capture",children:"Pattern: Change Data Capture"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Cette technique est plus invasive que decorating collaborator : on va ",(0,i.jsx)(n.strong,{children:"\xe9couter les changements issus de la DB"}),", et y faire r\xe9agir notre microservice."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Exemple : Issuing Loyalty Cards"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On a un monolithe qui permet de cr\xe9er des comptes de fid\xe9lit\xe9, et renvoie simplement que la cr\xe9ation a fonctionn\xe9. Et on aimerait imprimer des cartes de fid\xe9lit\xe9 \xe0 chaque fois."}),"\n",(0,i.jsx)(n.li,{children:"Si on voulait utiliser le decorating collaborator pattern, il faudrait faire un appel suppl\xe9mentaire au monolithe pour obtenir les informations manquantes, et que le monolithe expose une API pour \xe7a."}),"\n",(0,i.jsx)(n.li,{children:"On va donc plut\xf4t \xe9couter ce que dit la DB quand le monolithe insert le compte de fid\xe9lit\xe9, et alimenter notre microservice d'impression avec \xe7a."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour ce qui est de la ",(0,i.jsx)(n.strong,{children:"mani\xe8re de l'impl\xe9menter"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Database triggers"})," : c'est un m\xe9canisme de stored procedures, fournis par la plupart des bases de donn\xe9es.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Attention \xe0 ne pas trop en utiliser, leur maintenance est difficile."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Transaction log pollers"})," : la plupart des DB \xe9crivent leurs donn\xe9es dans un fichier de log qui pr\xe9c\xe8de l'\xe9criture dans la base. On peut simplement lire ce fichier.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"C'est une des solutions les plus int\xe9ressantes selon l'auteur, avec la contrainte qu'on a besoin de s'adapter \xe0 la structure sp\xe9cifique du log de cette DB."}),"\n",(0,i.jsx)(n.li,{children:"On a de nombreux outils qui lisent les logs, y compris certains qui les mettent dans un message broker."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Batch delta copier"})," : il s'agirait d'\xe9crire un programme qui compare r\xe9guli\xe8rement le contenu de la DB, et qui r\xe9agit s'il y a un changement.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le probl\xe8me c'est de r\xe9ussir \xe0 savoir s'il y a un changement. Certaines DB le permettent, mais pas forc\xe9ment au niveau du row, auquel cas il faudrait ajouter nous-m\xeames des timestamps pour savoir qu'est-ce qui a chang\xe9 quand."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Ce pattern est utile quand on a besoin de r\xe9agir au monolithe, mais quand on ne peut pas vraiment mettre en place le strangler fig ou le decorating collaborator, et qu'on ne peut pas non plus changer le monolithe."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"4---decomposing-the-database",children:"4 - Decomposing the Database"}),"\n",(0,i.jsx)(n.h4,{id:"pattern-the-shared-database",children:"Pattern: The Shared Database"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Partager la DB veut dire ne pas avoir la possibilit\xe9 de ",(0,i.jsx)(n.strong,{children:"choisir ce qu'on cache"})," et ce qu'on montre, et m\xeame ne pas savoir ce qui est utilis\xe9 par d'autres."]}),"\n",(0,i.jsx)(n.li,{children:"Dans le cas o\xf9 plusieurs services peuvent modifier la DB partag\xe9e, on ne sait plus qui la contr\xf4le. Et la logique de modification est dupliqu\xe9e et peut diverger."}),"\n",(0,i.jsxs)(n.li,{children:["La DB doit \xeatre priv\xe9e \xe0 chaque microservice. Le partage publique d'une DB n'est appropri\xe9 que dans deux cas :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["1 - Une DB avec des ",(0,i.jsx)(n.strong,{children:"donn\xe9es de r\xe9f\xe9rence"})," read-only tr\xe8s stables (par exemple la liste des pays existants ou des codes postaux)."]}),"\n",(0,i.jsxs)(n.li,{children:["2 - Dans le cas du pattern ",(0,i.jsx)(n.strong,{children:"Database-as-a-Service Interface"}),", o\xf9 on partage une DB read-only, distincte de notre DB interne."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"M\xeame si la bonne solution dans la plupart des cas c'est de splitter la DB du monolithe dans les nouveaux microservices, on a des techniques qui permettent d'aller dans la bonne direction \xe0 peu de frais et d'arr\xeater l'h\xe9morragie, en ajoutant des abstractions par dessus la DB du monolithe."}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"pattern-database-view",children:"Pattern: Database View"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On cr\xe9e une view par dessus la DB, et on demande aux clients d'utiliser la view. De cette mani\xe8re on peut modifier la DB source comme si elle \xe9tait priv\xe9e, en adaptant la view pour qu'elle soit stable pour les clients."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Exemple : Database as a public contract"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'auteur travaillait dans une banque, et ils ont remarqu\xe9 qu'un probl\xe8me de performance majeur pouvait \xeatre corrig\xe9 en restructurant le sch\xe9ma de leur DB."}),"\n",(0,i.jsxs)(n.li,{children:["Malheureusement la DB \xe9tait utilis\xe9e par plus de 20 applications (sans m\xeame savoir lesquelles) partageant les m\xeames credentials.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Pour la question des credentials, l'auteur conseille ",(0,i.jsx)(n.em,{children:"HashiCorp Vault"})," qui permet de g\xe9rer un grand nombre de credentials facilement."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Ils ont mis en place des views comme solution temporaire pour pouvoir restructurer la DB sans impacter les clients."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Une view peut aussi simplement cacher des champs ou des tables, et permettre de d\xe9cider ce qu'on veut montrer ou non publiquement."}),"\n",(0,i.jsxs)(n.li,{children:["Les views ont quelques limitations :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Elles peuvent poser des probl\xe8mes de performance, et la version materialized de la view est plus efficace, mais contiendra des donn\xe9es anciennes, datant de la derni\xe8re fois qu'on a fait un update."}),"\n",(0,i.jsxs)(n.li,{children:["Elles sont ",(0,i.jsx)(n.strong,{children:"read-only"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Toutes les DB n'ont pas la fonctionnalit\xe9. Les DB relationnelles l'ont, et certaines DB NoSQL aussi (c'est le cas de ",(0,i.jsx)(a.U,{children:"Cassandra"})," et ",(0,i.jsx)(a.U,{children:"Mongo"})," par exemple)."]}),"\n",(0,i.jsx)(n.li,{children:"Il est probable que le sch\xe9ma de la view doive se trouver sur la m\xeame database engine que le sch\xe9ma initial."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"En termes d'ownership, l'auteur conseille de le donner \xe0 l'\xe9quipe qui a la charge de la DB source."}),"\n",(0,i.jsx)(n.li,{children:"Cette \xe9tape va dans la bonne direction, mais l'auteur d\xe9conseille de faire \xe7a \xe0 la place d'une d\xe9composition de la DB sans avoir de bonnes raisons."}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"pattern-database-wrapping-service",children:"Pattern: Database Wrapping Service"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Une autre mani\xe8re de cacher la DB pour arr\xeater l'h\xe9morragie c'est de la mettre derri\xe8re un service, et demander aux clients d'y acc\xe9der via ce service."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Exemple : banque australienne"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'auteur a travaill\xe9 pour une banque qui avait un probl\xe8me de scalabilit\xe9 de sa DB."}),"\n",(0,i.jsx)(n.li,{children:"Malheureusement les autorisations \xe9taient impl\xe9ment\xe9es sous forme de stored procedures, et les toucher \xe9tait trop dangereux."}),"\n",(0,i.jsx)(n.li,{children:"Alors ils ont d\xe9cid\xe9 de cr\xe9er un service pour cacher la DB, et faire en sorte que la nouvelle logique autour des d'autorisations ne soit plus dans la DB elle-m\xeame, mais impl\xe9ment\xe9e chez les clients."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["L'avantage de ce pattern par rapport \xe0 la database view c'est qu'on peut mettre de la ",(0,i.jsx)(n.strong,{children:"logique dans le service"}),", et qu'on peut aussi proposer \xe0 nos clients d'",(0,i.jsx)(n.strong,{children:"\xe9crire"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Par contre, il faudra que nos clients ",(0,i.jsx)(n.strong,{children:"utilisent l'API"})," pour y acc\xe9der, et pas du SQL."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Comme avec la database view, il s'agit plut\xf4t d'une solution temporaire avant de faire des changements plus profonds pour s\xe9parer la DB dans les bons services."}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"pattern-database-as-a-service-interface",children:"Pattern: Database-as-a-Service Interface"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Un des cas o\xf9 on peut exposer une DB de mani\xe8re publique c'est si les clients ont besoin de jouer des requ\xeates SQL directement sur les donn\xe9es qu'on propose.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Par exemple pour obtenir des insights business avec des outils comme Tableau. Martin Fowler parle du ",(0,i.jsx)(n.a,{href:"https://martinfowler.com/bliki/ReportingDatabase.html",children:"reporting database pattern"}),", mais l'auteur pr\xe9f\xe8re g\xe9n\xe9raliser le nom du pattern."]}),"\n",(0,i.jsxs)(n.li,{children:["Par contre, il faut bien qu'on ",(0,i.jsx)(n.strong,{children:"s\xe9pare cette DB publique de notre DB priv\xe9e"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["La DB expos\xe9e ne peut \xeatre que ",(0,i.jsx)(n.strong,{children:"read-only"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour impl\xe9menter, il propose que la DB publique soit synchronis\xe9e avec la DB priv\xe9e au travers d'un ",(0,i.jsx)(n.strong,{children:"mapping engine"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le mapping engine permet de garantir que les deux DB publique et priv\xe9e peuvent diverger et fonctionner ensemble quand m\xeame."}),"\n",(0,i.jsx)(n.li,{children:"Les \xe9critures doivent se faire via API."}),"\n",(0,i.jsx)(n.li,{children:"Il y aura donc une latence entre ce qu'on \xe9crit, et ce qu'on lit de la DB publique qui pourrait \xeatre en retard dans la synchronisation."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour ce qui est de la mani\xe8re d'impl\xe9menter le mapping engine :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Une premi\xe8re solution robuste peut \xeatre d'utiliser le ",(0,i.jsx)(n.strong,{children:"change data capture"})," de la DB. Pour l'exploiter, il y a des outils comme ",(0,i.jsx)(a.U,{children:"Debezium"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Une autre solution serait d'avoir un batch process qui met \xe0 jour r\xe9guli\xe8rement la DB publique."}),"\n",(0,i.jsxs)(n.li,{children:["Et une 3\xe8me option peut \xeatre d'\xe9mettre des ",(0,i.jsx)(n.strong,{children:"events"}),", et de reconstruire la DB \xe0 l'ext\xe9rieur \xe0 partir de ceux-ci."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Cette solution est plus avanc\xe9e que le database view pattern, et aussi plus difficile \xe0 mettre en place d'un point de vue technique."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"transferring-ownership",children:"Transferring Ownership"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les pr\xe9c\xe9dents patterns permettaient juste de mettre en pansement sur une grosse DB, mais il faut que les bonnes donn\xe9es aillent au bon endroit."}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"pattern-aggregate-exposing-monolith",children:"Pattern: Aggregate Exposing Monolith"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Quand on extrait un microservice, il y a parfois besoin d'acc\xe9der aux donn\xe9es qui sont encore dans le monolithe, ou de les modifier.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["S'il est l\xe9gitime d'un point de vue domaine que ces donn\xe9es soient poss\xe9d\xe9es par le monolithe, alors il peut ",(0,i.jsx)(n.strong,{children:"exposer des endpoints"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Les donn\xe9es sont regroup\xe9es en aggregates, et sont associ\xe9es \xe0 des machines \xe0 \xe9tat sous forme de code. Quand le monolithe ou un microservice fournit des endpoints, il donne en fait la possibilit\xe9 d'acc\xe9der \xe0 la machine \xe0 \xe9tat pour savoir ce qu'on va pouvoir ou non faire avec les donn\xe9es."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Le fait pour le monolithe de fournir des endpoints pour travailler avec certaines donn\xe9es, peut \xeatre une \xe9tape vers l'extraction d'un microservice organis\xe9 autour de ces donn\xe9es."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Faire des appels repr\xe9sente plus de travail"})," que de faire des queries directement en DB, ",(0,i.jsx)(n.strong,{children:"mais c'est bien mieux sur le long terme"}),". Il ne faut recourir aux autres techniques (database view pattern etc.) que si on ne peut pas changer le monolithe."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"pattern-change-data-ownership",children:"Pattern: Change Data Ownership"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Dans le cas o\xf9 la donn\xe9e dont le microservice a besoin se trouve encore dans la DB du monolithe, mais que c'est le microservice qui devrait la poss\xe9der, il faut la ",(0,i.jsx)(n.strong,{children:"d\xe9placer dans le microservice"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le monolithe devra alors appeler le microservice pour obtenir la donn\xe9e, ou demander des changements."}),"\n",(0,i.jsx)(n.li,{children:"La question de savoir si les donn\xe9es doivent appartenir au micorservice se r\xe9sout en se demandant si la logique qui contr\xf4le la donn\xe9e (automate \xe0 \xe9tat de l'aggragate, contr\xf4le des r\xe8gles de consistance etc.) se trouve dans le microservice."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"D\xe9placer de la donn\xe9e est difficile"}),". \xc7a peut impliquer de devoir casser des foreign keys, des transactions etc. ce sujet est trait\xe9 plus tard dans le chapitre."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"data-synchronization",children:"Data Synchronization"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On peut avoir besoin de synchronisation entre la DB extraite dans le microservice et celle rest\xe9e dans le monolithe.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple, si on utilise le strangler fig pattern et qu'on switch vers le nouveau microservice, puis qu'on veut revenir en arri\xe8re, il faut que la DB qui est rest\xe9e dans le monolithe soit synchronis\xe9e avec ce qui a pu \xeatre fait par le microservice et sa DB."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"pattern-synchronize-data-in-application",children:"Pattern: Synchronize Data in Application"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Cette technique a \xe9t\xe9 utilis\xe9e par l'auteur pour la migration des donn\xe9es des donn\xe9es m\xe9dicales danoises, d'une DB MySQL \xe0 une DB Riak, pour des raisons de performance.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le syst\xe8me ne pouvait pas \xeatre arr\xeat\xe9 pour suffisamment de temps, donc le changement a d\xfb se faire de mani\xe8re incr\xe9mentale."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Ca se passe en 3 \xe9tapes :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 1 : Bulk Synchronize Data"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On migre les donn\xe9es vers la nouvelle DB, par exemple avec un batch job."}),"\n",(0,i.jsxs)(n.li,{children:["Quand le job est termin\xe9, il peut y avoir encore les nouvelles donn\xe9es manquantes : on va tout de suite mettre en place un processus de ",(0,i.jsx)(n.strong,{children:"change data capture"})," pour alimenter la nouvelle DB depuis l'ancienne \xe0 chaque changement."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 2 : Synchronize on Write, Read from Old Schema"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les fonctionnalit\xe9s de production ne changent pas et utilisent toujours l'ancienne DB."}),"\n",(0,i.jsx)(n.li,{children:"La nouvelle DB est mise \xe0 jour r\xe9guli\xe8rement, et on peut faire des v\xe9rifications dessus pour s'assurer qu'elle est mise \xe0 jour correctement."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 3 : Synchronize on Write, Read from New Schema"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On continue d'\xe9crire dans les deux DB, mais on lit depuis la nouvelle pour alimenter la production."}),"\n",(0,i.jsx)(n.li,{children:"Une fois qu'on a suffisamment confiance dans la nouvelle DB, on peut \xe9liminer l'ancienne."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Ce pattern peut \xeatre pertinent quand on ",(0,i.jsx)(n.strong,{children:"migre la DB avant de migrer le code"}),", pendant une extraction de microservice."]}),"\n",(0,i.jsx)(n.li,{children:"Ce pattern nous donne l'avantage de facilement pouvoir faire le switch du microservice vers le monolithe, avec une DB d\xe9j\xe0 s\xe9par\xe9e."}),"\n",(0,i.jsxs)(n.li,{children:["Attention \xe0 ne pas utiliser ce pattern si \xe0 un moment donn\xe9, \xe0 la fois le monolithe et le microservice doivent \xe9crire dans leurs DBs.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"C'est par exemple une mauvaise id\xe9e si on utilise un syst\xe8me de canary release."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"pattern-tracer-write",children:"Pattern: Tracer Write"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ce pattern consiste \xe0 d\xe9placer les donn\xe9es ",(0,i.jsx)(n.strong,{children:"progressivement"})," vers le microservice.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les donn\xe9es sont initialement lues et \xe9crites dans le monolithe."}),"\n",(0,i.jsx)(n.li,{children:"D\xe8s qu'un bloc de donn\xe9es est d\xe9plac\xe9, le microservice devient la source de v\xe9rit\xe9 pour ce bloc, et le monolithe comme les autres microservices devront le lire depuis l\xe0."}),"\n",(0,i.jsx)(n.li,{children:"On continue jusqu'\xe0 ce que l'ensemble des donn\xe9es \xe0 d\xe9placer soient lues depuis le microservice (tout en restant synchronis\xe9es dans le monolithe en cas de besoin de switch)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour ce qui est de la synchronisation elle-m\xeame :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L'auteur conseille d'envoyer les commandes d'\xe9criture \xe0 la bonne source de v\xe9rit\xe9, et d'",(0,i.jsx)(n.strong,{children:"\xe9viter les m\xe9canisme de synchronisation \xe0 deux sens"})," (\xe9crire dans n'importe quelle source et avoir une synchronisation en arri\xe8re-plan), parce que c'est difficile \xe0 impl\xe9menter."]}),"\n",(0,i.jsxs)(n.li,{children:["Il faut s'attendre \xe0 avoir une certaine latence entre les deux sources, et donc pr\xe9voir une ",(0,i.jsx)(n.strong,{children:"eventual consistency"}),", \xe9tant donn\xe9 que pour certaines donn\xe9es la premi\xe8re sera la source de v\xe9rit\xe9, et pour d'autres donn\xe9es ce sera la 2\xe8me."]}),"\n",(0,i.jsx)(n.li,{children:"Si on a un syst\xe8me event driven, ou un m\xe9canisme de change data capture, on aura des facilit\xe9s \xe0 impl\xe9menter le pattern."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"L'auteur conseille de pr\xe9voir un m\xe9canisme de v\xe9rification de l'int\xe9grit\xe9 des donn\xe9es entre les deux sources (par exemple des scripts SQL), pour s'assurer que tout va bien."}),"\n",(0,i.jsx)(n.li,{children:"Ce pattern a notamment \xe9t\xe9 utilis\xe9 chez Square, pour extraire de mani\xe8re incr\xe9mentale un microservice pour d\xe9coupler leur syst\xe8me de commande de nourriture."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"splitting-apart-the-database",children:"Splitting Apart the Database"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On parle ici de s\xe9paration de ",(0,i.jsx)(n.strong,{children:"sch\xe9mas logiques"}),", qui peuvent \xeatre sur une m\xeame database engine, ou sur diff\xe9rentes database engines."]}),"\n",(0,i.jsxs)(n.li,{children:["L'auteur conseille d'utiliser un outil pour g\xe9rer les migrations sur chaque DB. Il conseille en particulier ",(0,i.jsx)(a.U,{children:"FlywayDB"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Pour extraire un microservice, on doit extraire le code, et la donn\xe9e qui lui appartient. On peut faire :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"D'abord le split de la DB"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On se donne alors la possibilit\xe9 de switcher vers le nouveau microservice ou vers le monolithe sans perte de donn\xe9es."}),"\n",(0,i.jsx)(n.li,{children:"Le probl\xe8me c'est qu'on n'aura pas de gain court terme quand on aura extrait la donn\xe9e."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pattern: Repository per bounded context"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On a en g\xe9n\xe9ral une couche de repository qui permet de mapper le code \xe0 la DB. Il s'agit ici de ",(0,i.jsx)(n.strong,{children:"d\xe9couper ce repository"})," en suivant les lignes de nos bounded contexts."]}),"\n",(0,i.jsx)(n.li,{children:"\xc7a va nous aider \xe0 y voir plus clair sur quel bounded context utilise quelle donn\xe9e ext\xe9rieure \xe0 lui."}),"\n",(0,i.jsxs)(n.li,{children:["On peut ajouter \xe0 \xe7a un outil pour visualiser la structure de la DB, comme ",(0,i.jsx)(a.U,{children:"SchemaSpy"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pattern: Database per bounded context"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Avant de s\xe9parer le code de chaque bounded context en microservice, on va ici s\xe9parer les donn\xe9es."}),"\n",(0,i.jsx)(n.li,{children:"Chez ThoughtWorks, un m\xe9canisme de calcul a \xe9t\xe9 modularis\xe9, avec chaque module ayant sa DB, ce qui a fait un excellent exemple de modular monolith. L'extraction de microservices n'a jamais \xe9t\xe9 faite."}),"\n",(0,i.jsxs)(n.li,{children:["L'auteur ",(0,i.jsx)(n.strong,{children:"recommande ce pattern aux startups"})," qui ne devraient pas encore extraire de microservices, mais qui peuvent comme \xe7a r\xe9duire la complexit\xe9 de leur syst\xe8me."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"D'abord le split du code"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'avantage c'est qu'on va avoir des r\xe9sultats rapides en ayant un code plus modulaire, et un artefact d\xe9ployable ind\xe9pendamment."}),"\n",(0,i.jsx)(n.li,{children:"L'inconv\xe9nient c'est que parfois les \xe9quipes migrent le code, et ne migrent pas la donn\xe9e ensuite, ce qui am\xe8ne de la douleur \xe0 long terme."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pattern: Monolith as data access layer"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Au lieu de laisser notre microservice acc\xe9der \xe0 de la donn\xe9e qui devrait lui appartenir dans la DB du monolithe, on expose une API dans le monolithe, et le microservice l'utilise."}),"\n",(0,i.jsx)(n.li,{children:"Il faut le faire seulement si du code g\xe9rant cette donn\xe9e est encore dans le monolithe."}),"\n",(0,i.jsxs)(n.li,{children:["\xc7a permet de ",(0,i.jsx)(n.strong,{children:"cacher l'information"}),", le temps de migrer la donn\xe9e et son code vers le microservice (ou dans le cas o\xf9 on aurait d\xe9cid\xe9 de ne pas d\xe9placer la donn\xe9e)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pattern: Multischema storage"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"La migration des donn\xe9es prend du temps, mais on peut profiter des nouvelles features pour aller dans le bon sens et placer la donn\xe9e dans le microservice."}),"\n",(0,i.jsx)(n.li,{children:"On se retrouve alors temporairement avec de la donn\xe9e dans le microservice, et de la donn\xe9e pas encore migr\xe9e dans le monolithe."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Split les deux en m\xeame temps"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'auteur le d\xe9conseille : c'est une trop grosse \xe9tape qui ne permet pas d'avoir du feedback suffisamment rapidement sur ce qu'on fait."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"schema-separation-examples",children:"Schema Separation Examples"}),"\n",(0,i.jsx)(n.h4,{id:"pattern-split-table",children:"Pattern: Split Table"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On peut avoir des cas o\xf9 ",(0,i.jsx)(n.strong,{children:"une table contient des donn\xe9es qui doivent aller dans deux microservices diff\xe9rents"}),". Dans ce cas, il faut les ",(0,i.jsx)(n.strong,{children:"s\xe9parer dans deux tables"})," avant de les extraire aux bons endroits.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Un exemple peut \xeatre une table qui contient une colonne ",(0,i.jsx)(n.em,{children:"item"})," et une colonne ",(0,i.jsx)(n.em,{children:"stock level"}),", avec les donn\xe9es de ces colonnes devant respectivement aller vers le service ",(0,i.jsx)(n.em,{children:"Catalog"})," et ",(0,i.jsx)(n.em,{children:"Warehouse"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On va dans ce cas simplement extraire les deux colonnes dans deux tables diff\xe9rentes."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Un exemple plus complexe peut \xeatre d'avoir une colonne ",(0,i.jsx)(n.em,{children:"status"}),", qui est \xe9crite par du code appartenant \xe0 deux bounded contexts \xe0 extraire : ",(0,i.jsx)(n.em,{children:"Customer Management"})," le met \xe0 jour pour indiquer si l'utilisateur est v\xe9rifi\xe9 ou non, et ",(0,i.jsx)(n.em,{children:"Finance"})," peut le mettre \xe0 jour pour indiquer que l'utilisateur est suspendu parce qu'il n'a pas pay\xe9.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Dans ce cas pr\xe9cis, on pourrait d\xe9cider que cette colonne doit appartenir \xe0 ",(0,i.jsx)(n.em,{children:"Customer Management _parce qu'il s'agit de g\xe9rer les utilisateurs, auquel cas _Finance"})," devra faire un appel vers ",(0,i.jsx)(n.em,{children:"Customer Management"})," \xe0 chaque fois qu'il faudra suspendre un utilisateur."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:'Il faut bien un seul bounded context qui "poss\xe8de" chaque donn\xe9e.'}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"pattern-move-foreign-key-relationship-to-code",children:"Pattern: Move Foreign-Key Relationship to Code"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On a r\xe9guli\xe8rement besoin de faire des ",(0,i.jsx)(n.strong,{children:"foreign keys"})," d'une table \xe0 une autre, \xe0 la fois pour que la DB garantisse la consistance des donn\xe9es, et aussi pour des raisons de performance quand on fait des jointures.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Dans le cas o\xf9 l'association doit \xeatre faite vers une table poss\xe9d\xe9e par un autre bounded context, on ne peut pas faire de foreign key DB, puisque ",(0,i.jsx)(n.strong,{children:"les deux tables sont dans des DB diff\xe9rentes"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["La solution est de casser la relation de foreign key dans la DB, et de faire le lien dans le code.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["C\xf4t\xe9 ",(0,i.jsx)(n.strong,{children:"performance"})," ce sera beaucoup moins bien. En fonction du besoin, on peut \xeatre amen\xe9 \xe0 faire des recherches group\xe9es, ou \xe0 cr\xe9er un cache local de la donn\xe9e de l'autre microservice, contre laquelle on veut faire une jointure.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Des outils comme ",(0,i.jsx)(a.U,{children:"Jaeger"})," permettent de mesurer la latence, pour voir si m\xeame plus lente, elle n'est pas acceptable quand m\xeame."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["L'autre probl\xe8me c'est la ",(0,i.jsx)(n.strong,{children:"consistance"})," qui n'est plus garantie par la DB : la donn\xe9e qui est li\xe9e \xe0 notre donn\xe9e peut \xeatre supprim\xe9e sans qu'on ne le sache.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On pourrait v\xe9rifier qu'aucun microservice n'a de lien vers nos donn\xe9es avant d'en supprimer. Mais il faudrait alors un m\xe9canisme de lock, et il faudrait le faire avec de nombreux services. L'auteur le d\xe9conseille fortement."}),"\n",(0,i.jsx)(n.li,{children:"Une meilleure solution peut \xeatre que le service ayant besoin du lien prenne en compte que l'autre peut \xe0 tout moment r\xe9pondre que l'objet n'existe plus."}),"\n",(0,i.jsx)(n.li,{children:"On pourrait aussi consommer des events de surpression dans les services qui ont besoin du lien, pour pouvoir mettre \xe0 jour leur cache local de la DB du service vis\xe9 par le lien."}),"\n",(0,i.jsxs)(n.li,{children:["Et une derni\xe8re solution acceptable peut aussi \xeatre de ne pas permettre la suppression de rows qui pourraient \xeatre li\xe9es dans d'autres microservices.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"La solution peut \xeatre dans ce cas de faire un soft delete avec un champ."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Attention \xe0 ne pas casser une relation entre des choses qui devraient faire partie du m\xeame aggregate.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Par exemple, si on a une table ",(0,i.jsx)(n.em,{children:"Order"}),", et une table ",(0,i.jsx)(n.em,{children:"OrderLines"})," qui contient le d\xe9tail des articles command\xe9s, ils devraient clairement faire partie du m\xeame aggregate et rester ensemble. Les s\xe9parer m\xe8nerait \xe0 des probl\xe8mes d'int\xe9grit\xe9."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"exemple--shared-static-data",children:"Exemple : Shared Static Data"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On parle ici de ",(0,i.jsx)(n.strong,{children:"reference data"}),", par exemple des codes de pays qu'on finit par mettre en base."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pattern: duplicate static reference data"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Chaque microservice va dupliquer la donn\xe9e dans sa DB."}),"\n",(0,i.jsx)(n.li,{children:"En fonction du contexte, une inconsistance de ces donn\xe9es entre microservices peut ou non \xeatre un probl\xe8me important."}),"\n",(0,i.jsx)(n.li,{children:"Dans le cas o\xf9 \xe7a l'est, on peut avoir un syst\xe8me de synchronisation qui fonctionne en arri\xe8re-plan."}),"\n",(0,i.jsx)(n.li,{children:"Ce pattern est \xe0 utiliser rarement, si on a de grands sets de donn\xe9es, ou si on doit faire des jointures contre ces donn\xe9es."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pattern: Dedicated reference data schema"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On met en place une DB publique, partag\xe9e entre plusieurs microservies."}),"\n",(0,i.jsx)(n.li,{children:"Le fait qu'elle soit stable fait que la rendre publique n'est pas tr\xe8s dangereux."}),"\n",(0,i.jsx)(n.li,{children:"Attention par contre aux potentiels changements de structure qui seraient tr\xe8s difficiles \xe0 g\xe9rer."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pattern: Static reference data library"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Dans le cas o\xf9 notre jeu de donn\xe9es est petit (comme les codes de pays), on peut les mettre sous forme de code dans une librairie install\xe9e par les microservices qui en ont besoin."}),"\n",(0,i.jsx)(n.li,{children:"Par contre, un point n\xe9gatif c'est que la librairie peut cr\xe9er un besoin de d\xe9ploiement de plusieurs microservices en m\xeame temps dans le cas o\xf9 son contenu change : on cr\xe9e de la d\xe9pendance entre microservices."}),"\n",(0,i.jsx)(n.li,{children:"Ce pattern est particuli\xe8rement utile quand il est acceptable d'avoir plusieurs versions de la donn\xe9e dans divers microservices."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Pattern: Static reference data service"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut cr\xe9er un microservice \xe0 consulter pour conna\xeetre les reference data."}),"\n",(0,i.jsx)(n.li,{children:"Si la cr\xe9ation et le d\xe9ploiement d'un microservice simple prend des jours ou plus dans notre organisation, alors ce pattern ne vaut pas le coup, sinon on peut le faire."}),"\n",(0,i.jsxs)(n.li,{children:["Typiquement ce serait un bon candidat pour du ",(0,i.jsx)(n.em,{children:"Function-as-a-Service"})," dans des plateformes cloud."]}),"\n",(0,i.jsx)(n.li,{children:"C\xf4t\xe9 performance, ce pattern peut \xeatre plus rapide que de mettre les donn\xe9es en base puisque le microservice pourra les avoir sous forme de code."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour r\xe9sumer :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Si on n'a pas besoin que les donn\xe9es soient consistantes entre les services, on peut utiliser une librairie partag\xe9e.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Si la donn\xe9e est plus grosse on peut la mettre en DB, localement dans chaque service."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Si la donn\xe9e a besoin d'\xeatre consistante, on peut cr\xe9er un service d\xe9di\xe9.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Si la cr\xe9ation d'un service co\xfbte trop cher, on peut cr\xe9er une DB partag\xe9e pour ces donn\xe9es."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"transactions",children:"Transactions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["En g\xe9n\xe9ral les DB garantissent les transactions ACID :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Atomicity"})," : soit l'ensemble de la transaction r\xe9ussit, soit rien ne r\xe9ussit."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Consistency"})," : l'\xe9tat de la DB reste consistant avec toutes les contraintes respect\xe9es avant et apr\xe8s la transaction."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Isolation"})," : plusieurs transactions peuvent avoir lieu en m\xeame temps sans se g\xeaner."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Durability"})," : une transaction valid\xe9e reste en base, m\xeame en cas de panne."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["En s\xe9parant les donn\xe9es en plusieurs sch\xe9mas de DB, on perd la possibilit\xe9 d'utiliser les transactions pour garantir la consistance de nos donn\xe9es entre bounded contexts.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les transactions sont quand m\xeame utilis\xe9es pour les donn\xe9es au sein des bounded contexts."}),"\n",(0,i.jsx)(n.li,{children:"L'atomicity notamment peut poser probl\xe8me d'un point de vue consistance des donn\xe9es."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour r\xe9pondre \xe0 ce probl\xe8me on a plusieurs solutions, parmi elles il y a les ",(0,i.jsx)(n.strong,{children:"transactions distribu\xe9es"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"Two-Phase Commit"})," (2PC) est la technique la plus connue de transaction distribu\xe9e."]}),"\n",(0,i.jsxs)(n.li,{children:["La transaction est s\xe9par\xe9e en deux phases :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["1 - Une phase de ",(0,i.jsx)(n.strong,{children:"vote"})," o\xf9 le coordinateur central contacte toutes les parties prenantes de la transaction, pour leur demander si la transaction est possible pour eux.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Elles mettent un lock sur les donn\xe9es \xe0 modifier puis r\xe9pondent OK."}),"\n",(0,i.jsx)(n.li,{children:"Si toutes les parties prenantes sont OK, on peut aller \xe0 la phase 2, sinon on arr\xeate la transaction."}),"\n",(0,i.jsx)(n.li,{children:"Si on arr\xeate la transaction, un message d'annulation sera envoy\xe9 \xe0 ceux qui avaient dit OK pour les d\xe9bloquer."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["2 - Une phase de ",(0,i.jsx)(n.strong,{children:"commit"})," o\xf9 le coordinateur demande \xe0 toutes les parties prenantes (qui ont d\xe9j\xe0 pr\xe9par\xe9 le changement \xe0 faire et ont bloqu\xe9 les donn\xe9es) d'appliquer les modifications."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Ce syst\xe8me 2PC a des probl\xe8mes :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"La latence peut conduire \xe0 avoir des incoh\xe9rences temporaires sur les donn\xe9es de chaque syst\xe8me."}),"\n",(0,i.jsx)(n.li,{children:"On a un gros risque de probl\xe8mes type deadlock o\xf9 un des serveurs ne r\xe9pond pas alors qu'il \xe9tait cens\xe9 avoir bloqu\xe9 les donn\xe9es etc."}),"\n",(0,i.jsx)(n.li,{children:"On lock des tables pour des dur\xe9es potentiellement importantes, qui impactent la capacit\xe9 \xe0 traiter d'autres op\xe9rations."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Pour l'auteur, les transactions distribu\xe9es ont trop de probl\xe8mes pour valloir le coup : il vaut mieux ne pas les utiliser."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Une autre alternative simple peut \xeatre tout simplement de ",(0,i.jsx)(n.strong,{children:"laisser les donn\xe9es fortement li\xe9es ensemble dans la m\xeame DB"}),", temporairement ou de mani\xe8re permanente."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"sagas",children:"Sagas"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Une derni\xe8re solution pour r\xe9pondre au probl\xe8me des transactions distribu\xe9es est l'utilisation de ",(0,i.jsx)(n.strong,{children:"sagas"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Il s'agit de ",(0,i.jsx)(n.strong,{children:"d\xe9couper la transaction en plus petites t\xe2ches"}),", r\xe9alisables chacune au sein de transactions ACID garanties par des DBs.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'ensemble n'est pas atomique, et c'est \xe0 nous de choisir quelle action de compensation il faut faire dans le cas o\xf9 la saga \xe9choue \xe0 une des \xe9tapes de la saga."}),"\n",(0,i.jsx)(n.li,{children:"Il faut penser \xe0 sauvegarder les informations d'une saga qui n'a pas pu aller jusqu'au bout."}),"\n",(0,i.jsxs)(n.li,{children:["Il existe deux mani\xe8res de g\xe9rer l'\xe9chec \xe0 une des \xe9tapes de la saga :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["La ",(0,i.jsx)(n.strong,{children:"backward recovery"})," consiste \xe0 ex\xe9cuter des actions qui vont annuler ce qui a \xe9t\xe9 fait."]}),"\n",(0,i.jsxs)(n.li,{children:["La ",(0,i.jsx)(n.strong,{children:"forward recovery"})," consiste \xe0 continuer la transaction, en r\xe9essayant des \xe9tapes par exemple."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Il n'est pas toujours possible de d\xe9faire enti\xe8rement une saga.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Par exemple, si un email a \xe9t\xe9 envoy\xe9 pour confirmer une commande qui a ensuite \xe9chou\xe9, l'",(0,i.jsx)(n.strong,{children:"action de compensation"})," qu'on peut faire c'est renvoyer un email pour dire qu'on est d\xe9sol\xe9 et qu'on s'est tromp\xe9."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"On peut mixer les mani\xe8res, par exemple en consid\xe9rant qu'on rollback une commande jusqu'au moment o\xf9 on arrive \xe0 l'\xe9tape o\xf9 il ne reste que l'\xe9tape d'envoi, qu'on va plut\xf4t r\xe9essayer si elle \xe9choue."}),"\n",(0,i.jsxs)(n.li,{children:["On peut essayer de ",(0,i.jsx)(n.strong,{children:"placer les \xe9tapes"})," qui n\xe9cessiteraient les actions de compensation ",(0,i.jsx)(n.strong,{children:"les plus co\xfbteuses vers la fin de la saga"}),", pour faciliter le rollback dans la majorit\xe9 des cas.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Exemple : mettre l'attribution de points de fid\xe9lit\xe9 apr\xe8s les \xe9tapes les plus critiques du processus de validation d'une commande."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["C\xf4t\xe9 impl\xe9mentation, on a deux types de sagas :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"orchestrated sagas"})," : on a un coordinateur (ou orchestrateur) qui va contenir l'ensemble de la logique de la saga, et qui va s'occuper d'appeller les divers services dans l'ordre, \xe0 la fois pour faire les actions n\xe9cessaires, mais aussi pour faire les actions de compensation.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["NDLR : Vlad Khononov appelle \xe7a des ",(0,i.jsx)(n.em,{children:"process managers"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"L'avantage d'avoir la logique de la saga dans un m\xeame endroit c'est qu'on peut plus facilement comprendre ce qui est fait."}),"\n",(0,i.jsxs)(n.li,{children:["Le d\xe9savantage c'est d'avoir une forme de ",(0,i.jsx)(n.strong,{children:"couplage"})," entre microservices, et d'avoir une tendance \xe0 ce que la logique aille dans l'orchestrateur, rendant les ",(0,i.jsx)(n.strong,{children:"microservices an\xe9miques"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pour mitiger un peu le probl\xe8me, on peut s'assurer d'avoir des orchestrateurs bien s\xe9par\xe9s pour chaque saga, aidant \xe0 pousser \xe0 garder la logique (du coup r\xe9utilis\xe9e par chaque orchestrateur) dans les microservices."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Il existe des outils appel\xe9s BPM (business process modeling), utilis\xe9s par les non d\xe9veloppeurs pour d\xe9finir des process business par drag-and-drop.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'auteur les d\xe9conseille parce qu'ils sont en g\xe9n\xe9ral utilis\xe9s par les d\xe9veloppeurs, et sont difficiles \xe0 versionner ou \xe0 tester de mani\xe8re automatis\xe9e."}),"\n",(0,i.jsx)(n.li,{children:"Il est plus facile de projeter des repr\xe9sentation des process business \xe0 partir du code (si c'est ce qu'on veut faire)."}),"\n",(0,i.jsxs)(n.li,{children:["Si vraiment on veut explorer des solutions BPM qui essayent d'\xeatre developer-friendly, il y a ",(0,i.jsx)(a.U,{children:"Camunda"})," et ",(0,i.jsx)(a.U,{children:"Zeebe"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"choreographed sagas"})," : on a un ensemble de services qui ",(0,i.jsx)(n.strong,{children:"\xe9mettent des events, et r\xe9agissent eux-m\xeames \xe0 des events"}),", et l'ensemble de ces noeuds forme la saga.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les services ne savent pas qui \xe9coute leur event, elles \xe9mettent simplement le bon event au bon moment, et il peut \xeatre g\xe9r\xe9 par qui est int\xe9ress\xe9.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Exemple : le service ",(0,i.jsx)(n.em,{children:"Warehouse"})," r\xe9agit \xe0 l'event de commande initi\xe9e, et \xe9met un event pour dire que son \xe9tape est faite, ou alors qu'il n'a pas pu le faire. Et d'autres services g\xe8reront les cons\xe9quences en \xe9coutant les bons events."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Comme on n'a pas d'entit\xe9 centrale qui coordonne les choses, la logique ne peut pas se centraliser non plus, et on obtient naturellement une forme de ",(0,i.jsx)(n.strong,{children:"d\xe9couplage"})," entre microservices."]}),"\n",(0,i.jsxs)(n.li,{children:["Le d\xe9savantage c'est qu'il est plus difficile d'appr\xe9hender le process de la saga dans son ensemble. On a aussi du mal \xe0 savoir dans quel \xe9tat se trouve la saga.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["La solution est d'ajouter une ",(0,i.jsx)(n.strong,{children:"correlation ID"})," dans l'ensemble des events de la saga, puis de les consommer pour en projeter une vue compr\xe9hensible. On peut avoir des services dont c'est justement le r\xf4le."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["On peut utiliser l'un ou l'autre des types de sagas en fonction des cas, mais aussi mixer les types au sein d'une m\xeame saga.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple une choreographed saga plus large, dont une des \xe9tapes est g\xe9r\xe9e sous forme d'orchestrated saga."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Selon l'auteur, m\xeame si les choreographed sagas ont la difficult\xe9 d'utiliser l'event driven architecture, les avantages en termes de d\xe9couplage qu'elles apportent valent le coup."}),"\n",(0,i.jsxs)(n.li,{children:["L'autre conseil c'est que ",(0,i.jsx)(n.strong,{children:"l'orchestrated saga est acceptable si une m\xeame \xe9quipe est en charge de l'ensemble de la saga"}),". Si plusieurs \xe9quipes sont impliqu\xe9es, il vaut mieux une version choreographed."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["L'utilisation des sagas a l'avantage de ",(0,i.jsx)(n.strong,{children:"mod\xe9liser explicitement"})," les process business importants."]}),"\n",(0,i.jsxs)(n.li,{children:["Pour aller plus en profondeur sur ce sujet, l'auteur recommande la chapitre 4 de ",(0,i.jsx)(t.f,{children:"Building Microservices"}),", et ",(0,i.jsx)(t.f,{children:"Enterprise Integration Patterns"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"chapter-5---growing-pains",children:"Chapter 5 - Growing Pains"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ce chapitre pr\xe9sente les principaux probl\xe8mes qu'on rencontre habituellement avec les microservices, avec le moment (nombre de microservices) o\xf9 on les rencontre en g\xe9n\xe9ral."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Ownership at Scale"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L'auteur reprend le mod\xe8le de types d'ownerships de Martin Fowler :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"Strong code ownership"})," : chaque service a une \xe9quipe owner qui peut y apporter des modifications. Les autres doivent faire des PRs."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"Weak code ownership"})," : chaque service a une \xe9quipe owner, mais les autres \xe9quipes peuvent aussi y faire des changements sans demander."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.em,{children:"Collective code ownership"})," : il n'y a pas d'\xe9quipes assign\xe9es aux services."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"On a souvent un collective ownership au d\xe9but, et jusqu'\xe0 environ 20 personnes c'est OK pour l'auteur. Mais avec l'effectif de d\xe9veloppeurs qui grandit, si on garde ce type d'ownership on obtiendra un distributed big ball of mud."}),"\n",(0,i.jsxs)(n.li,{children:["La solution c'est d'utiliser le ",(0,i.jsx)(n.strong,{children:"strong code ownership"}),", ce qui permettra aussi d'avoir des \xe9quipes centr\xe9es autour de domaines business."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Breaking changes"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les microservices communiquent entre eux, mais doivent \xeatre modifiables sans impacter les autres microservices.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Si la donn\xe9e qu'ils envoient ou leur comportement changent, ils impacteront les autres microservices, cassant des fonctionnalit\xe9s."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Ce probl\xe8me survient en g\xe9n\xe9ral assez t\xf4t, d\xe8s que plusieurs \xe9quipes g\xe8rent des microservices qui communiquent entre eux.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Un des signes peut \xeatre aussi le fait de chercher \xe0 d\xe9ployer plusieurs services en m\xeame temps pour plusieurs \xe9quipes."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les solutions sont :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["De faire du ",(0,i.jsx)(n.strong,{children:"contract testing"}),", ou au moins rendre le sch\xe9ma de l'API publique du microservice explicite, et difficile \xe0 changer.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Des outils comme ",(0,i.jsx)(a.U,{children:"protolock"})," permettent d'emp\xeacher les changements dans les sch\xe9mas de communication."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["D'",(0,i.jsx)(n.strong,{children:"\xe9viter de casser les contrats"})," le plus possible.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple ajouter une nouvelle fonction expos\xe9e en laissant l'ancienne aussi."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["De donner le temps aux autres services de migrer si on casse le contrat.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut faire tourner deux versions du microservice en m\xeame temps, mais il faudra que \xe7a dure peu de temps."}),"\n",(0,i.jsx)(n.li,{children:"L'autre solution, privil\xe9gi\xe9e par l'auteur, est d'impl\xe9menter les deux versions de l'API dans le m\xeame microservice."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reporting"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les cas d'usage de reporting, de type OLAP, deviennent plus difficiles \xe0 faire quand la DB est s\xe9par\xe9e en plusieurs morceaux."}),"\n",(0,i.jsxs)(n.li,{children:["Ce probl\xe8me survient assez t\xf4t, quand on commence \xe0 d\xe9composer le sch\xe9ma de DB de notre monolithe.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Parfois on oublie les personnes qui font de l'analyse par dessus la DB du monolithe, et on s'en rend compte quand le travail de migration est d\xe9j\xe0 avanc\xe9."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Si on veut garder la possibilit\xe9 pour les personnes qui font l'analyse de continuer \xe0 le faire avec des requ\xeates SQL dans une DB, on peut ",(0,i.jsx)(n.strong,{children:"cr\xe9er une DB publique"})," juste pour eux.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cette DB publique serait alors aliment\xe9e par les microservices qui sont maintenant les owners des bouts de la DB qui doit \xeatre utilis\xe9e pour l'analyse."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["L'auteur renvoie vers le chapitre 5 de ",(0,i.jsx)(t.f,{children:"Building Microservices"})," pour plus de d\xe9tails sur ce sujet."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Monitoring and Troubleshooting"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Plus le nombre de microservices augmente, plus on a du mal \xe0 savoir si le syst\xe8me va bien ou pas, et quel est l'origine exacte des probl\xe8mes."}),"\n",(0,i.jsxs)(n.li,{children:["Parmi les solutions :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ajouter un ",(0,i.jsx)(n.strong,{children:"log aggregation system"})," : collecter les logs de l'ensemble des microservices en un m\xeame endroit.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Parmi les outils il y a la ",(0,i.jsx)(a.U,{children:"ELT stack"})," (Elastic search, Logstash/Fluent D, Kibana) et ",(0,i.jsx)(a.U,{children:"Humio"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"NDLR : l'auteur ne le mentionne pas, mais il y a aussi Datadog comme log aggregation system en SaaS."}),"\n",(0,i.jsx)(n.li,{children:"L'auteur conseille de commencer par le mettre en place avant de sortir des microservices : c'est utile d\xe8s le d\xe9but, et en plus si on n'en est pas capable, c'est peut \xeatre qu'on n'est pas encore mature pour commencer \xe0 sortir des microservices."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Ajouter du ",(0,i.jsx)(n.strong,{children:"tracing"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ajouter un ",(0,i.jsx)(n.strong,{children:"correlation ID"})," \xe0 nos messages qui vont de microservice en microservice, pour rep\xe9rer les flows internes li\xe9s \xe0 une m\xeame demande initiale."]}),"\n",(0,i.jsxs)(n.li,{children:["Utiliser un outil qui permet de tracer le temps mis pour les appels. Exemple d'outil : ",(0,i.jsx)(a.U,{children:"Jaeger"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Faire des ",(0,i.jsx)(n.strong,{children:"tests en production"})," : il s'agit des ",(0,i.jsx)(n.em,{children:"synthetic transactions"}),", o\xf9 on va faire des tests end to end contre la production, pour se rendre compte des probl\xe8mes."]}),"\n",(0,i.jsxs)(n.li,{children:["Ajouter de l'",(0,i.jsx)(n.strong,{children:"observability"})," : comme on ne sait pas quels probl\xe8mes on aura r\xe9ellement, il faut collecter beaucoup de donn\xe9es, et utiliser des outils qui nous permettront de faire des requ\xeates pour investiguer ce qu'on n'avait pas pr\xe9vu.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L'auteur conseille ",(0,i.jsx)(t.f,{children:"Distributed Systems Observability"})," pour creuser la question."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Local Developer Experience"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Quand les devs ont besoin de faire des tests en local avec une dizaine de microservices ou plus, ils risquent de ne plus pouvoir le faire \xe0 cause de la performance de leur machine.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ce probl\xe8me arrive surtout dans les organisations o\xf9 il n'y a pas de strong ownership, et donc o\xf9 on a besoin de toucher au code de plusieurs microservices."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Parmi les solutions :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Stubber les microservices avec lesquels le microservice modifi\xe9 interagit."}),"\n",(0,i.jsxs)(n.li,{children:["Avoir un environnement distant auquel le d\xe9veloppeur peut se connecter, pour que son microservice local puisse communiquer avec des microservices tournant dans un environnement de d\xe9veloppement distant.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cette solution am\xe8ne \xe0 consommer plus de ressources."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(a.U,{children:"Telepresence"})," est un exemple d'outil qui permet de faire un workflow de dev local/remote avec Kubernetes."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Running Too Many Things"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Plus on a de microservices, et plus on va avoir de process \xe0 g\xe9rer en production.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Avec des dizaines ou des centaines de microservices, la configuration et le choix du nombre d'instances de chaque microservice vont devenir compliqu\xe9s."}),"\n",(0,i.jsx)(n.li,{children:"On va avoir besoin de plus en plus de personnes pour g\xe9rer l'aspect infrastructure."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["La solution peut \xeatre l'utilisation de ",(0,i.jsx)(a.U,{children:"Kubernetes"})," pour g\xe9rer les instances de microservice.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Dans le cas o\xf9 on h\xe9berge notre solution dans un cloud public, l'auteur conseille de partir d'abord sur du FaaS (Function as a Service), et de ne partir sur des options plus complexes comme Kubernetes que si les limitations du serverless nous posent probl\xe8me."}),"\n",(0,i.jsxs)(n.li,{children:["Kubernetes lui-m\xeame n'est pas tr\xe8s developer-friendly, on peut opter pour une solution plus abstraite comme ",(0,i.jsx)(a.U,{children:"OpenShift"})," de RedHat."]}),"\n",(0,i.jsx)(n.li,{children:"L'utilisation de Kubernetes n'est pas obligatoire pour faire du microservice. Si on extrait par exemple 5 microservices en tout, et qu'on est OK comme \xe7a, on n'en aura pas besoin."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"End-to-End Testing"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les tests end to end prennent beaucoup de temps, et sont sujets aux faux positifs. Ils le sont encore plus quand il s'agit de tester des cas d'usage impliquant plusieurs microservices.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le risque c'est qu'on se mette \xe0 passer de plus en plus de temps sur ces tests."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Un chapitre entier de ",(0,i.jsx)(t.f,{children:"Building Microservices"})," d\xe9taille la mani\xe8re de tester avec les microservices."]}),"\n",(0,i.jsxs)(n.li,{children:["Parmi les solutions :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Limiter le scope des tests"})," : les tests peuvent couvrir plusieurs microservices, \xe0 condition qu'ils soient g\xe9r\xe9s par la m\xeame \xe9quipe."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Utiliser des consumer-driven contracts"})," (CDC) : au lieu d'avoir des tests end to end, chaque service consommateur cr\xe9e des tests pour sp\xe9cifier ce qu'il attend du microservice qu'il va utiliser.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Vu que c'est le consommateur qui d\xe9finit le contrat, il y a moins de chances de casser un contrat implicite sans faire expr\xe8s."}),"\n",(0,i.jsxs)(n.li,{children:["Parmi les outils pour faire du CDC il y a ",(0,i.jsx)(a.U,{children:"Pact"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Mettre en place une ",(0,i.jsx)(n.strong,{children:"progressive delivery"}),", et une ",(0,i.jsx)(n.strong,{children:"automated release remediation"})," : on peut faire une canary release aupr\xe8s de peu de clients, puis avoir un syst\xe8me automatique qui rollback si jamais des mesures cl\xe9s (par exemple le 95\xe8me percentile de latence et de taux d'erreur) ne sont pas bonnes.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"M\xeame sans avoir la partie automatique, une simple canary release manuelle est d\xe9j\xe0 une avanc\xe9e."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Garder un œil sur ce qui n'est pas assez test\xe9 et o\xf9 il y a beaucoup de probl\xe8mes, et ce qui est \xe9ventuellement trop test\xe9 pour en enlever."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Global Versus Local Optimization"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Si on adopte un strong code ownership, avec des \xe9quipes autonomes, on risque de se retrouver au bout d'un certain temps \xe0 avoir certaines duplications qui d'un point de vue global ne sont pas optimales pour l'entreprise.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Exemple : on a 3 \xe9quipes qui utilisent chacune une DB diff\xe9rentes (Oracle, PostgreSQL etc.), toutes pour une bonne raison dans leur contexte. Mais si on regarde les choses d'un point de vue global, il est possible que \xe7a n'en vaille pas le coup."}),"\n",(0,i.jsx)(n.li,{children:"Autre exemple : avoir des mani\xe8res diff\xe9rentes de d\xe9ployer les microservices dans chaque \xe9quipe fait qu'\xe0 chaque changement d'\xe9quipe, les d\xe9veloppeurs doivent r\xe9apprendre comment faire \xe7a."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["L'autonomie des \xe9quipes apporte beaucoup d'avantages, notamment le fait d'avancer vite, alors que la centralisation permet d'optimiser au niveau global, au d\xe9triment d'une n\xe9cessit\xe9 de consensus avec plus de monde.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il faut trouver un \xe9quilibre, et r\xe9ajuster r\xe9guli\xe8rement."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Parmi les solutions :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Faire comprendre aux \xe9quipes qu'en fonction du type r\xe9versible / irr\xe9versible des d\xe9cisions qu'elles prennent, il faut impliquer plus ou moins de personnes, y compris si n\xe9cessaire en dehors de l'\xe9quipe."}),"\n",(0,i.jsx)(n.li,{children:"Avoir une mani\xe8re de synchroniser les \xe9quipes entre-elles, par exemple un membre de l'\xe9quipe qui pourrait participer \xe0 des groupes cross-team pour traiter de probl\xe9matiques globales."}),"\n",(0,i.jsx)(n.li,{children:"Par exemple, chez Monzo, les \xe9quipes peuvent soumettre des propositions sur des sujets importants, qui peuvent \xeatre ensuite discut\xe9s publiquement par les autres \xe9quipes jusqu'\xe0 arriver \xe0 une solution."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Robustness and Resiliency"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Quand on est dans un syst\xe8me distribu\xe9, on a un risque d'instabilit\xe9 de notre syst\xe8me. Et ce risque augmente en fonction du nombre de services qu'on a et de leur interconnection."}),"\n",(0,i.jsxs)(n.li,{children:["Parmi les solutions :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On peut se demander ",(0,i.jsx)(n.strong,{children:"\xe0 chaque appel"})," si on a pris en compte le fait qu'il ",(0,i.jsx)(n.strong,{children:"pouvait \xe9chouer"}),", et toutes les mani\xe8res dont il pouvait le faire."]}),"\n",(0,i.jsx)(n.li,{children:"Utiliser des techniques pour isoler les services les uns des autres, par exemple par des communications asynchrones."}),"\n",(0,i.jsx)(n.li,{children:"Utiliser des timeouts raisonnables pour \xe9viter les blocages trop longs."}),"\n",(0,i.jsx)(n.li,{children:"Lancer plusieurs instances de chaque microservice pour le cas o\xf9 une instance est en \xe9chec."}),"\n",(0,i.jsx)(n.li,{children:"Plus g\xe9n\xe9ralement, il faut avoir un \xe9tat d'esprit qui permet la r\xe9silience, par exemple en documentant les probl\xe8mes survenus, et les solutions appliqu\xe9es. Et en tirer les cons\xe9quences sur notre organisation."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["L'auteur recommande de lire le chapitre 11 de ",(0,i.jsx)(t.f,{children:"Building Microservices"})," ou le livre ",(0,i.jsx)(t.f,{children:"Release It!"})," de Michael Nygard pour plus de d\xe9tails."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Orphaned Services"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On se retrouve parfois (au bout d'une tr\xe8s longue p\xe9riode d'utilisation de microservices) \xe0 avoir des services qui tournent, mais dont personne ne se rappelle ce qu'ils sont cens\xe9s faire, et qu'on a peur d'\xe9teindre.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Parfois on a perdu le code source."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["La solution peut \xeatre d'avoir une forme ou une autre de ",(0,i.jsx)(n.strong,{children:"registry"})," aliment\xe9e par les \xe9quipes, ou par un outil automatique qui crawl les repositories."]}),"\n"]}),"\n"]}),"\n"]})]})}n.default=(0,r.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,l.a)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)},pageOpts:{filePath:"pages/books/monolith-to-microservices.mdx",route:"/books/monolith-to-microservices",title:"Monolith to Microservices: : Evolutionary Patterns to Transform Your Monolith",headings:o},pageNextRoute:"/books/monolith-to-microservices"})},7854:function(e,n,s){"use strict";s.d(n,{f:function(){return r}});var i=s(5893);function r(e){let{children:n}=e;return(0,i.jsx)("em",{style:{color:"#a64d79",fontWeight:"bold",fontStyle:"italic"},children:n})}},8397:function(e,n,s){"use strict";s.d(n,{U:function(){return r}});var i=s(5893);function r(e){let{children:n}=e;return(0,i.jsx)("em",{style:{color:"#3d85c6",fontWeight:"bold",fontStyle:"normal"},children:n})}}},function(e){e.O(0,[673,888,774,179],function(){return e(e.s=1081)}),_N_E=e.O()}]);