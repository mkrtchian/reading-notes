(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[713],{4594:(e,s,n)=>{(window.__NEXT_P=window.__NEXT_P||[]).push(["/books/get-your-hands-dirty-on-clean-architecture",function(){return n(9812)}])},9812:(e,s,n)=>{"use strict";n.r(s),n.d(s,{__toc:()=>t,default:()=>o});var i=n(7876),r=n(301),l=n(7586);let t=[{depth:2,value:"1 - Maintainability",id:"1---maintainability"},{depth:2,value:"2 - What's Wrong With Layers?",id:"2---whats-wrong-with-layers"},{depth:2,value:"3 - Inverting dependencies",id:"3---inverting-dependencies"},{depth:2,value:"4 - Organizing Code",id:"4---organizing-code"},{depth:2,value:"5 - Implementing a Use Case",id:"5---implementing-a-use-case"},{depth:2,value:"6 - Implementing a Web Adapter",id:"6---implementing-a-web-adapter"},{depth:2,value:"7 - Implementing a Persistence Adapter",id:"7---implementing-a-persistence-adapter"},{depth:2,value:"8 - Testing Architecture Elements",id:"8---testing-architecture-elements"},{depth:2,value:"9 - Mapping Between Boundaries",id:"9---mapping-between-boundaries"},{depth:2,value:"10 - Assembling the Application",id:"10---assembling-the-application"},{depth:2,value:"11 - Enforcing Architecture Boundaries",id:"11---enforcing-architecture-boundaries"},{depth:2,value:"12 - Taking Shortcuts Consciously",id:"12---taking-shortcuts-consciously"},{depth:2,value:"13 - Managing Multiple Bounded Contexts",id:"13---managing-multiple-bounded-contexts"},{depth:2,value:"14 - A Component-Based Approach to Software Architecture",id:"14---a-component-based-approach-to-software-architecture"},{depth:2,value:"15 - Deciding on an Architecture Style",id:"15---deciding-on-an-architecture-style"}];function a(e){let s=Object.assign({h1:"h1",h2:"h2",ul:"ul",li:"li",strong:"strong",pre:"pre",code:"code",span:"span",em:"em",p:"p"},(0,l.R)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{children:"Get Your Hands Dirty on Clean Architecture"}),"\n",(0,i.jsx)(s.h2,{id:"1---maintainability",children:"1 - Maintainability"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["L'",(0,i.jsx)(s.strong,{children:"architecture"})," repr\xe9sente la ",(0,i.jsx)(s.strong,{children:"structure"})," du syst\xe8me logiciel."]}),"\n",(0,i.jsxs)(s.li,{children:["La ",(0,i.jsx)(s.strong,{children:"maintenabilit\xe9"})," (dans le contexte de ce livre la capacit\xe9** \xe0 changer le logiciel** facilement) est plus importante que toutes les autres caract\xe9ristiques, y compris fonctionnelles.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Si on peut facilement changer le logiciel, alors on peut le faire ",(0,i.jsx)(s.strong,{children:"aller dans n'importe quelle direction"})," : plus scalable, plus s\xe9curis\xe9 etc. et on peut ajouter des fonctionnalit\xe9s."]}),"\n",(0,i.jsxs)(s.li,{children:["Elle est vectrice de ",(0,i.jsx)(s.strong,{children:"pacification"})," : quand le logiciel est difficile \xe0 changer, le business se retourne contre les devs et on tombe sur un manque de confiance et des conflits."]}),"\n",(0,i.jsxs)(s.li,{children:["Elle rend les ",(0,i.jsx)(s.strong,{children:"d\xe9veloppeurs heureux"}),", et donc plus productifs et moins prompts \xe0 changer d'entreprise."]}),"\n",(0,i.jsxs)(s.li,{children:["Elle permet de se reposer sur la possibilit\xe9 de faire des ",(0,i.jsx)(s.strong,{children:"choix de design faciles"})," : il suffit de choisir l'option qui offre la meilleure maintenabilit\xe9."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Les entreprises qui ont un logiciel qui marche, et qui n'est pas maintenable ont :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Soit un logiciel en fin de vie avec peu de changements."}),"\n",(0,i.jsx)(s.li,{children:"Soit elles jettent \xe9norm\xe9ment d'argent par la fen\xeatre et peuvent se le permettre."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Comment \xeatre s\xfbr qu'on conserve la maintenabilit\xe9 ? Au moins en s'assurant qu'on choisit et conserve une architecture qui la permet.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"La clean archi en est une possibilit\xe9."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"2---whats-wrong-with-layers",children:"2 - What's Wrong With Layers?"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["La ",(0,i.jsx)(s.strong,{children:"layered architecture"})," est tout \xe0 fait classique : 3 couches successives (web -> domain -> persistance).","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Elle peut m\xeame permettre une bonne architecture qui laisse les options ouvertes (par exemple remplacer la persistance en ne touchant que cette couche-l\xe0)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Le probl\xe8me de la layered architecture c'est qu'",(0,i.jsx)(s.strong,{children:"elle se d\xe9t\xe9riore rapidement et encourage les mauvaises habitudes."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Elle promeut le ",(0,i.jsx)(s.strong,{children:"database-driven design"})," : vu que la persistance est \xe0 la base, on part toujours depuis la mod\xe9lisation de la structure de la DB.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Au lieu de \xe7a on devrait mettre au centre le comportement, c'est-\xe0-dire le code m\xe9tier, et consid\xe9rer la persistance comme p\xe9riph\xe9rique."}),"\n",(0,i.jsx)(s.li,{children:"Un des \xe9l\xe9ments qui pousse au database-driven design aussi c'est l'ORM, qui peut \xeatre utilis\xe9 depuis le layer domain, et introduit des consid\xe9rations techniques dedans."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Elle encourage les ",(0,i.jsx)(s.strong,{children:"raccourcis"})," : quand un layer du dessus a besoin d'un \xe9l\xe9ment du dessous, il suffit de le pousser vers le bas et il y aura acc\xe8s.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"La couche de persistance finit par grossir et devenir une \xe9norme couche “utilitaire” qui contient la logique et les aspects techniques entrem\xeal\xe9s."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Elle devient de plus en plus ",(0,i.jsx)(s.strong,{children:"difficile \xe0 tester"})," :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Le logique m\xe9tier a tendance \xe0 fuiter vers la couche web, parce que la persistance y est directement utilis\xe9e."}),"\n",(0,i.jsx)(s.li,{children:"Tester la couche web devient de plus en plus difficile parce qu'il faut mocker les deux autres, et parce que la logique y grossit."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Elle ",(0,i.jsx)(s.strong,{children:"cache les use cases"})," : la logique fuitant vers les autres layers, on ne sait pas o\xf9 ajouter un nouveau use-case, ni o\xf9 chercher un existant.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"On peut ajouter \xe0 \xe7a que vu qu'il n'y a pas de limite, la couche domain a des unit\xe9s (services) qui grossissent au fil du temps, ce qui rend plus difficile de trouver o\xf9 va chaque fonctionnalit\xe9."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Elle rend le ",(0,i.jsx)(s.strong,{children:"travail en parall\xe8le"})," difficile :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Comme on fait du database-driven design, on doit toujours commencer par la couche de persistance, et on ne peut pas \xeatre plusieurs \xe0 la toucher."}),"\n",(0,i.jsx)(s.li,{children:"Si en plus les services du domaine sont gros, on peut \xeatre en difficult\xe9 pour \xeatre plusieurs \xe0 modifier un gros service pour plusieurs raisons."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"3---inverting-dependencies",children:"3 - Inverting dependencies"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Le ",(0,i.jsx)(s.strong,{children:"Single Responsibility Principle"})," (SRP) dit qu'un composant doit avoir une seule ",(0,i.jsx)(s.strong,{children:"raison de changer"}),".","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\xc7a veut dire que si on change le logiciel pour n'importe quelle autre raison, il ne devrait pas changer."}),"\n",(0,i.jsx)(s.li,{children:"Quand nos composants d\xe9pendent les uns des autres, \xe7a leur donne autant de raisons \xe0 chaque fois de changer, si un des composants dont ils d\xe9pendent change lui aussi."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["La layered architecture fait que la couche web et la couche domain ont des raisons de changer li\xe9es \xe0 la couche de persistance. On n'a pas envie que la couche domain change pour d'autres raisons qu'elle-m\xeame, donc on va ",(0,i.jsx)(s.strong,{children:"inverser les d\xe9pendances"})," qu'elle a.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"C'est le Dependency Inversion Principle (DIP)."}),"\n",(0,i.jsx)(s.li,{children:"On va copier les entities depuis la persistance vers la couche domain qui en a besoin aussi."}),"\n",(0,i.jsx)(s.li,{children:"Et on va cr\xe9er une interface de persistance dans le domaine, \xe0 laquelle va adh\xe9rer la couche persistance qui aura donc une d\xe9pendance vers le domaine plut\xf4t que l'inverse."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Selon Robert Martin la ",(0,i.jsx)(s.strong,{children:"clean architecture"})," doit garder le domaine s\xe9par\xe9 du reste (frameworks, infrastructure etc.), et les d\xe9pendances doivent \xeatre tourn\xe9es vers le code du domaine pour que celui-ci n'en ait pas d'autres que lui-m\xeame.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Les ",(0,i.jsx)(s.strong,{children:"entities"})," du domaine sont au centre."]}),"\n",(0,i.jsxs)(s.li,{children:["Ils sont utilis\xe9s par les ",(0,i.jsx)(s.strong,{children:"use cases"}),", qui repr\xe9sentent les services, mais impliquent d'avoir une granularit\xe9 fine."]}),"\n",(0,i.jsxs)(s.li,{children:["Cette s\xe9paration a un co\xfbt, qui est qu'il faut ",(0,i.jsx)(s.strong,{children:"dupliquer les entit\xe9s"})," entre le domaine et l'infrastructure, notamment pour \xe9viter que les entit\xe9s du domaine soient pollu\xe9es par la technique."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["L'",(0,i.jsx)(s.strong,{children:"hexagonal architecture"})," est similaire \xe0 la clean architecture mais un peu moins “abstraite”, c'est la version d'Alistair Cockburn.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"L'hexagone contient les entities et les use cases, et en dehors on trouve des adapters pour int\xe9grer la communication avec l'ext\xe9rieur."}),"\n",(0,i.jsxs)(s.li,{children:["On a deux types d'",(0,i.jsx)(s.strong,{children:"adapters"})," :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Les adapteurs de gauche drivent l'hexagone, parce qu'ils appellent des fonctions expos\xe9es par l'hexagone.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Exemple : handlers HTTP."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Les adapters de droite sont driv\xe9es par l'hexagone, parce que l'hexagone appelle des m\xe9thodes sur eux.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Exemple : communication avec la DB."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Pour permettre la communication, l'hexagone d\xe9finit des ports (interfaces), qui doivent \xeatre impl\xe9ment\xe9s par les adapters.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"C'est pour \xe7a qu'on parle de Ports & Adapters."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Quel que soit leur nom, tout l'int\xe9r\xeat de ces architectures c'est de permettre d'avoir un ",(0,i.jsx)(s.strong,{children:"domaine isol\xe9"}),", dont on pourra g\xe9rer la complexit\xe9 sans qu'il ait d'autres raisons de changer que lui-m\xeame."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"4---organizing-code",children:"4 - Organizing Code"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["On peut organiser le code ",(0,i.jsx)(s.strong,{children:"par couches"})," : le classique web, domain et persistance, mais avec une inversion de la persistance vers le domain.","\n",(0,i.jsx)(s.pre,{"data-language":"yaml","data-theme":"default",children:(0,i.jsxs)(s.code,{"data-language":"yaml","data-theme":"default",children:[(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"- "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"web"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"- "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"AccountController"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"- "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"domain"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"- "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"Account"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"- "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"AccountService"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"- "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"AccountRepositoryPort"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"- "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"persistance"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"- "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"AccountRepositoryImpl"})]})]})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Mais cette organisation est sous-optimale pour 3 raisons :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Il n'y a pas de s\xe9paration sous forme de dossiers ou de packages pour les fonctionnalit\xe9s. Donc elles vont vite s'entre-m\xealer au sein de chaque couche."}),"\n",(0,i.jsx)(s.li,{children:"Comme les services sont gros, on peut difficilement rep\xe9rer la fonctionnalit\xe9 exacte qu'on cherche tout de suite."}),"\n",(0,i.jsx)(s.li,{children:"On ne voit pas au premier coup d'œil quelle partie de la persistance impl\xe9mente quel port c\xf4t\xe9 domain. L'architecture ne saute pas aux yeux."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["On peut ensuite organiser le code ",(0,i.jsx)(s.strong,{children:"par features"})," : les limites de dossier/package sont d\xe9finies par les features qui contiennent un fichier par couche.","\n",(0,i.jsx)(s.pre,{"data-language":"yaml","data-theme":"default",children:(0,i.jsxs)(s.code,{"data-language":"yaml","data-theme":"default",children:[(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"- "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"account"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"- "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"Account"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"- "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"AccountController"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"- "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"AccountRepository"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"- "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"AccountRepositoryImpl"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"- "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"SendMoneyService"})]})]})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["On a nos features visibles imm\xe9diatement (",(0,i.jsx)(s.code,{children:"Account -> SendMoneyService"}),"), ce qui fait qu'on est dans le cadre d'une ",(0,i.jsx)(s.strong,{children:"screaming architecture"}),"."]}),"\n",(0,i.jsx)(s.li,{children:"Par contre, nos couches techniques sont tr\xe8s peu prot\xe9g\xe9es, et le code du domaine n'est plus prot\xe9g\xe9 du reste par des s\xe9parations fortes."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["On peut enfin organiser le code dans une architecture ",(0,i.jsx)(s.strong,{children:"expressive"}),", reprenant le meilleur des deux autres :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Une s\xe9paration initiale par features majeures."}),"\n",(0,i.jsx)(s.li,{children:"Puis une s\xe9paration par couches \xe0 l'int\xe9rieur de ces features majeures."}),"\n",(0,i.jsxs)(s.li,{children:["Et enfin la s\xe9paration explicite des ports et adapters, en explicitant leur nature entrante ou sortante.","\n",(0,i.jsx)(s.pre,{"data-language":"yaml","data-theme":"default",children:(0,i.jsxs)(s.code,{"data-language":"yaml","data-theme":"default",children:[(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"- "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"account"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"- "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"adapter"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  - "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"in"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  - "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"web"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  - "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"AccountController"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  - "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"out"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  - "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"persistance"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  - "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"AccountPersistanceAdapter"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"- "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"domain"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  - "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"Account"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"- "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"application"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  - "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"SendMoneyService"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  - "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"port"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  - "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"in"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  - "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"SendMoneyUseCase"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  - "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"out"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  - "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"LoadAccountPort"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  - "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:"UpdateAccountStatePort"})]})]})}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"Le fait que l'architecture soit align\xe9e avec la structure en packages fait que nous avons moins de chances d'en d\xe9vier. Elle est incarn\xe9e de mani\xe8re tr\xe8s concr\xe8te dans le code."}),"\n",(0,i.jsx)(s.li,{children:"Le domaine \xe9tant isol\xe9, on peut tr\xe8s bien en faire ce qu'on veut, y compris y appliquer les patterns tactiques du DDD."}),"\n",(0,i.jsxs)(s.li,{children:["C\xf4t\xe9 visibilit\xe9 des packages :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Les adapters peuvent rester priv\xe9s, puisqu'ils ne sont appel\xe9s qu'\xe0 travers les ports."}),"\n",(0,i.jsx)(s.li,{children:"Les ports doivent \xeatre publics pour \xeatre accessibles par les adapters."}),"\n",(0,i.jsx)(s.li,{children:"Les objets du domaine doivent \xeatre publics pour \xeatre accessibles depuis les services et les adapters."}),"\n",(0,i.jsx)(s.li,{children:"Les services peuvent rester priv\xe9s parce qu'ils sont appel\xe9s \xe0 travers les ports primaires."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Concernant la mani\xe8re dont fonctionne l'",(0,i.jsx)(s.strong,{children:"inversion de d\xe9pendance"})," ici :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Pour les adpaters entrants il n'y a pas besoin d'inversion puisqu'ils sont d\xe9j\xe0 entrants vers l'hexagone. On peut, au besoin, quand m\xeame prot\xe9ger l'hexagone derri\xe8re des ports quand m\xeame."}),"\n",(0,i.jsx)(s.li,{children:"Pour les adapters sortants par contre il faut inverser la d\xe9pendance, en les faisant respecter le port de l'hexagone, puis en les instanciant et les donnant \xe0 l'hexagone."}),"\n",(0,i.jsxs)(s.li,{children:["Il faut donc un ",(0,i.jsx)(s.strong,{children:"composant tiers neutre"})," qui instancie les adapters sortants pour les donner \xe0 l'hexagone, et instancie l'hexagone pour le donner aux adapters entrants.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Il s'agit de l'",(0,i.jsx)(s.strong,{children:"injection de d\xe9pendance"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"5---implementing-a-use-case",children:"5 - Implementing a Use Case"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Comme on a une forte s\xe9paration hexagone/adapters, on peut impl\xe9menter l'hexagone de la mani\xe8re dont on veut, y compris avec les patterns tactiques du DDD, mais pas forc\xe9ment."}),"\n",(0,i.jsxs)(s.li,{children:["Dans ce chapitre on impl\xe9mente un use-case dans l'hexagone de l'exemple ",(0,i.jsx)(s.em,{children:"buckpal"})," qui est une application de gestion de paiement."]}),"\n",(0,i.jsxs)(s.li,{children:["La ",(0,i.jsx)(s.strong,{children:"couche domain"})," se trouve dans ",(0,i.jsx)(s.code,{children:"buckpal -> domain"}),", et contient une entit\xe9 ",(0,i.jsx)(s.code,{children:"Account"}),", qui a des m\xe9thodes pour ajouter et retirer de l'argent.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Chaque ajout ou retrait se fait en empilant des entit\xe9s ",(0,i.jsx)(s.code,{children:"Activity"})," qui contiennent chaque transaction dans un tableau interne \xe0 ",(0,i.jsx)(s.code,{children:"Account"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Le tableau interne ne contient qu'une fen\xeatre d'",(0,i.jsx)(s.code,{children:"Activity"})," pour des raisons de performance, et une variable permet de conna\xeetre la valeur du compte avant ce nombre restreint d'",(0,i.jsx)(s.code,{children:"Activity"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Les use-cases se trouvent dans la ",(0,i.jsx)(s.strong,{children:"couche applicative"}),", dans ",(0,i.jsx)(s.code,{children:"buckpal -> application -> service"}),".","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Un use-case va :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"R\xe9cup\xe9rer l'input (qu'il ne valide pas par lui-m\xeame pour laisser cette responsabilit\xe9 \xe0 un autre composant)."}),"\n",(0,i.jsx)(s.li,{children:"Valider les r\xe8gles business, dont la responsabilit\xe9 est partag\xe9e avec la couche domain."}),"\n",(0,i.jsxs)(s.li,{children:["Manipuler l'\xe9tat du domaine :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"\xc7a se fait en instanciant des entit\xe9s et appelant des m\xe9thodes sur elles."}),"\n",(0,i.jsx)(s.li,{children:"Et en g\xe9n\xe9ral en passant les entit\xe9s \xe0 un adapter pour que leur \xe9tat soit persist\xe9."}),"\n",(0,i.jsx)(s.li,{children:"Appeler \xe9ventuellement d'autres use-cases."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"Retourner l'output."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"Les use-cases vont \xeatre petits pour \xe9viter le probl\xe8me de gros services o\xf9 on ne sait pas quelle fonctionnalit\xe9 va o\xf9."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["La ",(0,i.jsx)(s.strong,{children:"validation des inputs"})," se fait dans la couche applicative pour permettre d'appeler l'hexagone depuis plusieurs controllers sans qu'ils aient \xe0 valider ces donn\xe9es, et pour garantir l'int\xe9grit\xe9 des donn\xe9es dans l'hexagone.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["On va faire la validation dans une classe de type ",(0,i.jsx)(s.strong,{children:"command"}),". Cette classe valide les donn\xe9es dans son constructeur, et refuse d'\xeatre instanci\xe9e si les donn\xe9es sont invalides.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"L'auteur d\xe9conseille d'utiliser le pattern builder et conseille d'appeler directement le constructeur."}),"\n",(0,i.jsxs)(s.li,{children:["Exemple de builder :","\n",(0,i.jsx)(s.pre,{"data-language":"typescript","data-theme":"default",children:(0,i.jsx)(s.code,{"data-language":"typescript","data-theme":"default",children:(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"new"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"CommandBuilder"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"()"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:".setParameterA"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"(value1)"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:".setParameterB"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"(value2)"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:".build"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"();"})]})})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Cette classe va se trouver dans ",(0,i.jsx)(s.code,{children:"buckpal -> application -> port -> in"}),"."]}),"\n",(0,i.jsx)(s.li,{children:"Elle constitue une sorte d'anti-corruption layer prot\xe9geant l'hexagone."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["On pourrait \xeatre tent\xe9 de ",(0,i.jsx)(s.strong,{children:"r\xe9utiliser des classes de validation d'input"})," entre plusieurs use-cases ressemblants, par exemple la cr\xe9ation d'un compte et la modification d'un compte. L'auteur ",(0,i.jsx)(s.strong,{children:"le d\xe9conseille"}),".","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Si on r\xe9utilise, on va se retrouver avec quelques diff\xe9rences (par exemple l'ID du compte) qui vont introduire de potentielles mauvaises donn\xe9es."}),"\n",(0,i.jsx)(s.li,{children:"On va se retrouver \xe0 g\xe9rer les diff\xe9rences entre les deux mod\xe8les dans les use-cases alors qu'on voulait le faire dans un objet \xe0 part."}),"\n",(0,i.jsx)(s.li,{children:"Globalement, faire des mod\xe8les de validation d'input permet, au m\xeame titre que le fait de faire des petits use-cases, de garder l'architecture maintenable dans le temps."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["La ",(0,i.jsx)(s.strong,{children:"validation des business rules"})," doit quant \xe0 elle \xeatre faite dans les use-cases.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["La diff\xe9rence avec la validation des inputs c'est que pour les inputs il n'y a pas besoin d'",(0,i.jsx)(s.strong,{children:"acc\xe9der \xe0 l'\xe9tat du mod\xe8le de donn\xe9es"}),", alors que pour les business rules oui."]}),"\n",(0,i.jsxs)(s.li,{children:["Le use-case peut le faire directement en appelant des fonctions, ou alors le d\xe9l\xe9guer \xe0 des entities.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Dans le cas o\xf9 l'essentiel de la logique est fait dans les entities et o\xf9 le use-case orchestre juste des appels et passe les donn\xe9es, on parle d'un ",(0,i.jsx)(s.strong,{children:"rich domain model"}),". Dans le cas o\xf9 c'est le use-case qui a l'essentiel de la logique et les entities sont maigres, on parlera d'un ",(0,i.jsx)(s.strong,{children:"anemic domain model"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"Le use-case l\xe8ve une exception en cas de non-respect des r\xe8gles business comme pour les r\xe8gles d'input. Ce sera \xe0 l'adapter entrant de d\xe9cider de ce qu'il fait de ces exceptions."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Concernant ",(0,i.jsx)(s.strong,{children:"l'output"})," renvoy\xe9 par le use-case, il faut qu'il soit ",(0,i.jsx)(s.strong,{children:"le plus minimal possible"})," : n'inclure que ce dont l'appelant a besoin.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Si on retourne beaucoup de choses, on risque de voir des use-cases coupl\xe9s entre eux via l'output (quand on ajoute un champ \xe0 l'objet retourn\xe9, on a besoin de changer tous ceux qui le retournent)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Les use-cases qui font ",(0,i.jsx)(s.strong,{children:"uniquement de la lecture"})," pour renvoyer de la donn\xe9e peuvent \xeatre distingu\xe9es des use-cases qui \xe9crivent.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Pour \xe7a on peut les faire impl\xe9menter un autre port entrant que les use-cases d'\xe9criture, par exemple le port ",(0,i.jsx)(s.code,{children:"GetAccountBalanceQuery"}),"."]}),"\n",(0,i.jsx)(s.li,{children:"On pourra \xe0 partir de l\xe0 faire du CQS ou du CQRS."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"6---implementing-a-web-adapter",children:"6 - Implementing a Web Adapter"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Tous les appels ext\xe9rieurs passent par des ",(0,i.jsx)(s.strong,{children:"adapters entrants"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Comme le flow d'appel est d\xe9j\xe0 dirig\xe9 de l'adapter vers l'hexagone, on pourrait enlever le port, et laisser l'adapter appeler directement les use-cases.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["La mat\xe9rialisation des ports permet d'avoir un endroit o\xf9 tous ",(0,i.jsx)(s.strong,{children:"les points d'entr\xe9e de l'hexagone sont clairement identifi\xe9s"})," et sp\xe9cifi\xe9s. C'est utile pour la maintenance \xe0 long terme."]}),"\n",(0,i.jsx)(s.li,{children:"Enlever ces ports fait partie des raccourcis discut\xe9s dans le chapitre 11."}),"\n",(0,i.jsx)(s.li,{children:"Dans le cas o\xf9 notre adapter est un WebSocket qui va appeler mais aussi qui sera appel\xe9, alors il faut obligatoirement avoir les ports entrants, et surtout sortants, puisque l\xe0 on a bien une inversion du sens d'appel."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Les adapters web vont :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Cr\xe9er des objets internes \xe0 partir des objets HTTP.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"On parle aussi de d\xe9s\xe9rialisation."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"V\xe9rifier les autorisations."}),"\n",(0,i.jsxs)(s.li,{children:["Valider l'input, et le faire correspondre \xe0 l'input du use-case qui va \xeatre appel\xe9.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Vu qu'on valide d\xe9j\xe0 l'input \xe0 l'entr\xe9e du use-case, on va ici seulement valider le fait que l'input re\xe7u peut bien \xeatre converti dans l'input du use-case."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"Appeler le use-case."}),"\n",(0,i.jsxs)(s.li,{children:["R\xe9cup\xe9rer l'output, et reconstruire un objet HTTP \xe0 partir de \xe7a pour le renvoyer.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"On parle aussi de s\xe9rialisation."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["L'adapter se trouve dans ",(0,i.jsx)(s.code,{children:"buckpal -> adapter -> in -> web"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["L'adapter web a la responsabilit\xe9 de communiquer avec le protocole HTTP. C'est une responsabilit\xe9 qu'il doit avoir seul, et donc ",(0,i.jsx)(s.strong,{children:"ne pas faire fuiter des d\xe9tails du HTTP dans le use-case"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Concernant la taille des controllers, il vaut mieux les avoir ",(0,i.jsx)(s.strong,{children:"les plus petits et pr\xe9cis possibles"}),".","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Il vaut mieux \xe9viter de cr\xe9er par exemple une classe ",(0,i.jsx)(s.code,{children:"AccountController"})," qui va avoir plusieurs m\xe9thodes associ\xe9es chacune \xe0 un endpoint.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Ce genre de classe peut grossir et devenir difficile \xe0 maintenir. De m\xeame pour les tests associ\xe9s."}),"\n",(0,i.jsx)(s.li,{children:"Le fait d'\xeatre dans une classe fait que ces controllers vont partager des fonctions et objets entre eux. Et donc vont \xeatre plus facilement coupl\xe9s."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["On peut nommer les classes de web adapter avec des noms plus pr\xe9cis que ",(0,i.jsx)(s.code,{children:"UpdateX"}),", ",(0,i.jsx)(s.code,{children:"CreateX"})," etc. Par exemple ",(0,i.jsx)(s.code,{children:"RegisterAccount"}),"."]}),"\n",(0,i.jsx)(s.li,{children:"Les petits controllers permettent aussi de travailler plus facilement sur le code en parall\xe8le."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"7---implementing-a-persistence-adapter",children:"7 - Implementing a Persistence Adapter"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Avec l'adapter de persistance, on a une vraie inversion des d\xe9pendances qui fait que malgr\xe9 le sens des appels de l'hexagone vers l'adapter, gr\xe2ce au port c'est l'adapter qui d\xe9pend de l'hexagone.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"On va donc pouvoir faire des modifications dans l'adapter de persistance sans que \xe7a n'affecte la logique business."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Les adapters de persistance vont :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Prendre l'input.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Ca peut \xeatre une domain entity ou un objet sp\xe9cifique pour une op\xe9ration en base."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Le mapper au format base de donn\xe9es et l'envoyer \xe0 DB.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"En g\xe9n\xe9ral on va mapper vers les entities de l'ORM, mais \xe7a peut aussi \xeatre vers des requ\xeates SQL directement."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["R\xe9cup\xe9rer la r\xe9ponse DB et la mapper au format applicatif.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"En g\xe9n\xe9ral une domain entity."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"Renvoyer la valeur \xe0 l'application service."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["L'adapter se trouve dans ",(0,i.jsx)(s.code,{children:"buckpal -> adapter -> out -> persistance"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Il faut que ",(0,i.jsx)(s.strong,{children:"les mod\xe8les d'input et d'output vers et depuis le persistance adapter"})," soient tous deux ",(0,i.jsx)(s.strong,{children:"dans l'application core"})," (hexagone)."]}),"\n",(0,i.jsxs)(s.li,{children:["Plut\xf4t qu'avoir un gros port qui permet d'acc\xe9der \xe0 toutes les m\xe9thodes de l'adapter correspondant \xe0 une entity, il vaut mieux avoir des ports plus fins.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Une des raisons c'est qu'il est plus difficile de mocker le persistance adapter en entier que de mocker certaines de ses m\xe9thodes correspondant aux ports utilis\xe9s."}),"\n",(0,i.jsxs)(s.li,{children:["La plupart du temps on va se retrouver avec ",(0,i.jsx)(s.strong,{children:"une m\xe9thode de l'adapter par port"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Pour ce qui est de l'adapter lui-m\xeame (celui qu'on acc\xe8de via les ports), on peut l'avoir gros, mais on peut aussi le d\xe9couper, par exemple pour avoir un adapter par entity, ou un par aggregate (si on utilise les patterns tactiques du DDD).","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["On pourrait aussi cr\xe9er deux adapters pour une m\xeame entity : un pour les m\xe9thodes utilisant notre ORM, et un autre pour les m\xe9thodes utilisant du SQL directement.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Dans l'adapter on pourra donc utiliser les entities de l'ORM, ou alors des ",(0,i.jsx)(s.strong,{children:"repositories"})," faites \xe0 la main, qui contiendront des m\xe9thodes ex\xe9cutant du SQL."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"S\xe9parer les aggregates dans des adapters distincts permet aussi de faciliter l'extraction d'un bounded context par la suite."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["On va donc avoir une ",(0,i.jsx)(s.strong,{children:"duplication des domain entities"})," dans le persistance adapter, en g\xe9n\xe9ral sous forme d'entities d'ORM.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Utiliser les entities ORM dans le domaine peut \xeatre un choix possible pour \xe9viter des mappings (discut\xe9 dans le chapitre 8), mais \xe7a a le d\xe9savantage de faire fuiter des contraintes sp\xe9cifiques \xe0 la DB vers le domaine."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["L'adapter en lui-m\xeame :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Pour une lecture, il appelle des m\xe9thodes sur les entities ORM ou sur les repositories maison, puis il map le r\xe9sultat \xe0 une entity domaine et la renvoie."}),"\n",(0,i.jsx)(s.li,{children:"Pour une \xe9criture, il r\xe9cup\xe8re l'entity domaine, la map vers l'entity ORM ou vers la m\xe9thode de repository maison, et ex\xe9cute la m\xe9thode sur celle-ci."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Concernant les ",(0,i.jsx)(s.strong,{children:"transactions"}),", elles ne peuvent pas \xeatre dans l'adapter de persistance. Elles doivent \xeatre dans la fonction qui orchestre les appels \xe0 la persistance, c'est-\xe0-dire les use-cases applicatifs.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Si on veut garder nos use-cases purs, on peut recourir \xe0 l'",(0,i.jsx)(s.strong,{children:"aspect-oriented programming"}),", par exemple avec AspectJ."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"8---testing-architecture-elements",children:"8 - Testing Architecture Elements"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Il y a 3 types de tests dans la pyramide :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Plus on monte dans la pyramide, et plus les tests sont lents et fragiles, donc plus on monte et moins nombreux doivent \xeatre les tests.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Les ",(0,i.jsx)(s.strong,{children:"unit tests"})," testent en g\xe9n\xe9ral une seule classe."]}),"\n",(0,i.jsxs)(s.li,{children:["Les ",(0,i.jsx)(s.strong,{children:"integration tests"})," mettent en jeu le code de plusieurs couches, et vont souvent mocker certaines d'entre-elles."]}),"\n",(0,i.jsxs)(s.li,{children:["Les ",(0,i.jsx)(s.strong,{children:"system tests"})," testent le tout de bout en bout, sans mocks (autre que les composants qu'on ne peut pas instancier dans notre test).","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"On pourra parler de end-to-end tests si on teste depuis le frontend et non depuis l'API du backend."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"NDLR : l'auteur adopte une vision proche de l'\xe9cole de Londres, en consid\xe9rant qu'un test teste une unit\xe9 de code (et pas une unit\xe9 de comportement peu importe la quantit\xe9 de code), et qu'en testant plusieurs bouts de code ensemble il faut mocker les bouts de codes voisins (c'est comme \xe7a qu'on obtient des tests fragiles aux refactorings)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["C\xf4t\xe9 impl\xe9mentation :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Les ",(0,i.jsx)(s.strong,{children:"domain entities"})," sont test\xe9s avec des unit tests (state-based).","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"NDLR : Dans l'exemple on teste Account, mais pour autant on ne mock pas Activity, on en construit une vraie instance. Donc sur cet exemple en tout cas, on n'est pas tout \xe0 fait dans l'\xe9cole de Londre non plus."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Les ",(0,i.jsx)(s.strong,{children:"use-cases"})," sont test\xe9s avec des unit tests (communication based) v\xe9rifiant que le use-case appelle la bonne m\xe9thode sur le domain entity et sur l'adapter de persistance.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"NDLR : L\xe0 on est bien dans la London school."}),"\n",(0,i.jsx)(s.li,{children:"L'auteur fait remarquer que le test utilisant des mocks, il est coupl\xe9 \xe0 la structure du code et pas seulement au comportement. Et donc il conseille de ne pas forc\xe9ment tout tester, pour \xe9viter que ces tests cassent trop souvent."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Les ",(0,i.jsx)(s.strong,{children:"web adapters"})," sont test\xe9s avec des tests d'int\xe9gration.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"On parle ici d'int\xe9gration parce qu'on est “int\xe9gr\xe9” avec autre chose que du code pur, en l'occurrence avec la librairie de communication HTTP."}),"\n",(0,i.jsx)(s.li,{children:"Il s'agit de tests communication based, envoyant un faux message HTTP sur le bon path, et v\xe9rifiant qu'on a fait un appel sur le bon use-case mock\xe9, avec la bonne commande."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Les ",(0,i.jsx)(s.strong,{children:"persistance adapters"})," sont test\xe9s avec des tests d'int\xe9gration.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Ici pas de mocks, on construit des domain entities et on les passe \xe0 l'adapter pour qu'il le mette en base, et on v\xe9rifie depuis la base avec des m\xe9thodes de repository qu'on a \xe9crit la bonne chose."}),"\n",(0,i.jsx)(s.li,{children:"Si besoin de donn\xe9es pr\xe9alables, par exemple pour de la lecture, on ex\xe9cute d'abord du SQL pour mettre la DB dans un \xe9tat qui permettra cette lecture."}),"\n",(0,i.jsx)(s.li,{children:"Le fait de ne pas mocker est justifi\xe9 par le fait qu'on perdrait toute confiance dans nos tests puisque chaque type de DB vient avec ses propres sp\xe9cificit\xe9s SQL."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Les ",(0,i.jsx)(s.strong,{children:"chemins principaux complets"})," sont test\xe9s avec des system tests.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"On utilise de vrais messages HTTP, et on ne mock rien dans nos couches."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["On peut utiliser des fonctions helper pour rendre nos tests plus lisibles en extrayant des bouts de code. Ces fonctions forment un ",(0,i.jsx)(s.strong,{children:"domain specific language"})," qu'il est bon de cultiver."]}),"\n",(0,i.jsxs)(s.li,{children:["Concernant la ",(0,i.jsx)(s.strong,{children:"quantit\xe9 de tests"})," :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"L'auteur sugg\xe8re d'aller vers du 100% de coverage du code important. Garder quand m\xeame le 100% permet de lutter contre la th\xe9orie des vitres cass\xe9es."}),"\n",(0,i.jsxs)(s.li,{children:["Pour mesurer la fiabilit\xe9 des tests, on peut mesurer ",(0,i.jsx)(s.strong,{children:"\xe0 quel point on est confiant pour mettre en production"})," notre changement.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Pour \xeatre toujours plus confiant, il faut mettre en production souvent."}),"\n",(0,i.jsx)(s.li,{children:"Pour chaque bug en production, il faut se demander ce qu'on aurait pu faire pour qu'un test trouve le bug, et l'ajouter."}),"\n",(0,i.jsx)(s.li,{children:"Le fait de documenter les bugs comme \xe7a permet d'avoir une mesure de la fiabilit\xe9 des tests dans le temps."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"9---mapping-between-boundaries",children:"9 - Mapping Between Boundaries"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Les 3 composants principaux (driving adapter, hexagone et driven adapter) doivent avoir un mod\xe8le qui leur permet d'appr\xe9hender le syst\xe8me et ses entit\xe9s. On peut choisir diff\xe9rentes ",(0,i.jsx)(s.strong,{children:"strat\xe9gies de mapping"})," entre ces mod\xe8les en fonction de leur unicit\xe9 ou de leur diff\xe9rence."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"1- La no-mapping strategy"})," consiste \xe0 avoir le m\xeame mod\xe8le dans l'adapter web, l'hexagone, et l'adapter de persistance.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"On n'impl\xe9mente la repr\xe9sentation des entities qu'une fois pour la r\xe9utiliser partout."}),"\n",(0,i.jsxs)(s.li,{children:["Chaque couche va avoir besoin de champs ou d'\xe9l\xe9ments techniques qui lui sont sp\xe9cifiques, par exemple des annotations li\xe9es \xe0 HTTP pour l'adapter web, des annotations d'ORM pour l'adapter de persistance. Nos entities auront donc ",(0,i.jsx)(s.strong,{children:"plusieurs raisons de changer"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["Tant que toutes les couches ont besoin des informations format\xe9es de la m\xeame mani\xe8re, cette strat\xe9gie marche. C'est le cas pour les ",(0,i.jsx)(s.strong,{children:"applications CRUD"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["A partir du moment o\xf9 on commence \xe0 ",(0,i.jsx)(s.strong,{children:"g\xe9rer des probl\xe8mes sp\xe9cifiques au web ou \xe0 la persistance dans l'hexagone"}),", alors il faut passer \xe0 une autre strat\xe9gie."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"2- La two-way mapping strategy"})," consiste \xe0 avoir un mod\xe8le sp\xe9cifique pour chacun des composants principaux (adapter web, hexagone et adapter de persistance), et de faire un mapping quand la donn\xe9e rentre, et un autre quand elle sort.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"L'avantage c'est que cette s\xe9paration des mod\xe8les permet d'adapter leur structure pour les besoins de chaque couche : besoins web (ex: s\xe9rialisation JSON), besoins du mod\xe8le, besoins de la persistance (ex: ORM)."}),"\n",(0,i.jsxs)(s.li,{children:["Le d\xe9savantage principal c'est le boilerplate cons\xe9quent.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Et m\xeame avec l'utilisation de librairies de mapping, les bugs sont compliqu\xe9s \xe0 trouver parce que le mapping est cach\xe9."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"Un autre d\xe9savantage c'est que malgr\xe9 la s\xe9paration, les objets du mod\xe8le de l'hexagone sont quand m\xeame utilis\xe9s par les autres couches externes, ce qui fait qu'ils pourraient avoir besoin de changer pour des n\xe9cessit\xe9s de ces couches."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"3- La full mapping strategy"})," consiste \xe0 utiliser un mapping entre les 3 composants principaux comme pour la two-way mapping strategy, mais cette fois on va \xe9tablir des ",(0,i.jsx)(s.strong,{children:"mod\xe8les d'input et d'output fins sp\xe9cifiques \xe0 chaque use-case"}),".","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["On a encore plus de mapping que si on mappait juste les mod\xe8les des 3 composants, mais ce mapping va aussi \xeatre plus maintenable parce qu'il sera \xe0 chaque fois ",(0,i.jsx)(s.strong,{children:"sp\xe9cifique au use-case"})," sans avoir besoin d'\xeatre adapt\xe9 pour correspondre \xe0 de nouveaux besoins."]}),"\n",(0,i.jsx)(s.li,{children:"L'auteur conseille ce pattern plut\xf4t entre l'adapter web et l'hexagone qu'entre l'hexagone et l'adapter de persistance (parce qu'il y aurait vraiment trop de mappings)."}),"\n",(0,i.jsx)(s.li,{children:"On pourra aussi faire des variantes, par exemple utiliser cette strat\xe9gie pour le mod\xe8le d'entr\xe9e dans l'hexagone depuis l'adapter web, mais renvoyer les objets du mod\xe8le de l'hexagone en sortie vers l'adapter web."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"4 - La one-way mapping strategy"})," consiste \xe0 avoir une interface commune aux trois mod\xe8les de chacun des trois composants.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"De cette mani\xe8re les objets peuvent \xeatre pass\xe9s sans devoir obligatoirement les mapper. Si le mapping est n\xe9cessaire, il suffira \xe0 la couche qui en a besoin de le faire."}),"\n",(0,i.jsx)(s.li,{children:"Quand l'objet est pass\xe9 de l'hexagone vers l'ext\xe9rieur ils peuvent l'utiliser tel quel sans risquer de le modifier parce que les setters ne sont pas expos\xe9s."}),"\n",(0,i.jsxs)(s.li,{children:["Quand l'objet passe vers l'hexagone, il devra en g\xe9n\xe9ral \xeatre mapp\xe9 pour reconstruire le comportement riche du domaine.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"On peut le faire avec le pattern Factory du DDD."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Cette strat\xe9gie a de l'int\xe9r\xeat quand les mod\xe8les sont proches.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Le mod\xe8le web peut facilement ne pas avoir besoin de mapper l'output venant de l'hexagone."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"Le d\xe9savantage c'est que cette strat\xe9gie est plus difficile \xe0 appr\xe9hender \xe9tant donn\xe9 son caract\xe8re non syst\xe9matique."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Il faut ",(0,i.jsx)(s.strong,{children:"adapter la strat\xe9gie"})," en fonction des cas d'usage et de leur nature, et pas adopter une seule strat\xe9gie pour toute la codebase.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["On peut avoir des diff\xe9rences de strat\xe9gie en fonction :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Des lectures et \xe9critures."}),"\n",(0,i.jsx)(s.li,{children:"De la communication entre adapter web et hexagone, et hexagone et adapter de persistance."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Il ne faut pas avoir peur de ",(0,i.jsx)(s.strong,{children:"changer de strat\xe9gie en cours de route"}),".","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"La plupart des applications commencent en \xe9tant CRUD, puis soit le restent, soit se complexifient suffisamment pour m\xe9riter un changement de strat\xe9gie de mapping."}),"\n",(0,i.jsxs)(s.li,{children:["L'\xe9quipe doit se mettre d'accord sur des strat\xe9gies \xe0 choisir pour chaque partie de la codebase, et surtout ",(0,i.jsx)(s.strong,{children:"noter pourquoi elle fait ce choix"})," pour pouvoir r\xe9\xe9valuer plus tard si le choix doit \xeatre modifi\xe9 ou non.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Il peut \xeatre int\xe9ressant aussi de noter dans quel cas elle pr\xe9voit de changer de strat\xe9gie."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"10---assembling-the-application",children:"10 - Assembling the Application"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Nous voulons garder l'inversion de d\xe9pendance entre les composants externes et l'hexagone."}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Donc nous devons instancier les adapters pour les donner au constructeur des objets de l'hexagone par le m\xe9canisme qui s'appelle l'",(0,i.jsx)(s.strong,{children:"injection de d\xe9pendance"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["Nous devons avoir un ",(0,i.jsx)(s.strong,{children:"composant de configuration"})," qui soit neutre du point de vue notre architecture, et qui ait ",(0,i.jsx)(s.strong,{children:"acc\xe8s \xe0 tous les composants"})," pour les instancier."]}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Il va :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Cr\xe9er les adapters web et s'assurer que les requ\xeates HTTP sont c\xe2bl\xe9es aux bons adapters."}),"\n",(0,i.jsx)(s.li,{children:"Cr\xe9er les adapters de persistance et s'assurer qu'elles aient acc\xe8s \xe0 la base de donn\xe9es."}),"\n",(0,i.jsx)(s.li,{children:"Cr\xe9er les use cases, et au moment de leur cr\xe9ation, leur donner les adapters web et les adapters de persistance dans leur constructeur, pour qu'elles y aient acc\xe8s (injection de d\xe9pendance)."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"Il va aussi passer certaines valeurs de configuration aux autres composants (serveur de base de donn\xe9es, serveur SMTP etc)."}),"\n",(0,i.jsx)(s.li,{children:"Il aura toutes les raisons de changer"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"C\xf4t\xe9 impl\xe9mentation :"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsxs)(s.p,{children:["On peut cr\xe9er le composant avec du ",(0,i.jsx)(s.strong,{children:"code sans librairie"})," :"]}),"\n",(0,i.jsx)(s.pre,{"data-language":"typescript","data-theme":"default",children:(0,i.jsxs)(s.code,{"data-language":"typescript","data-theme":"default",children:[(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"function"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"main"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"() {"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"const"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"accountRepository"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"new"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"AccountRepository"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"();"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"const"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"activityRepository"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"new"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"ActivityRepository"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"();"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"const"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"accountPersistanceAdapter"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"new"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"AccountPersistanceAdapter"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"("})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    acountRepository"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    activityRepository"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  );"})}),"\n",(0,i.jsx)(s.span,{className:"line",children:" "}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"const"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"sendMoneyUseCase"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"new"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"SendMoneyService"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"(accountPersistanceAdapter);"})]}),"\n",(0,i.jsx)(s.span,{className:"line",children:" "}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"const"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"sendMoneyController"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"new"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"SendMoneyController"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"(sendMoneyUseCase);"})]}),"\n",(0,i.jsx)(s.span,{className:"line",children:" "}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"startProcessingWebRequests"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"(sendMoneyController);"})]}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Cette m\xe9thode a le d\xe9savantage d'amener \xe0 \xe9crire beaucoup de code, et d'obliger \xe0 ce que les classes de chaque composant soient accessibles publiquement."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["\n",(0,i.jsx)(s.p,{children:"Parmi les techniques impliquant une librairie, en Java on a"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Le classpath scanning o\xf9 il s'agit d'annoter les classes de chaque composant et demander \xe0 Spring de scanner les classes pour trouver celles qu'il faut instancier et injecter.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Elle est plus rapide mais peut mener \xe0 des bugs difficiles \xe0 trouver parce que le syst\xe8me de scanning est obscur."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["L'autre m\xe9thode c'est d'\xe9crire des classes de configuration qui vont indiquer quelles classes doivent \xeatre instanci\xe9es et inject\xe9es.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"On va \xe9crire plus de code pour obtenir plus de d\xe9couplage et de transparence sur ce qui est fait."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"11---enforcing-architecture-boundaries",children:"11 - Enforcing Architecture Boundaries"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Ce chapitre traite de la mani\xe8re d'\xe9viter que l'architecture choisie s'\xe9rode au fil du temps, causant un manque de clart\xe9 et une lenteur \xe0 faire des changements."}),"\n",(0,i.jsxs)(s.li,{children:["La principale chose \xe0 faire respecter est le ",(0,i.jsx)(s.strong,{children:"sens des d\xe9pendances"})," parmi les couches (",(0,i.jsx)(s.code,{children:"domaine -> application -> adapters -> configuration"}),")."]}),"\n",(0,i.jsxs)(s.li,{children:["On peut utiliser la ",(0,i.jsx)(s.strong,{children:"visibilit\xe9 de package,"})," si le langage le permet (",(0,i.jsx)(s.em,{children:"package-private modifier"})," en Java), pour rendre le contenu des couches plus coh\xe9sives.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Si on part du principe que notre composant de configuration est une librairie qui passe outre la visibilit\xe9 de package et qu'elle peut instancier m\xeame les classes priv\xe9es \xe0 leur package, alors on n'a que les relations entre couches \xe0 se pr\xe9occuper :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Les ",(0,i.jsx)(s.strong,{children:"adapters et les use cases peuvent \xeatre priv\xe9s"})," au package de leur couche."]}),"\n",(0,i.jsxs)(s.li,{children:["Les ",(0,i.jsx)(s.strong,{children:"entities du domaine doivent \xeatre publiques"})," pour \xeatre acc\xe9d\xe9es par les couches du dessus, ",(0,i.jsx)(s.strong,{children:"de m\xeame que les ports"})," qui doivent \xeatre acc\xe9d\xe9s par les adapters qui les impl\xe9mentent."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["On peut aussi utiliser des ",(0,i.jsx)(s.strong,{children:"moyens au runtime"})," pour emp\xeacher que le sens des d\xe9pendances s'inverse, par exemple ",(0,i.jsx)(s.strong,{children:"au moment des tests"}),".","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"En Java il y a la librairie ArchUnit qui permet de faire des tests d'architecture, y compris des tests sur le sens des d\xe9pendances, en v\xe9rifiant qu'un package ne d\xe9pend pas d'un autre package (importe rien qui vienne de lui)."}),"\n",(0,i.jsxs)(s.li,{children:["On peut construire par dessus ce genre de librairie pour obtenir un DSL (Domain Specific Language) dans nos tests, qui v\xe9rifie les d\xe9pendances pour un bounded context donn\xe9 :","\n",(0,i.jsx)(s.pre,{"data-language":"java","data-theme":"default",children:(0,i.jsxs)(s.code,{"data-language":"java","data-theme":"default",children:[(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-constant)"},children:"HexagonalArchitecture"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"boundedContext"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"("}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"account"'}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:")"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"withDomainLayer"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"("}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"domain"'}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:")"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"withAdaptersLayer"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"("}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"adapter"'}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:")"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"incoming"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"("}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"web"'}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:")"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"outgoing"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"("}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"persistence"'}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:")"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"and"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"()"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"withApplicationLayer"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"("}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"application"'}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:")"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"services"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"("}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"service"'}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:")"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"incomingPorts"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"("}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"port.in"'}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:")"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"outgoingPorts"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"("}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"port.out"'}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:")"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"and"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"()"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"withConfiguration"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"("}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"configuration"'}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:")"})]}),"\n",(0,i.jsxs)(s.span,{className:"line",children:[(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"check"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"("}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-keyword)"},children:"new"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"ClassFileImporter()"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-punctuation)"},children:"."}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-function)"},children:"importPackages"}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"("}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"buckpal"'}),(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"));"})]}),"\n",(0,i.jsx)(s.span,{className:"line",children:(0,i.jsx)(s.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"Attention par contre : ce genre de test est vuln\xe9rable aux refactorings. Il suffit que le nom des packages change et aucun probl\xe8me ne sera trouv\xe9 sur des packages qui n'existent pas."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["On peut enfin profiter de la ",(0,i.jsx)(s.strong,{children:"phase de build"})," de notre application pour cr\xe9er autant d'artefacts de build que n\xe9cessaire, et profiter de l'outil de build pour garantir les limites des composants de notre architecture.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["On peut d\xe9couper avec diverses granularit\xe9s :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Une premi\xe8re solution c'est de faire 3 groupes de build : la configuration, les adapters, et l'application (hexagone)."}),"\n",(0,i.jsx)(s.li,{children:"On peut d\xe9cider de s\xe9parer les types d'adapter pour qu'ils restent autonomes."}),"\n",(0,i.jsx)(s.li,{children:"Un cran plus loin encore, on peut isoler les ports dans une unit\xe9 \xe0 part. De cette mani\xe8re on emp\xeache la no mapping strategy."}),"\n",(0,i.jsx)(s.li,{children:"On peut enfin aussi s\xe9parer les types entrants et sortants des ports pour plus de clart\xe9, et s\xe9parer le domaine et l'application service dans deux unit\xe9s pour emp\xeacher le domaine d'acc\xe9der aux use cases."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"Un des avantages c'est que l'outil de build nous emp\xeachera d'avoir des d\xe9pendances circulaires entre nos unit\xe9s de build, am\xe9liorant l'aspect single responsibility de nos modules."}),"\n",(0,i.jsx)(s.li,{children:"\xcatre oblig\xe9 de maintenir un script de build permet aussi de faire des choix en conscience pour ce qui est du placement des diverses classes."}),"\n",(0,i.jsxs)(s.li,{children:["D'un autre c\xf4t\xe9 c'est un certain travail de maintenance quand m\xeame, donc il vaut mieux que l'",(0,i.jsx)(s.strong,{children:"architecture soit un minimum stable d'abord"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"L'id\xe9e c'est de combiner les trois m\xe9thodes pour avoir une architecture solide dans le temps."}),"\n",(0,i.jsx)(s.li,{children:"A noter que plus on d\xe9coupe finement, plus on devra faire de mappings."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"12---taking-shortcuts-consciously",children:"12 - Taking Shortcuts Consciously"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Les raccourcis doivent \xeatre connus et compris pour \xeatre \xe9vit\xe9s dans le but de garantir l'int\xe9grit\xe9 de l'architecture, et dans certains cas accept\xe9s en toute conscience."}),"\n",(0,i.jsxs)(s.li,{children:["La ",(0,i.jsx)(s.strong,{children:"th\xe9orie des vitres cass\xe9es"})," vient d'un psychologue (Philip Zimbardo) qui a conduit une exp\xe9rience en laissant une voiture dans un quartier chaud, et une autre dans un quartier chic.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"La premi\xe8re a \xe9t\xe9 d\xe9soss\xe9e rapidement puis les passants ont commenc\xe9 \xe0 la d\xe9grader."}),"\n",(0,i.jsx)(s.li,{children:"La 2\xe8me a \xe9t\xe9 laiss\xe9e intacte pendant une semaine. Puis le psychologue a cass\xe9 une de ses vitres, et \xe0 partir de l\xe0 elle a \xe9t\xe9 d\xe9grad\xe9e aussi vite que la premi\xe8re, par des gens de tout type."}),"\n",(0,i.jsx)(s.li,{children:"L'id\xe9e est de dire que nous avons une tendance naturelle \xe0 en rajouter quand les choses sont d\xe9j\xe0 en mauvais \xe9tat ou mal rang\xe9es. La m\xeame chose s'applique au code et \xe0 son architecture."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Il est de la responsabilit\xe9 des d\xe9veloppeurs de garder ",(0,i.jsx)(s.strong,{children:"l'architecture la plus clean possible d\xe8s le d\xe9but"}),".","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["On peut cependant prendre des ",(0,i.jsx)(s.strong,{children:"raccourcis choisis en conscience"}),", faire des compromis qu'on assume."]}),"\n",(0,i.jsxs)(s.li,{children:["Pour que l'effet des vitres cass\xe9es soit limit\xe9, il faut ",(0,i.jsx)(s.strong,{children:"documenter les raccourcis choisis"})," par l'\xe9quipe dans des ADR (architecture Decision Record)."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Parmi les raccourcis possible dans l'architecture hexagonale on a :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Utiliser le ",(0,i.jsx)(s.strong,{children:"m\xeame mod\xe8le pour les inputs (ou les outputs) de deux use cases"}),".","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["La question \xe0 se poser est : est-ce que ces deux use cases sont vou\xe9s \xe0 ",(0,i.jsx)(s.strong,{children:"\xe9voluer ensemble"})," ou non ?"]}),"\n",(0,i.jsx)(s.li,{children:"Si oui alors il faut que leurs inputs et leurs outputs aient des mod\xe8les s\xe9par\xe9s. Si non alors on peut (et on doit) les coupler au niveau de leurs inputs et outputs."}),"\n",(0,i.jsx)(s.li,{children:"Il ne faut donc pas oublier de r\xe9guli\xe8rement reconsid\xe9rer si deux use cases imagin\xe9s comme vou\xe9s \xe0 \xe9voluer ensemble, ne doivent pas \xeatre d\xe9sormais consid\xe9r\xe9s de mani\xe8re s\xe9par\xe9e."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Utiliser des ",(0,i.jsx)(s.strong,{children:"entities du domaine comme mod\xe8les d'entr\xe9e ou de sortie de la couche applicative"}),".","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Il s'agit d'avoir les ports gauches (l'entr\xe9e et la sortie depuis l'adapter web vers l'hexagone) bas\xe9s sur des domain entities."}),"\n",(0,i.jsx)(s.li,{children:"En faisant \xe7a on va \xeatre tent\xe9 d'ajouter des champs \xe0 l'entity du domaine \xe0 chaque fois qu'on en aura besoin dans notre input ou output de la couche applicative. Donc le domaine va dans une certaine mesure d\xe9pendre de l'application.."}),"\n",(0,i.jsxs)(s.li,{children:["C'est ",(0,i.jsx)(s.strong,{children:"OK de le faire si on est sur des use cases simple type create/update"})," parce que dans ce cas c'est bien le contenu exact des domain entities qu'on veut."]}),"\n",(0,i.jsx)(s.li,{children:"Il ne faut pas oublier de reconsid\xe9rer r\xe9guli\xe8rement les use cases o\xf9 on l'a fait et qui se sont complexifi\xe9s."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Ne pas utiliser de ports entrants pour l'adapter web"}),".","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Le sens du flow \xe9tant le m\xeame que le sens des appels pour l'adapter web, on peut tr\xe8s bien lui permettre d'appeler directement les use cases, sans passer par une interface."}),"\n",(0,i.jsx)(s.li,{children:"On perd alors la clart\xe9 des points d'entr\xe9e qui ne sautent plus aux yeux aussi bien qu'avec des ports explicites."}),"\n",(0,i.jsx)(s.li,{children:"On ne peut plus non plus utiliser des moyens pour forcer l'hexagone \xe0 ne pas d\xe9pendre de l'adapter web."}),"\n",(0,i.jsxs)(s.li,{children:["Cette technique est donc \xe0 r\xe9server aux ",(0,i.jsx)(s.strong,{children:"petites applications, ou celles qui n'ont qu'un adapter web"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Ne pas cr\xe9er d'application service"}),".","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Parfois l'application service ne fait rien \xe0 part appeler une m\xe9thode dans l'adapter de persistance et retourner son r\xe9sultat \xe0 l'adapter web. Dans ce cas, on peut laisser l'adapter web appeler directement l'adapter de persistance."}),"\n",(0,i.jsxs)(s.li,{children:["C'est le cas quand on a des ",(0,i.jsx)(s.strong,{children:"use cases CRUD"}),"."]}),"\n",(0,i.jsx)(s.li,{children:"On a alors nos domain entities qui sont pass\xe9s entre adapters gauches et droits."}),"\n",(0,i.jsxs)(s.li,{children:["Le ",(0,i.jsx)(s.strong,{children:"danger c'est que si la fonctionnalit\xe9 se complexifie"}),", la logique m\xe9tier sera ajout\xe9e dans l'adapter de persistance. Il faut dans ce cas absolument cr\xe9er un application service."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.li,{children:"La plupart des raccourcis sont adapt\xe9s aux fonctionnalit\xe9s simples de type CRUD. On commence en g\xe9n\xe9ral comme \xe7a, et on r\xe9\xe9value les raccourcis si l'application se complexifie. Si elle reste simple on pourra garder les raccourcis."}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"13---managing-multiple-bounded-contexts",children:"13 - Managing Multiple Bounded Contexts"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["On finit en g\xe9n\xe9ral par cr\xe9er des ",(0,i.jsx)(s.strong,{children:"Bounded Contexts"})," (BC) pour s\xe9parer certaines parties de la codebase des autres,. C'est utile entre autres pour leur permettre d'\xe9voluer ind\xe9pendamment, et pour garder des morceaux de code ind\xe9pendants qui peuvent rentrer dans la m\xe9moire imm\xe9diate d'un \xeatre humain."]}),"\n",(0,i.jsxs)(s.li,{children:["La solution la plus imm\xe9diate pour g\xe9rer plusieurs BCs en clean architecture est de faire les choses de mani\xe8re ",(0,i.jsx)(s.strong,{children:"bien d\xe9coupl\xe9e"})," :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["On cr\xe9e :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Un ",(0,i.jsx)(s.em,{children:"output port"})," sur le core du BC appelant."]}),"\n",(0,i.jsxs)(s.li,{children:["Un ",(0,i.jsx)(s.em,{children:"input port"})," sur le core du BC appel\xe9."]}),"\n",(0,i.jsxs)(s.li,{children:["Un ",(0,i.jsx)(s.em,{children:"output adapter"})," (qu'on pourrait appeler ",(0,i.jsx)(s.em,{children:"Domain Adapter"}),") qui impl\xe9mente l'",(0,i.jsx)(s.em,{children:"output port"}),", et appelle l'",(0,i.jsx)(s.em,{children:"input port"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Le probl\xe8me est qu'avec un grand nombre de BCs, ",(0,i.jsx)(s.strong,{children:"le nombre de ces ports et adapters"})," \xe0 cr\xe9er va \xeatre potentiellement ",(0,i.jsx)(s.strong,{children:"de plus en plus grand"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Dans l'article original d'Alistair Cockburn sur l'hexagonal architecture, il n'y a pas de mention de ",(0,i.jsx)(s.em,{children:"Bounded Context"})," mais seulement d'",(0,i.jsx)(s.em,{children:"Application"})," pour ce qui est du core d'un hexagone.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["L'auteur en d\xe9duit qu'on peut consid\xe9rer que ",(0,i.jsx)(s.strong,{children:"les BCs peuvent exister \xe0 l'int\xe9rieur d'un m\xeame hexagone"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:["On se retrouve avec un ",(0,i.jsx)(s.em,{children:"input adapter"})," web, plusieurs ",(0,i.jsx)(s.em,{children:"use-cases"})," \xe0 l'int\xe9rieur du core, et un ",(0,i.jsx)(s.em,{children:"output adapter"})," de persistance.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["L'auteur dit qu'on peut avoir un ou plusieurs ",(0,i.jsx)(s.em,{children:"input ports"})," pour chaque BC selon les cas."]}),"\n",(0,i.jsxs)(s.li,{children:["Pour les ",(0,i.jsx)(s.em,{children:"output ports"})," de persistance, il dit qu'il est pr\xe9f\xe9rable de ne pas les partager entre BCs, parce qu'on ne veut pas que les BCs partagent la DB et aient le m\xeame data model. Ils doivent au moins avoir des sch\xe9mas diff\xe9rents, ou au minimum des tables diff\xe9rentes."]}),"\n",(0,i.jsx)(s.li,{children:"Il ne dit rien sur les adapters en eux-m\xeames, il s'agit bien des ports dont il faut \xe9ventuellement en faire plusieurs."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Pour faire communiquer les BCs entre eux, l'auteur propose deux solutions tir\xe9es du DDD, et nous propose de ",(0,i.jsx)(s.strong,{children:"lire la litt\xe9rature DDD"})," pour en savoir plus.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["1 - Un ",(0,i.jsx)(s.em,{children:"use-case"})," qui a besoin d'une info venant d'un ",(0,i.jsx)(s.em,{children:"use-case"})," d'un autre BC peut consommer des ",(0,i.jsx)(s.strong,{children:"domain events"})," que l'autre \xe9met, les stocker en base chez lui, et les r\xe9utiliser ensuite."]}),"\n",(0,i.jsxs)(s.li,{children:["2 - On peut avoir un ",(0,i.jsx)(s.strong,{children:"application service"})," \xe0 l'int\xe9rieur de l'hexagone qui coordonne les appels aux ",(0,i.jsx)(s.em,{children:"use-cases"})," de chaque BC (qui sont appel\xe9s ",(0,i.jsx)(s.em,{children:"Domain Service"}),").","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Dans ce cas pr\xe9cis, on peut utiliser l'",(0,i.jsx)(s.em,{children:"application service"})," ext\xe9rieur aux BCs pour porter une transaction DB, qui pourrait \xeatre utile pour l'ensemble des BCs mis en jeu."]}),"\n",(0,i.jsx)(s.li,{children:"NDLR : d\xe9j\xe0 que c'est chaud d'envisager une transaction pour plusieurs aggregates, comment on fait pour envisager une transaction pour plusieurs use-cases dans plusieurs BCs diff\xe9rents ?"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"14---a-component-based-approach-to-software-architecture",children:"14 - A Component-Based Approach to Software Architecture"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["La ",(0,i.jsx)(s.strong,{children:"component-based architecture"})," peut \xeatre utile :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"En compl\xe9ment de l'hexagonal architecture"})," dans le cas o\xf9 on choisit d'avoir un hexagone pour plusieurs ",(0,i.jsx)(s.em,{children:"bounded contexts"}),", mais qu'on veut faire appara\xeetre les limites entre chaque ",(0,i.jsx)(s.em,{children:"bounded context"})," \xe0 l'int\xe9rieur du ",(0,i.jsx)(s.em,{children:"core"}),"."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"A la place de l'hexagonal architecture"})," si celle-ci s'av\xe8re trop complexe pour notre projet, ou si les comp\xe9tences dans l'\xe9quipe sont insuffisantes et qu'on veut se rabattre sur une architecture plus simple."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["La modularit\xe9 permet de construire des syst\xe8mes complexes.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Elle n\xe9cessite d'avoir des modules (l'auteur pr\xe9f\xe8re le terme ",(0,i.jsx)(s.em,{children:"component"}),") qui :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.strong,{children:"1 - Encapsulent des d\xe9tails d'impl\xe9mentation."})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.strong,{children:"2 - Exposent une interface."})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Un ",(0,i.jsx)(s.em,{children:"component"})," peut contenir des ",(0,i.jsx)(s.em,{children:"sub-components"})," qui encapsulent eux-aussi de la logique et exposent une API. Leur API ne sera accessible qu'\xe0 l'int\xe9rieur du composant qui les contient."]}),"\n",(0,i.jsx)(s.li,{children:"Ces quelques r\xe8gles simples permettent de d\xe9finir une architecture modulaire."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["L'auteur pr\xe9sente un exemple de projet utilisant cette architecture : il s'agit d'un logiciel faisant du scraping de pages web, de l'analyse sur ce qui a \xe9t\xe9 r\xe9colt\xe9, et stocke ensuite \xe7a dans une DB.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Le logiciel est un ",(0,i.jsx)(s.em,{children:"component"})," en lui-m\xeame puisqu'il pr\xe9sente une API publique et cache le reste."]}),"\n",(0,i.jsxs)(s.li,{children:["Il contient 3 sub-components :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Un ",(0,i.jsx)(s.em,{children:"component"})," servant d'",(0,i.jsx)(s.em,{children:"input adapter"})," consommant une queue."]}),"\n",(0,i.jsxs)(s.li,{children:["Un ",(0,i.jsx)(s.em,{children:"component"})," contenant la logique business pour analyser les donn\xe9es des pages et sortir les r\xe9sultats \xe0 stocker."]}),"\n",(0,i.jsxs)(s.li,{children:["Un ",(0,i.jsx)(s.em,{children:"component"})," servant d'",(0,i.jsx)(s.em,{children:"output adapter"})," de persistance, pour stocker le r\xe9sultat en DB."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["Il ne faut pas oublier d'ajouter des contraintes pour garantir l'architecture (avec des outils comme ArchUnit). Les r\xe8gles sont tr\xe8s simples :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Aucun code ext\xe9rieur \xe0 un ",(0,i.jsx)(s.em,{children:"component"})," ne doit acc\xe9der au code \xe0 l'int\xe9rieur de celui-ci. Il ne peut acc\xe9der qu'\xe0 son API publique."]}),"\n",(0,i.jsxs)(s.li,{children:["Quand un ",(0,i.jsx)(s.em,{children:"component"})," est \xe0 l'int\xe9rieur d'un autre ",(0,i.jsx)(s.em,{children:"component"}),", il fait partie des d\xe9tails d'impl\xe9mentation de celui-ci."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"15---deciding-on-an-architecture-style",children:"15 - Deciding on an Architecture Style"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["La question dans ce chapitre est : quand est-ce qu'il faut utiliser l'architecture hexagonale ?","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["La premi\xe8re chose c'est que ",(0,i.jsx)(s.strong,{children:"cette architecture met le domaine au centre"})," et l'isole du reste, pour pouvoir travailler dessus.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Si on n'a pas besoin de \xe7a, on n'a sans doute pas besoin d'architecture hexagonale."}),"\n",(0,i.jsx)(s.li,{children:"\xc7a va bien avec le DDD."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(s.li,{children:["La deuxi\xe8me chose c'est qu'il faut ",(0,i.jsx)(s.strong,{children:"exp\xe9rimenter"})," cette architecture au moins sur un module de notre application, pour voir ce qu'elle apporte et voir o\xf9 est-ce qu'on peut l'utiliser."]}),"\n",(0,i.jsxs)(s.li,{children:["Et enfin la 3\xe8me chose c'est que le choix de l'architecture ",(0,i.jsx)(s.strong,{children:"d\xe9pend de nombreux crit\xe8res"})," :","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Le type du logiciel."}),"\n",(0,i.jsx)(s.li,{children:"Le r\xf4le du domaine dans le code."}),"\n",(0,i.jsx)(s.li,{children:"L'exp\xe9rience de l'\xe9quipe."}),"\n",(0,i.jsx)(s.li,{children:"etc."}),"\n",(0,i.jsxs)(s.li,{children:["NDLR : l'auteur ne se mouille pas beaucoup.","\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Pour info Vlad Khononov conseille dans Learning Domain Driven Design l'heuristique d'adopter l'architecture hexagonale dans le cas o\xf9 on a un code subdomain et qu'on choisit les patterns tactiques du DDD, et d'adopter une architecture en couches sinon."}),"\n",(0,i.jsx)(s.li,{children:"On peut imaginer qu'\xe9tant donn\xe9 que l'auteur donne des raccourcis pour les use cases CRUD, y compris ceux qui resteront CRUD, il serait pour privil\xe9gier l'usage de l'architecture hexagonale la plupart du temps, en modulant avec ces raccourcis."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}let o=(0,r.n)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,l.R)(),e.components);return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(a,{...e})}):a(e)},pageOpts:{filePath:"pages/books/get-your-hands-dirty-on-clean-architecture.mdx",route:"/books/get-your-hands-dirty-on-clean-architecture",title:"Get Your Hands Dirty on Clean Architecture",headings:t},pageNextRoute:"/books/get-your-hands-dirty-on-clean-architecture"})}},e=>{var s=s=>e(e.s=s);e.O(0,[301,636,593,792],()=>s(4594)),_N_E=e.O()}]);