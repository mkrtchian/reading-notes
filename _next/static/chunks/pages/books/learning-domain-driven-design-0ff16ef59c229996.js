(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[804],{8061:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/books/learning-domain-driven-design",function(){return s(7804)}])},7804:function(e,n,s){"use strict";s.r(n),s.d(n,{__toc:function(){return h},default:function(){return x}});var i=s(5893),r=s(2673),t=s(2643),l=s(8397);function a(e){let{children:n}=e;return(0,i.jsx)("strong",{style:{color:"#ff9900"},children:n})}function o(e){let{children:n}=e;return(0,i.jsx)("strong",{style:{color:"#e06666"},children:n})}function c(e){let{children:n}=e;return(0,i.jsx)("strong",{style:{color:"#4a86e8"},children:n})}function u(e){let{children:n}=e;return(0,i.jsx)("strong",{style:{color:"#bf9000"},children:n})}function d(e){let{children:n}=e;return(0,i.jsx)("strong",{style:{color:"#674ea7"},children:n})}function p(e){let{children:n}=e;return(0,i.jsx)("strong",{style:{color:"#6aa84f"},children:n})}let h=[{depth:3,value:"Introduction",id:"introduction"},{depth:2,value:"Part I : Strategic Design",id:"part-i--strategic-design"},{depth:3,value:"1 - Analyzing Business Domains",id:"1---analyzing-business-domains"},{depth:3,value:"2 - Discovering Domain Knowledge",id:"2---discovering-domain-knowledge"},{depth:3,value:"3 - Managing Domain Complexity",id:"3---managing-domain-complexity"},{depth:3,value:"4 - Integrating Bounded Contexts",id:"4---integrating-bounded-contexts"},{depth:2,value:"Part II : Tactical Design",id:"part-ii--tactical-design"},{depth:3,value:"5 - Implementing Simple Business Logic",id:"5---implementing-simple-business-logic"},{depth:3,value:"6 - Tackling Complex Business Logic",id:"6---tackling-complex-business-logic"},{depth:3,value:"7 - Modeling the Dimension of Time",id:"7---modeling-the-dimension-of-time"},{depth:3,value:"8 - Architectural Patterns",id:"8---architectural-patterns"},{depth:3,value:"9 - Communication Patterns",id:"9---communication-patterns"},{depth:2,value:"Part III : Applying Domain-Driven Design in Practice",id:"part-iii--applying-domain-driven-design-in-practice"},{depth:3,value:"10 - Heuristics",id:"10---heuristics"},{depth:3,value:"11 - Evolving Design Decisions",id:"11---evolving-design-decisions"},{depth:3,value:"12 - EventStorming",id:"12---eventstorming"},{depth:3,value:"13 - Domain-Driven Design in the Real World",id:"13---domain-driven-design-in-the-real-world"},{depth:2,value:"Part IV : Relationships to Other Methodologies and Patterns",id:"part-iv--relationships-to-other-methodologies-and-patterns"},{depth:3,value:"14 - Microservices",id:"14---microservices"},{depth:3,value:"15 - Event-Driven Architecture",id:"15---event-driven-architecture"},{depth:3,value:"16 - Data Mesh",id:"16---data-mesh"},{depth:2,value:"Appendix A - Applying DDD: A Case Study",id:"appendix-a---applying-ddd-a-case-study"}];function m(e){let n=Object.assign({h1:"h1",h3:"h3",ul:"ul",li:"li",strong:"strong",h2:"h2",code:"code",pre:"pre",span:"span",em:"em",a:"a",p:"p"},(0,t.a)(),e.components);return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{children:"Learning Domain Driven Design: Aligning Software Architecture and Business Strategy"}),"\n",(0,i.jsx)(n.h3,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le probl\xe8me principal qui met en \xe9chec la plupart des projets de dev c'est la ",(0,i.jsx)(n.strong,{children:"communication"}),". Et c'est le cœur de ce qu'est le DDD."]}),"\n",(0,i.jsxs)(n.li,{children:["Le but du DDD c'est d'aligner le ",(0,i.jsx)(n.strong,{children:"D"}),"esign logiciel avec le ",(0,i.jsx)(n.strong,{children:"D"}),"omaine business."]}),"\n",(0,i.jsxs)(n.li,{children:["Le DDD se d\xe9compose en 2 parties :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"design strat\xe9gique"})," : cr\xe9er une compr\xe9hension commune du domaine, et prendre des d\xe9cisions haut niveau sur le projet.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"C'est les questions “Quel logiciel on cr\xe9e ?” et “Pourquoi on le cr\xe9e ?”"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"design tactique"})," : \xe9crire du code qui \xe9pouse le domaine.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"C'est la question “Comment on cr\xe9e chaque partie du logiciel ?”"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"part-i--strategic-design",children:"Part I : Strategic Design"}),"\n",(0,i.jsx)(n.h3,{id:"1---analyzing-business-domains",children:"1 - Analyzing Business Domains"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Pour d\xe9velopper un bon logiciel qui r\xe9ponde au besoin de notre entreprise, il faut que ",(0,i.jsx)(n.strong,{children:"nous les devs connaissions la strat\xe9gie du business"})," : diff\xe9rencier les parties importantes des parties moins importantes pour adapter nos techniques."]}),"\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"business domain"})," est le domaine d'activit\xe9 principal de l'entreprise.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Exemple : FedEx fait de la livraison."}),"\n",(0,i.jsx)(n.li,{children:"Pour une grande entreprise qui fait plusieurs choses tr\xe8s diff\xe9rentes (comme Google ou Amazon), on peut parler de plusieurs domains."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Un ",(0,i.jsx)(n.strong,{children:"subdomain"})," est une activit\xe9 que l'entreprise fait pour mener \xe0 bien son business.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Exemple : Starbucks fait des caf\xe9s, mais il doit aussi recruter, g\xe9rer la tr\xe9so etc."}),"\n",(0,i.jsxs)(n.li,{children:["Il existe 3 types de subdomains :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"core subdomains"})," sont les seules activit\xe9s qui donnent \xe0 l'entreprise un ",(0,i.jsx)(n.strong,{children:"avantage concurrentiel"})," par rapport \xe0 ses concurrents. Soit par une innovation produit, soit par une optimisation qui permet de produire \xe0 moindre co\xfbt.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["C'est une activit\xe9 par nature ",(0,i.jsx)(n.strong,{children:"complexe"})," \xe9tant donn\xe9 qu'il faut qu'elle ne soit pas facilement reproductible par les concurrents."]}),"\n",(0,i.jsxs)(n.li,{children:["Le statut de “core” est aussi par nature ",(0,i.jsx)(n.strong,{children:"temporaire"})," : d\xe8s que les concurrents rattrappent ce n'est plus core."]}),"\n",(0,i.jsx)(n.li,{children:"A noter aussi qu'un core subdomain peut tr\xe8s bien ne pas r\xe9sider dans du logiciel. Par ex une bijouterie va vendre mieux que les concurrents gr\xe2ce au style donn\xe9 par les artisans bijoutiers (qui donne l'avantage comp\xe9titif et qui est donc le core subdomain), la boutique en ligne dans ce cas est un generic subdomain."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"generic subdomains"})," sont des ",(0,i.jsx)(n.strong,{children:"probl\xe8mes communs"})," d\xe9j\xe0 r\xe9solus et largement disponibles et utilis\xe9s par les concurrents (soit en open source, soit sous forme de service payant).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ils sont ",(0,i.jsx)(n.strong,{children:"complexes"})," comme les core subdomains, mais ne donnent juste pas d'avantage comp\xe9titif."]}),"\n",(0,i.jsx)(n.li,{children:"Exemple : un m\xe9canisme d'authentification est complexe, mais des solutions open source et payantes existent, et personne ne recode son syst\xe8me \xe0 soi."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"supporting subdomains"})," sont des activit\xe9s simples mais n\xe9cessaires et dont on n'a pas de solution g\xe9n\xe9rique \xe0 r\xe9utiliser (ou alors \xe7a co\xfbte moins cher de le faire soi-m\xeame) : c'est du ETL (extract, load, transform), ou encore CRUD.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Vu la simplicit\xe9, ils ne peuvent pas procurer d'avantage comp\xe9titif."}),"\n",(0,i.jsx)(n.li,{children:"Vu qu'il n'y a pas d'avantage comp\xe9titif, on pr\xe9f\xe8re appliquer l'effort sur les core subdomains qui apporteront plus de valeur business."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["C\xf4t\xe9 strat\xe9gie :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les core subdomains doivent \xeatre ",(0,i.jsx)(n.strong,{children:"d\xe9velopp\xe9s au sein de l'entreprise"}),", par les d\xe9veloppeurs les plus exp\xe9riment\xe9s, et en appliquant le ",(0,i.jsx)(n.strong,{children:"maximum de qualit\xe9"})," et les techniques d'ing\xe9nierie les plus avanc\xe9es.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On ne peut pas les acheter sinon on perd la notion d'avantage comp\xe9titif, et il ne serait pas tr\xe8s malin de les sous-traiter."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les generic subdomains \xe9tant difficiles mais d\xe9j\xe0 r\xe9solus, il est plus rentable de ",(0,i.jsx)(n.strong,{children:"les acheter"})," (ou de faire appel aux services d'un consultant sp\xe9cialis\xe9), ou d'",(0,i.jsx)(n.strong,{children:"utiliser une solution open source"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Les supporting subdomains sont simples et changent peu, donc ils peuvent \xeatre impl\xe9ment\xe9s ",(0,i.jsx)(n.strong,{children:"avec moins de qualit\xe9"}),", ou ",(0,i.jsx)(n.strong,{children:"moins de techniques sophistiqu\xe9es"})," (design patterns, techniques d'architecture etc.). Un simple framework rapide suffit.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut laisser les d\xe9butants se charger de \xe7a, ou alors on peut le sous-traiter."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour ",(0,i.jsx)(n.strong,{children:"trouver les subdomains"}),", il va falloir faire l'analyse nous-m\xeames.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut d\xe9j\xe0 partir des d\xe9partements qui composent l'entreprise, mais \xe7a nous donne des subdomains grossiers."}),"\n",(0,i.jsxs)(n.li,{children:["On peut alors “distiller” les subdomains en plus petits subdomains : on prend un d\xe9partement et on liste les sous-activit\xe9s, puis on analyse pour chacune d'entre elles si elles sont core, generic ou support.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut distiller au maximum jusqu'\xe0 arriver \xe0 “un subdomain comme un ensemble coh\xe9rent de cas d'usages” : un m\xeame acteur qui fait plusieurs t\xe2ches pr\xe9cises."}),"\n",(0,i.jsx)(n.li,{children:"Il faut faire la distillation maximale pour les subdomains core, pour pouvoir \xe9liminer les petits bouts g\xe9n\xe9riques ou support \xe0 l'int\xe9rieur et se concentrer uniquement sur ce qui a le plus de valeur."}),"\n",(0,i.jsx)(n.li,{children:"Pour les autres on s'arr\xeate de distiller \xe0 partir du moment o\xf9 une distillation donne des activit\xe9s du m\xeame type (generic ou support), aller au-del\xe0 ne nous permettra de toute fa\xe7on pas de prendre des d\xe9cisions plus strat\xe9giques."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les devs vont devoir collaborer avec les ",(0,i.jsx)(n.strong,{children:"domain experts"}),", mais qui sont-ils ?","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ce ne sont pas les analystes qui recueillent le besoin, ni les ing\xe9nieurs qui cr\xe9ent le syst\xe8me. Ces derniers transforment le mod\xe8le mental des domain experts pour en faire du logiciel."}),"\n",(0,i.jsxs)(n.li,{children:["Ce sont ",(0,i.jsx)(n.strong,{children:"soit ceux qui arrivent avec les besoins"})," (qui sont l\xe0 depuis le d\xe9but, qui ont cr\xe9\xe9 l'activit\xe9 etc.), ",(0,i.jsx)(n.strong,{children:"soit les utilisateurs finaux"})," dont on r\xe9sout le probl\xe8me."]}),"\n",(0,i.jsx)(n.li,{children:"A noter que les domain experts peuvent tr\xe8s bien n'\xeatre experts que d'un sous-domaine seulement."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2---discovering-domain-knowledge",children:"2 - Discovering Domain Knowledge"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["G\xe9n\xe9ralement, les gens du business (les domain experts) communiquent les besoins \xe0 des interm\xe9diaires (system/business analysts, product owners, project managers), qui vont ensuite communiquer \xe7a aux ing\xe9nieurs logiciel qui cr\xe9ent le logiciel.\n",(0,i.jsx)(n.code,{children:"domain experts -> gens au milieu -> software engineers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On assiste aussi \xe0 une ou plusieurs transformations :\n",(0,i.jsx)(n.code,{children:"domain knowledge -> analysis model -> software design model"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le DDD propose d'arr\xeater les transformations, et que tous les acteurs utilisent le m\xeame langage pour se parler : l'",(0,i.jsx)(n.strong,{children:"Ubiquitous Language"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il doit pouvoir \xeatre compris par les domain experts, donc il va se baser sur les termes qu'ils utilisent d\xe9j\xe0."}),"\n",(0,i.jsxs)(n.li,{children:["Chaque terme doit \xeatre ",(0,i.jsx)(n.strong,{children:"pr\xe9cis"})," et sans ambigu\xeft\xe9, et il ne doit ",(0,i.jsx)(n.strong,{children:"pas y avoir de synonymes"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"La raison est que si dans les conversations courantes on arrive \xe0 se comprendre m\xeame avec des ambigu\xeft\xe9s en fonction du contexte, dans le cadre du logiciel \xe7a marche moins bien."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le but de l'ubiquitous language est d'\xeatre un mod\xe8le du business domain, qui va repr\xe9senter le mod\xe8le mental des domain experts.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Un mod\xe8le n'a pas \xe0 repr\xe9senter toute la r\xe9alit\xe9 mais seulement une partie de mani\xe8re \xe0 \xeatre utile. Et donc ici aussi il ne s'agit pas de repr\xe9senter tout le business domain, ni de faire de tout le monde un domain expert."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["C\xf4t\xe9 outils :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Il faut un ",(0,i.jsx)(n.strong,{children:"glossaire sous forme de wiki"}),", que ",(0,i.jsx)(n.strong,{children:"tous"})," font \xe9voluer au fur et \xe0 mesure. On y met les termes de l'ubiquitous language."]}),"\n",(0,i.jsxs)(n.li,{children:["Pour la logique il faut d'autres outils comme des ",(0,i.jsx)(n.strong,{children:"description de cas d'usage"}),", ou des tests Gherkin.\nExemple Gherkin :","\n",(0,i.jsx)(n.pre,{"data-language":"text","data-theme":"default",children:(0,i.jsxs)(n.code,{"data-language":"text","data-theme":"default",children:[(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"Scenario: Notifier l'agent d'un nouveau cas"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:'    Given: Jules qui cr\xe9e un nouveau cas "Nouveau cas"'})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    When: Le ticket est assign\xe9 \xe0 M. Wolf"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    Then: L'agent re\xe7oit une notification"})})]})}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Ceci dit, le plus important est l'usage quotidien de l'ubiquitous language par les acteurs. Les outils ne sont qu'un plus."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour que la compr\xe9hension du business domain soit bonne, il faut une ",(0,i.jsx)(n.strong,{children:"communication r\xe9guli\xe8re"})," entre les domain experts et ceux qui sont en charge de r\xe9aliser le logiciel.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cette communication se fait bien s\xfbr dans l'ubiquitous language."}),"\n",(0,i.jsx)(n.li,{children:"\xc7a implique de poser beaucoup de questions aux domain experts."}),"\n",(0,i.jsxs)(n.li,{children:["A force, on va se rendre compte qu'on pourra aider les domain experts \xe0 mieux comprendre leur champ d'expertise sur certains points, par exemple en pensant \xe0 des edge cases et pas seulement aux “happy paths”.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On peut alors aller vers une ",(0,i.jsx)(n.strong,{children:"co-construction de la compr\xe9hension du domaine"})," (m\xeame si les experts en sauront toujours plus)."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"A propos de la langue de l'ubiquitous language, le conseil de Vlad est d'utiliser l'anglais au moins pour les noms d'entit\xe9s du business domain."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3---managing-domain-complexity",children:"3 - Managing Domain Complexity"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On se rend parfois compte qu'un m\xeame mot est utilis\xe9 par plusieurs domain experts avec une signification diff\xe9rente.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Exemple : le mot ",(0,i.jsx)(n.em,{children:"lead"})," peut d\xe9signer un simple prospect int\xe9ress\xe9 dans le d\xe9partement marketing, alors que \xe7a peut d\xe9signer une entit\xe9 plus complexe avec des histoires de process de vente dans le d\xe9partement sales."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["En g\xe9n\xe9ral on a naturellement tendance \xe0 agrandir notre mod\xe8le pour que chaque version du mot puisse \xeatre repr\xe9sent\xe9e, mais \xe7a finit par donner un mod\xe8le tr\xe8s complexe et difficile \xe0 maintenir.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["La solution DDD est de cr\xe9er deux ",(0,i.jsx)(n.strong,{children:"bounded contexts"})," qui auront chacun leur ubiquitous language."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Un bounded context doit avoir des ",(0,i.jsx)(n.strong,{children:"limites"})," (boundaries).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Une mani\xe8re de les trouver est de rep\xe9rer les incoh\xe9rences de terminologies utilis\xe9es par les domain experts : un bounded context ne pourra pas \xeatre plus grand que ce que ces incoh\xe9rences permettent."}),"\n",(0,i.jsxs)(n.li,{children:["Mais on peut diviser ces ensembles en bounded contexts plus petits. Il s'agit l\xe0 d'une ",(0,i.jsx)(n.strong,{children:"d\xe9cision strat\xe9gique"}),", qui d\xe9pend du contexte.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Avoir des bounded context trop grands impliquera une plus grande complexit\xe9 du mod\xe8le, alors que s'ils sont trop petits on aura un plus grand effort d'int\xe9gration \xe0 faire."}),"\n",(0,i.jsxs)(n.li,{children:["Les raisons qui peuvent pousser \xe0 d\xe9couper en bounded contexts plus petits peuvent \xeatre :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"d'ordre organisationnels : par exemple une nouvelle \xe9quipe qui va prendre en charge un morceau du logiciel qui va se d\xe9velopper sur un rythme diff\xe9rent du reste."}),"\n",(0,i.jsx)(n.li,{children:"d'ordre non fonctionnels : par exemple le fait de devoir scaler certaines parties du logiciel ind\xe9pendamment."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"De mani\xe8re g\xe9n\xe9rale, on va essayer de trouver des fonctionnalit\xe9s coh\xe9rentes qui op\xe8rent sur un m\xeame jeu de donn\xe9es, et les laisser dans un m\xeame bounded context."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"La diff\xe9rence entre subdomains et bounded contexts c'est que les subdomains sont l\xe0 de fait et ressortent avec l'analyse. Ils sont de la responsabilit\xe9 du business. Alors que les bounded contexts sont le r\xe9sultat d'un choix strat\xe9gique, et sont de la responsabilit\xe9 des ing\xe9nieurs logiciel."}),"\n",(0,i.jsxs)(n.li,{children:["Chaque bounded context a une s\xe9paration physique : il devra \xeatre impl\xe9ment\xe9 avec sa codebase, en tant que ",(0,i.jsx)(n.strong,{children:"projet autonome"}),", et \xe9ventuellement service autonome.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Dans le cas o\xf9 il s'agit d'un service autonome, on peut aussi choisir le langage, la stack, ind\xe9pendants des autres."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Un bounded context ne doit \xeatre g\xe9r\xe9 que par ",(0,i.jsx)(n.strong,{children:"une seule \xe9quipe de dev"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Une \xe9quipe peut par contre en avoir plusieurs en charge."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Si on se tourne vers la vie de tous les jours, on peut remarquer plein d'exemples o\xf9 des mots ont des significations diff\xe9rentes selon les contextes, et o\xf9 un mod\xe8le diff\xe9rent serait utile pour chaque :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Un carton rectangulaire qu'on met au sol permet de repr\xe9senter un r\xe9frig\xe9rateur pour savoir s'il va bien s'ins\xe9rer. Ce mod\xe8le est partiel mais il est utile pour ce qu'on veut faire, et c'est tout ce qui compte."}),"\n",(0,i.jsx)(n.li,{children:"Et si on a besoin de v\xe9rifier aussi la hauteur, on peut utiliser un autre mod\xe8le du r\xe9frig\xe9rateur qui suffit : un simple m\xe8tre. => On a l\xe0 une vision de l'approche DDD des mod\xe8les."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"4---integrating-bounded-contexts",children:"4 - Integrating Bounded Contexts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Chaque bounded context permet de repr\xe9senter un mod\xe8le au sens DDD, c'est-\xe0-dire une abstraction utile pour r\xe9soudre un probl\xe8me particulier."}),"\n",(0,i.jsxs)(n.li,{children:["Les bounded contexts doivent quand m\xeame avoir des points de contact pour que le logiciel forme un tout, ces points sont appel\xe9s ",(0,i.jsx)(n.strong,{children:"contracts"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On parle ici de points de contact au niveau du mod\xe8le (terminologie, concepts), mais le mod\xe8le se traduit \xe0 chaque fois en impl\xe9mentation aussi."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["La nature de ces contracts d\xe9pend de la nature de la relation entre les \xe9quipes qui g\xe8rent les bounded contexts, il y en a de 3 types :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cooperation"})," : il s'agit soit de la m\xeame \xe9quipe, soit d'\xe9quipes qui ont une bonne communication et collaboration (par ex le succ\xe8s de l'une d\xe9pend du succ\xe8s de l'autre).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Partnership"})," : aucune \xe9quipe ne dicte sa loi \xe0 l'autre. Elles collaborent pour faire des changements d\xe8s qu'il y en a besoin d'un c\xf4t\xe9 ou de l'autre.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il faut une int\xe9gration continue pour que les probl\xe8mes soient vite r\xe9solus."}),"\n",(0,i.jsx)(n.li,{children:"Il faut une communication vraiment au top entre \xe9quipes, et pas d'histoires de rivalit\xe9s."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Shared Kernel"})," : il s'agit d'un cas \xe0 part o\xf9 les boundaries des bounded contexts sont viol\xe9s : deux bounded contexts partagent une partie de leur mod\xe8le.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple, \xe7a peut \xeatre la partie d'authentification maison qu'ils auront en commun."}),"\n",(0,i.jsx)(n.li,{children:"La partie partag\xe9e peut \xeatre chang\xe9e par chaque bounded context, et affectera l'autre imm\xe9diatement. Il faut donc que des tests d'int\xe9gration soient d\xe9clench\xe9s \xe0 chaque changement."}),"\n",(0,i.jsx)(n.li,{children:"Bien r\xe9fl\xe9chir avant de l'utiliser : on l'utilise quand le co\xfbt pour appliquer les changements du mod\xe8le sous forme d'impl\xe9mentation d\xe9passe le co\xfbt de coordination entre \xe9quipes. C'est donc pertinent pour des mod\xe8les qui changent beaucoup."}),"\n",(0,i.jsxs)(n.li,{children:["Cas d'usage courants :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Quand deux \xe9quipes n'ont pas une assez bonne communication, et que le mod\xe8le partnership donnerait lieu \xe0 des probl\xe8mes d'int\xe9gration."}),"\n",(0,i.jsx)(n.li,{children:"Quand on a un syst\xe8me legacy qu'on essaye de d\xe9couper en bounded contexts, la partie pas encore d\xe9coup\xe9e peut \xeatre temporairement partag\xe9e par les autres bounded contexts."}),"\n",(0,i.jsx)(n.li,{children:"Quand une m\xeame \xe9quipe a deux bounded contexts en charge, il est possible qu'avec le temps les fronti\xe8res de ces deux bounded contexts s'estompent. Pour \xe9viter \xe7a on peut introduire une partie partag\xe9e qui va bien d\xe9finir les fronti\xe8res des deux autres."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Customer-Supplier"})," : contrairement au mod\xe8le de type cooperation, la r\xe9ussite de chaque \xe9quipe en charge de chaque bounded context n'est pas li\xe9e. On a donc un rapport de force qui va pencher vers l'une ou l'autre partie (le customer qui consomme ou le supplier qui fournit).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Conformist"})," : la provider n'a pas vraiment de motivation \xe0 satisfaire le customer. Soit parce que c'est un provider externe, soit il est interne et c'est la politique de l'entreprise qui fait \xe7a. Le customer va donc se conformer au mod\xe8le et aux changements de mod\xe8le du provider.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le supplier le fait soit parce que c'est un standard bien \xe9tabli, soit simplement parce que \xe7a lui convient."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Anticorruption Layer"})," : le provider a toujours le pouvoir, mais cette fois le consumer ne va pas se conformer, il va vouloir se prot\xe9ger par une couche d'abstraction entre ce qui lui arrive et son propre mod\xe8le.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le consumer peut vouloir cette couche quand :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il contient un core subdomain, et que le mod\xe8le du provider pourrait \xeatre g\xeanant."}),"\n",(0,i.jsx)(n.li,{children:"Le mod\xe8le du provider est bord\xe9lique, et on veut s'en prot\xe9ger."}),"\n",(0,i.jsx)(n.li,{children:"Le mod\xe8le du provider change souvent, et on veut s'en prot\xe9ger."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Gr\xe2ce \xe0 cette couche filtrante, le mod\xe8le du consumer n'aura pas \xe0 \xeatre pollu\xe9 par des concepts dont il n'a pas besoin."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Open-Host Service"})," : cette fois c'est le consumer qui a l'avantage parce que le provider a une motivation \xe0 satisfaire le consumer. Le provider va donc mettre en place une couche d'abstraction de son c\xf4t\xe9 pour d\xe9coupler son mod\xe8le interne du mod\xe8le public qu'il expose.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"C'est comme l'anticorruption layer, mais c\xf4t\xe9 provider."}),"\n",(0,i.jsx)(n.li,{children:"Le provider peut \xe9ventuellement maintenir plusieurs OHS le temps que les customers migrent au nouveau mod\xe8le public."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Separate ways"})," : les deux bounded contexts n'interagissent pas du tout. Si elles ont des fonctionnalit\xe9s communes, elles les dupliquent de leur c\xf4t\xe9.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\xc7a peut \xeatre quand la communication entre \xe9quipes est impossible."}),"\n",(0,i.jsx)(n.li,{children:"Ou encore quand \xe7a co\xfbte plus cher de partager une fonctionnalit\xe9 que de la refaire chacun de son c\xf4t\xe9. Parce que la fonctionnalit\xe9 est trop simple, ou que les deux mod\xe8les sont trop diff\xe9rents."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"context map"})," est une repr\xe9sentation graphique de chaque bounded context, avec les relations que chacun entretient avec les autres.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\xc7a peut permettre de faire des choix strat\xe9giques haut niveau."}),"\n",(0,i.jsxs)(n.li,{children:["\xc7a peut faire appara\xeetre des probl\xe8mes organisationnels :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple si une \xe9quipe provider a tous ses consumers qui mettent en place un anticorruption layer. Ou encore si une \xe9quipe n'a que des relations separate ways avec les autres."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le context map doit \xeatre maintenu par l'ensemble des \xe9quipes.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On peut utiliser des outils comme ",(0,i.jsx)(n.a,{href:"https://contextmapper.org",children:"Context Mapper"}),", qui consiste \xe0 avoir un fichier source dans un d\xe9p\xf4t de code, et permet de visualiser le graphique r\xe9sultant avec une extension VSCode."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"part-ii--tactical-design",children:"Part II : Tactical Design"}),"\n",(0,i.jsx)(n.h3,{id:"5---implementing-simple-business-logic",children:"5 - Implementing Simple Business Logic"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ce chapitre pr\xe9sente deux patterns tactiques simples. Ce sont des patterns connus, d\xe9crits notamment dans ",(0,i.jsx)(n.em,{children:"Patterns of Enterprise Application Architecture"})," de Martin Fowler."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"1 - Transaction Script"})," : il s'agit pour le provider de fournir une interface publique avec des endpoints qui ont un ",(0,i.jsx)(n.strong,{children:"comportement transactionnel"})," : soit une requ\xeate r\xe9ussit enti\xe8rement, soit elle est enti\xe8rement annul\xe9e.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Martin Fowler \xe9crit \xe0 propos de ce pattern : Organizes business logic by procedures where each procedure handles a single request from the presentation."}),"\n",(0,i.jsxs)(n.li,{children:["Notre fonction peut acc\xe9der \xe0 la base de donn\xe9es pour faire des manipulations, soit \xe0 travers une mince couche d'abstraction, soit directement. (Donc ",(0,i.jsx)(n.strong,{children:"forte d\xe9pendance avec la BDD"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:["Dans le cas simple o\xf9 on a une BDD relationnelle, il s'agit simplement d'utiliser la fonctionnalit\xe9 native de transaction de sa BDD : on cr\xe9e la transaction au d\xe9but de la fonction, et on commit ou rollback \xe0 la fin.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"La chose se complique quand notre BDD ne supporte pas les transactions, qu'on doit mettre \xe0 jour des donn\xe9es dans plusieurs BDD, ou encore qu'on est dans un contexte distribu\xe9 o\xf9 les transactions ne sont pas effectives imm\xe9diatement (eventual consistency)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Potentiels probl\xe8mes qu'on rencontre souvent :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Oubli de transaction : parfois on oublie tout simplement d'utiliser le m\xe9canisme de transaction au d\xe9but de notre fonction. En ex\xe9cutant plusieurs \xe9critures en BDD on peut avoir la 1\xe8re qui r\xe9ussit et la 2\xe8me qui \xe9choue. On se retrouve alors potentiellement dans un syst\xe8me incoh\xe9rent."}),"\n",(0,i.jsxs)(n.li,{children:["Syst\xe8me distribu\xe9 : souvent dans les syst\xe8mes distribu\xe9s on met \xe0 jour une donn\xe9e, et on pr\xe9vient d'autres serveurs en leur envoyant un message. Il suffit que l'envoi de message ne marche pas pour que le syst\xe8me devienne incoh\xe9rent parce qu'une partie du travail ne sera pas faite.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il n'y a pas de solution simple \xe0 ce probl\xe8me, mais de nombreuses solutions qui font chacune du mieux qu'elles peuvent, en fonction du contexte."}),"\n",(0,i.jsxs)(n.li,{children:["(pas dit dans le livre, mais c'est l'objet de ",(0,i.jsx)(n.em,{children:"Designing Data-Intensive Applications"})," de Martin Kleppmann)"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Transaction Script est le pattern le plus simple, et convient pour les op\xe9rations simples de type ETL (extract, transform, load) o\xf9 la logique business est elle-m\xeame simple et change peu souvent.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Il convient bien :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Dans les supporting subdomains."}),"\n",(0,i.jsx)(n.li,{children:"Comme couche d'adapter pour int\xe9grer un generic subdomain."}),"\n",(0,i.jsx)(n.li,{children:"Dans un anticorruption layer vis-\xe0-vis d'un autre bounded context."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Par contre sa simplicit\xe9 fait que plus la logique business est complexe, plus il y a de la duplication de logique entre les diverses fonctions, et donc un risque d'incoh\xe9rence au fil du temps. Donc il ne conviendra pas aux core subdomains."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Tous les autres patterns plus avanc\xe9s, sont d'une mani\xe8re ou d'une autre bas\xe9s sur Transaction Script."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"2 - Active Record"})," : on garde les caract\xe9ristiques transactionnelles du Transaction Script, mais on va ajouter des objets (les fameux Active Records) qui vont \xeatre en charge de ",(0,i.jsx)(n.strong,{children:"transformer les donn\xe9es"})," depuis la BDD vers des structures en m\xe9moire qui conviennent mieux \xe0 ce qu'on veut faire dans nos fonctions.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Martin Fowler \xe9crit \xe0 propos de ce pattern : An object that wraps a row in a database table or view, encapsulates the database access, and the domain adds domain logic on that data."}),"\n",(0,i.jsxs)(n.li,{children:["La cons\xe9quence est que les fonctions appel\xe9es par les endpoints ne vont plus faire d'appel \xe0 la BDD, mais vont passer uniquement par les Active Records pour manipuler les donn\xe9es.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'Active Record va fournir des m\xe9thodes pour acc\xe9der aux donn\xe9es et les modifier, et va faire la traduction \xe0 chaque fois."}),"\n",(0,i.jsx)(n.li,{children:"On encapsule la complexit\xe9 de la transformation des donn\xe9es pour \xe9viter de dupliquer cette logique-l\xe0 un peu partout."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Active Record est utile pour les cas d'usage simples, mais qui impliquent des transformations de donn\xe9es potentiellement complexes.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il convient donc lui aussi seulement aux supporting subdomains, ou \xe0 des couches d'adapter pour int\xe9grer un generic subdomain ou un autre bounded context."}),"\n",(0,i.jsx)(n.li,{children:"Quand il est utilis\xe9 pour les logiques business complexes comme pour les core subdomains, on parle parfois d'un anemic domain model antipattern (et c'est d\xe9conseill\xe9)."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Il s'agit cependant de ",(0,i.jsx)(n.strong,{children:"rester pragmatique"})," : bien qu'il soit souhaitable de prot\xe9ger les donn\xe9es, il faut se demander \xe0 chaque fois quelles seraient les implications de la corruption de donn\xe9es dans tel ou tel projet.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple, si on ing\xe8re des millions d'entr\xe9es venant de devices IOT dans notre base, risquer d'en corrompre 0.001% peut ne pas forc\xe9ment \xeatre tr\xe8s grave."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"6---tackling-complex-business-logic",children:"6 - Tackling Complex Business Logic"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ce chapitre pr\xe9sente le pattern du DDD pour les logiques business compliqu\xe9es (\xe0 utiliser dans les core subdomains donc) : le ",(0,i.jsx)(n.strong,{children:"domain model pattern"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Ce pattern est aussi dans le bouquin de Fowler, mais il a \xe9t\xe9 d\xe9velopp\xe9 plus en d\xe9tail dans celui d'Eric Evans : ",(0,i.jsx)(n.em,{children:"Domain Driven Design: Tackling Complexity in the Heart of Software"}),", sorti un an apr\xe8s (2003)."]}),"\n",(0,i.jsxs)(n.li,{children:["Au niveau de l'impl\xe9mentation :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le code du domain model est l\xe0 pour repr\xe9senter le domaine qui est d\xe9j\xe0 complexe, donc il ",(0,i.jsx)(n.strong,{children:"ne doit pas introduire de complexit\xe9 suppl\xe9mentaire li\xe9e aux technos ou \xe0 l'infrastructure"}),". => on utilisera donc du code pur (par exemple du TypeScript pur), pas de framework, d'ORM ou autre chose d'ext\xe9rieur dans ce code."]}),"\n",(0,i.jsxs)(n.li,{children:["D\xe9barrass\xe9 de tout ce qui est li\xe9 aux technos, le code peut ",(0,i.jsx)(n.strong,{children:"utiliser l'ubiquitous language"})," et \xe9pouser le mod\xe8le mental des domain experts."]}),"\n",(0,i.jsx)(n.li,{children:"A noter que ce livre pr\xe9sente les choses d'un point de vue orient\xe9 objet, mais une approche fonctionnelle serait tout aussi valide, d'autres ressources dans la communaut\xe9 du DDD vont dans ce sens."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les blocs qui composent le domain model sont :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"1- Value objects"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ce sont des objets ",(0,i.jsx)(n.strong,{children:"immutables"})," identifi\xe9s par les valeurs de chacune de leurs propri\xe9t\xe9s. Si on veut le m\xeame objet avec une valeur diff\xe9rente pour une de ses propri\xe9t\xe9s, on cr\xe9e de fait un autre objet.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple, dans Python ou JavaScript, le string est un value object : on ne peut pas modifier une valeur string en elle-m\xeame, mais on peut cr\xe9er de nouveaux strings avec des valeurs diff\xe9rentes (et qui auront bien une r\xe9f\xe9rence en m\xe9moire diff\xe9rente)."}),"\n",(0,i.jsxs)(n.li,{children:["Les value objects n'ont ",(0,i.jsx)(n.strong,{children:"pas d'attribut ID"}),", puisque leur identification se fait par la composition des valeurs de leurs propri\xe9t\xe9s qui les rend uniques.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"En revanche, il faut impl\xe9menter un op\xe9rateur d'\xe9galit\xe9 pour pouvoir comparer deux value objects entre eux."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le value object sera ",(0,i.jsx)(n.strong,{children:"utilis\xe9 comme type pour les donn\xe9es"})," \xe0 la place des types primitifs (comme string, number etc).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L'utilisation syst\xe9matique de types primitifs est connue comme “",(0,i.jsx)(n.a,{href:"https://wiki.c2.com/?PrimitiveObsession",children:"the primitive obsession"}),"”."]}),"\n",(0,i.jsxs)(n.li,{children:["Par exemple, plut\xf4t que d'avoir ",(0,i.jsx)(n.code,{children:"email: string"}),", on peut avoir ",(0,i.jsx)(n.code,{children:"email: Email"}),", avec le value object ",(0,i.jsx)(n.code,{children:"Email"})," qui va ",(0,i.jsx)(n.strong,{children:"faire la validation"})," et refuser toute valeur qui ne correspond pas.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\xc7a \xe9vite de dupliquer la logique de validation partout, mais aussi d'oublier de faire cette validation \xe0 certains endroits."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["En plus de la simple validation de donn\xe9es, le value object peut ",(0,i.jsx)(n.strong,{children:"encapsuler en un endroit unique du code business"})," li\xe9 au concept pr\xe9cis qu'il d\xe9crit. (Et c'est l\xe0 qu'il “brille” vraiment)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Concept qui est normalement dans le lexique de l'ubiquitous language de notre bounded context."}),"\n",(0,i.jsx)(n.li,{children:"Par exemple, un value object repr\xe9sentant une couleur peut avoir une m\xe9thode pour mixer la couleur avec une autre, et en obtenir une 3\xe8me, selon des r\xe8gles business bien particuli\xe8res."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Et \xe7a ",(0,i.jsx)(n.strong,{children:"augmente la clart\xe9 du code"})," en rendant plus explicite l'intention."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["On ",(0,i.jsx)(n.strong,{children:"utilise les value objects d\xe8s que possible"}),". Typiquement comme type des attributs des entities."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"2.1- Entities"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ce sont des objets dont les propri\xe9t\xe9s ",(0,i.jsx)(n.strong,{children:"peuvent changer"})," (de type value object ou de type primitif), identifi\xe9s par leur ",(0,i.jsx)(n.strong,{children:"ID qui lui ne change pas"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Exemple d'entity : une personne repr\xe9sent\xe9e par son nom, son email etc."}),"\n",(0,i.jsx)(n.li,{children:"Les entities sont importants, mais ils n'ont vraiment d'existence que dans le cadre d'un aggregate."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"2.2 - Aggregates"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Un aggregate est une entity qui en contient d'autres.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On choisit un ",(0,i.jsx)(n.strong,{children:"aggregate root"})," qui est l'entity principale, et contient les autres."]}),"\n",(0,i.jsxs)(n.li,{children:["L'id\xe9e c'est de regrouper des ",(0,i.jsx)(n.strong,{children:"entities qui sont amen\xe9es \xe0 changer ensemble"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["L'aggregate est responsable de ",(0,i.jsx)(n.strong,{children:"garantir la consistance des donn\xe9es"})," en son sein.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les objets ext\xe9rieurs pourront donc seulement lire ses propri\xe9t\xe9s, mais pour les changer il faudra toujours passer par l'interface publique de l'aggregate.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les fonctions de cette interface publique s'appellent les ",(0,i.jsx)(n.strong,{children:"commands"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Il y a 2 mani\xe8re d'impl\xe9menter ces commands :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Soit comme m\xe9thodes publiques de l'aggregate root."}),"\n",(0,i.jsx)(n.li,{children:"Soit la logique se trouve dans des objets de commande sp\xe9cifiques \xe0 l'aggregate et contenant la logique \xe0 appliquer. On instancie un tel objet command avec les infos qu'on veut changer, et on le passe \xe0 une m\xe9thode “execute” de l'aggregate root charg\xe9e d'appliquer la commande."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Le fait que l'aggregate soit le seul responsable de modifier ses donn\xe9es fait que la logique business le concernant ne peut qu'\xeatre en son sein, et pas diss\xe9min\xe9e ailleurs."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["La couche applicative (aussi appel\xe9e souche “service” : celle qui forward les actions de l'API publique au domain model) n'a donc plus qu'\xe0 :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Charger l'\xe9tat actuel de l'aggregate."}),"\n",(0,i.jsx)(n.li,{children:"Ex\xe9cuter la commande requise."}),"\n",(0,i.jsx)(n.li,{children:"Enregistrer le nouvel \xe9tat en BDD."}),"\n",(0,i.jsx)(n.li,{children:"Renvoyer le r\xe9sultat \xe0 l'appelant."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Attention \xe0 la concurrence. Pour \xe9viter les probl\xe8mes, la couche applicative devra s'assurer que l'\xe9tat lu au d\xe9but n'a pas chang\xe9 entre-temps avant de valider le nouvel \xe9tat de l'aggregate en BDD.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pour ce faire, le moyen le plus classique est que l'aggregate ait une propri\xe9t\xe9 “version” incr\xe9ment\xe9e \xe0 chaque modification."}),"\n",(0,i.jsx)(n.li,{children:"Si la version a chang\xe9 entre-temps par une autre action concurrente, on pourra choisir d'annuler notre action, ou d'appliquer un m\xe9canisme de r\xe9solution appropri\xe9 \xe0 notre logique business (si on en est capable)."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["L'aggregate doit avoir un ",(0,i.jsx)(n.strong,{children:"comportement transactionnel"})," : toute commande devra soit \xeatre int\xe9gralement ex\xe9cut\xe9e, soit annul\xe9e.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["En revanche, ",(0,i.jsx)(n.strong,{children:"aucune op\xe9ration ne pourra modifier plusieurs aggregates de mani\xe8re transactionnelle"})," : c'est une transaction par action sur un seul aggregate."]}),"\n",(0,i.jsx)(n.li,{children:"Si on se retrouve \xe0 avoir besoin de modifier plusieurs aggregates en une transaction, c'est que les limites de nos aggregates ont \xe9t\xe9 mal pens\xe9es : il faut les revoir."}),"\n",(0,i.jsx)(n.li,{children:"Exemple d'aggregate : un ticket de support, qui peut contenir un ou plusieurs messages, chacun pouvant contenir une ou plusieurs pi\xe8ces jointes."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["La r\xe8gle de base pour d\xe9limiter son aggregate c'est de le choisir ",(0,i.jsx)(n.strong,{children:"le plus petit possible"}),", et d'y inclure toutes les donn\xe9es qui doivent rester ",(0,i.jsx)(n.strong,{children:"fortement consistantes"})," (strong consistency) avec l'aggregate.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Donc si en prenant en compte la logique business, certaines donn\xe9es li\xe9es \xe0 l'aggregate peuvent \xeatre un peu d\xe9synchronis\xe9es (et se mettre \xe0 jour un peu plus tard) sans causer de probl\xe8mes ( => eventual consistency), alors elles doivent \xeatre hors de l'aggregate."}),"\n",(0,i.jsxs)(n.li,{children:["Dans ce cas la bonne pratique est de placer dans l'aggregate une propri\xe9t\xe9 repr\xe9sentant leur ID, l\xe0 o\xf9 pour une entity faisant partie de l'aggregate on placera en propri\xe9t\xe9 une instance de celle-ci :","\n",(0,i.jsx)(n.pre,{"data-language":"typescript","data-theme":"default",children:(0,i.jsxs)(n.code,{"data-language":"typescript","data-theme":"default",children:[(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"// le customer ne fait pas partie de l'aggregate"})}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"private customer"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" UserID;"})]}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"// les messages en font partie"})}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"private messages"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" Message[];"})]})]})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Exemple d'aggregate qu'on d\xe9limite : imaginons qu'on a notre ticket de support, avec une r\xe8gle business qui implique de le r\xe9assigner \xe0 un autre agent s'il n'y a pas eu de nouveau messages alors qu'il reste moins de 50% du temps restant pour le traiter.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Si les messages mettent du temps \xe0 \xeatre \xe0 jour par rapport au ticket (c'est-\xe0-dire qu'il y a une eventual consistency entre les messages et leur ticket), on aura du mal \xe0 respecter la r\xe8gle business parce qu'on ne saura pas si il y a eu un message r\xe9cemment ou pas. => Donc les entities “messages” vont dans le m\xeame aggregate."}),"\n",(0,i.jsx)(n.li,{children:"En revanche, si les donn\xe9es des agents ou des produits sont l\xe9g\xe8rement en retard, \xe7a ne nous emp\xeachera pas de respecter notre r\xe8gle business. => Donc ceux-l\xe0 ne vont pas dans le m\xeame aggregate."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"2.3 - Domain Events"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les domain events sont des \xe9v\xe9nements importants que chaque aggregate peut publier, et auquel d'autres aggregates peuvent souscrire."}),"\n",(0,i.jsxs)(n.li,{children:["Leur nom est important, et il doit \xeatre formul\xe9 au pass\xe9.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Par ex : ",(0,i.jsx)(n.code,{children:"Ticket assigned"})," ou ",(0,i.jsx)(n.code,{children:"Ticket escaleted"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Leur contenu doit d\xe9crire pr\xe9cis\xe9ment ce qui s'est pass\xe9 :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Exemple :","\n",(0,i.jsx)(n.pre,{"data-language":"json","data-theme":"default",children:(0,i.jsxs)(n.code,{"data-language":"json","data-theme":"default",children:[(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"{"})}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"ticketId"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"7bfaaf0c-128a-46f8-99b3-63f0851eb"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"eventId"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"146"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"eventType"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"ticket-escalation"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"escalationReason"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"missed-sla"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"escalationTime"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"65463113312"})]}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"3 - Domain services"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Quand on a de la logique business qui ",(0,i.jsx)(n.strong,{children:"n'appartient \xe0 aucun aggregate"})," ou qui semble \xeatre ",(0,i.jsx)(n.strong,{children:"pertinente pour plusieurs aggregates"}),", on peut la placer dans un domain service."]}),"\n",(0,i.jsx)(n.li,{children:"Le mot service ici ne fait pas r\xe9f\xe9rence \xe0 autre chose qu'on appellerait habituellement des services, c'est simplement des objets sans \xe9tat qui contiennent de la logique business."}),"\n",(0,i.jsxs)(n.li,{children:["Dans les domain services on peut toucher \xe0 plusieurs aggregates, mais ",(0,i.jsx)(n.strong,{children:"seulement pour de la lecture"})," : la contrainte de ne modifier qu'un aggregate par transaction tient toujours."]}),"\n",(0,i.jsx)(n.li,{children:"Exemple de domain service : le temps pour r\xe9pondre aux tickets de support doit \xeatre calcul\xe9 en fonction de plusieurs param\xe8tres, d\xe9pendant de l'agent en charge, d'\xe9ventuelles escalations, des shifts horaires etc. On peut donc avoir une fonction qui va lire dans plusieurs aggregates des informations, calcule le temps et le renvoie."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Au fond, l'id\xe9e des value objects et des aggregates c'est de ",(0,i.jsx)(n.strong,{children:"r\xe9duire le degr\xe9 de libert\xe9 du syst\xe8me"})," en encapsulant des morceaux de logique dans des endroits uniques, pour en r\xe9duire la complexit\xe9."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"7---modeling-the-dimension-of-time",children:"7 - Modeling the Dimension of Time"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["On peut appliquer l'",(0,i.jsx)(n.strong,{children:"event-sourcing"})," au domain model pattern pour cr\xe9er un ",(0,i.jsx)(n.strong,{children:"event-sourced domain model pattern"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Avec l'event sourcing on introduit la ",(0,i.jsx)(n.strong,{children:"dimension du temps"})," dans notre mod\xe8le."]}),"\n",(0,i.jsxs)(n.li,{children:["Il s'agit de reprendre les m\xeames blocs que le domain model pattern, mais avec une diff\xe9rence au niveau de la mani\xe8re de stocker les informations en base de donn\xe9es (et c'est \xe7a qui caract\xe9rise l'event sourcing) : on va ",(0,i.jsx)(n.strong,{children:"stocker les domain events"})," des aggregates comme ",(0,i.jsx)(n.strong,{children:"source de v\xe9rit\xe9"}),", au lieu de l'\xe9tat actuel de l'aggregate.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On appelle cette BDD d'\xe9v\xe9nements l'event store."}),"\n",(0,i.jsxs)(n.li,{children:["La BDD doit au minimum permettre de :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"r\xe9cup\xe9rer tous les \xe9v\xe9nements d'un m\xeame aggregate"}),"\n",(0,i.jsx)(n.li,{children:"ajouter des \xe9v\xe9nements \xe0 un aggregate"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Il s'agit de ",(0,i.jsx)(n.strong,{children:"rejouer l'ensemble des domain events"})," d'un aggregate \xe0 chaque fois qu'on le charge en m\xe9moire pour obtenir son \xe9tat."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Une fois qu'on a son \xe9tat, on peut ex\xe9cuter la logique business comme avant, en jouant la bonne commande sur l'aggregate."}),"\n",(0,i.jsxs)(n.li,{children:["Notre aggregate g\xe9n\xe8rera alors des domain events, mais ",(0,i.jsx)(n.strong,{children:"ne modifiera jamais son state autrement que par ces events"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"La persistance se fera en persistant les domain event dans l'event store."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Avec le domain model pattern classique on avait aussi des domain events qui informaient les composants ext\xe9rieurs des changements importants, mais l\xe0 la diff\xe9rence c'est que ces events doivent \xeatre \xe9mis pour chaque changement d'\xe9tat de l'aggregate."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["C\xf4t\xe9 code, on a notre objet aggregate root avec ses propri\xe9t\xe9s de type value object ou entity, et cet objet a une m\xe9thode ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"apply(event: EventType)"})})," qui est surcharg\xe9e plusieurs fois pour chaque type d'event qui peut survenir."]}),"\n",(0,i.jsx)(n.pre,{"data-language":"typescript","data-theme":"default",children:(0,i.jsxs)(n.code,{"data-language":"typescript","data-theme":"default",children:[(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"public "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"class"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"Person"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" {"})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"public"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" id"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"PersonId"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:";"})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"public"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" name"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"Name"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:";"})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"public"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" email"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"Email"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:";"})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"public"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" version"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"number"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:";"})]}),"\n",(0,i.jsx)(n.span,{className:"line",children:" "}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"function"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"apply"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"(event"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"PersonCreated"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:") {"})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"        "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"this"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:".id "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"event"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:".id;"})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"        "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"this"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:".name "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"event"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:".name;"})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"        "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"this"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:".email "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"event"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:".email;"})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"        "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"this"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:".version "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"0"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:";"})]}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    }"})}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"function"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"apply"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"(event"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"EmailUpdated"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:") {"})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"        "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"this"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:".email "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"="}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"event"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:".email;"})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"        "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"this"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:".version "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"+="}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-constant)"},children:"1"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:";"})]}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    }"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le constructeur de la classe prend la liste d'events et la rejoue dans l'ordre \xe0 chaque instanciation."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"On peut rejouer la projection des \xe9v\xe9nements avec des variantes :"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["En rejouant les X premiers \xe9v\xe9nements on ",(0,i.jsx)(n.strong,{children:"remonte \xe0 n'importe quel \xe9tat"})," ",(0,i.jsx)(n.strong,{children:"pr\xe9cis dans le temps"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["En nous int\xe9ressant seulement \xe0 certains \xe9v\xe9nements et en impl\xe9mentant des actions particuli\xe8res dans les fonctions ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"apply"})})," de ceux-ci, on peut rechercher des donn\xe9es particuli\xe8res et ",(0,i.jsx)(n.strong,{children:"faire de l'analyse de donn\xe9es"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Par exemple, si on cherche toutes les personnes qui ont pu avoir une modification de leur email plus de 3 fois en une journ\xe9e, il suffit de cr\xe9er une classe qui surcharge ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"apply"})})," pour l'event ",(0,i.jsx)(n.code,{children:"EmailUpdated"}),", et de rejouer les \xe9v\xe9nements en comparant les dates de changement dans notre m\xe9thode ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"apply"})}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Avantages et inconv\xe9nients :"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Avantages de la version event-sourced par rapport \xe0 la version classique :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On peut ",(0,i.jsx)(n.strong,{children:"remonter dans le temps"}),". Par exemple pour analyser, ou encore pour d\xe9bugger en allant \xe0 l'\xe9tat exact qui a caus\xe9 le bug."]}),"\n",(0,i.jsxs)(n.li,{children:["On a du ",(0,i.jsx)(n.strong,{children:"deep insight"})," sur ce qui se passe. Particuli\xe8rement utile pour les core subdomains qui sont complexes."]}),"\n",(0,i.jsxs)(n.li,{children:["On a une forte ",(0,i.jsx)(n.strong,{children:"tra\xe7abilit\xe9"})," de tout ce qui se passe, tr\xe8s utile dans un contexte d'audit, par exemple si la loi l'oblige comme avec les transactions mon\xe9taires."]}),"\n",(0,i.jsxs)(n.li,{children:["Quand deux transactions \xe9crivent la donn\xe9e de mani\xe8re concurrente, on va habituellement annuler une des deux transactions. Ici on a des infos plus fines sur les ",(0,i.jsx)(n.strong,{children:"deux changements concurrents"}),", et donc on peut plus facilement prendre des d\xe9cisions business sur la mani\xe8re de les ",(0,i.jsx)(n.strong,{children:"concilier au lieu de les annuler."})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["D\xe9savantages :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Courbe d'apprentissage"})," pour l'\xe9quipe : il faut du temps et la volont\xe9 pour l'\xe9quipe d'apprendre ce paradigme."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"L'\xe9volution du mod\xe8le est plus compliqu\xe9e"})," : on ne change pas un sch\xe9ma d'events comme on change la structure d'une BDD relationnelle.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A ce propos il y a le livre ",(0,i.jsx)(n.em,{children:"Versioning in an Event Sourced System"})," de Greg Young."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["La ",(0,i.jsx)(n.strong,{children:"complexit\xe9 globale de l'architecture"})," est plus grande."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"RDV au chapitre 10 pour avoir des r\xe8gles basiques sur le type de design \xe0 choisir."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["A propos de la ",(0,i.jsx)(n.strong,{children:"performance"})," :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Oui rejouer les events \xe0 chaque fois qu'on instancie un objet affecte la performance, mais dans les faits :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Il faut bien noter que les events sont propres \xe0 chaque aggregate, et que ceux-ci ont un cycle de vie.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par ex un ticket de support passera par plusieurs \xe9tapes, et finira par \xeatre ferm\xe9, donc n'aura plus de changements d'\xe9tat."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["En de\xe7\xe0 de 10 000 events par aggregate, l'impact de performance ne se ressent pas.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"La moyenne du cycle de vie des objets dans la plupart des syst\xe8mes est de l'ordre de 100 events."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Dans les rares cas o\xf9 la performance est un probl\xe8me, il y a la technique du ",(0,i.jsx)(n.strong,{children:"snapshot"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il s'agit de g\xe9n\xe9rer de mani\xe8re asynchrone une projection sous forme de BDD servant de cache, et ayant les donn\xe9es des \xe9tats de chaque aggregates, mais aussi le num\xe9ro du dernier event pris en compte."}),"\n",(0,i.jsxs)(n.li,{children:["Quand l'application a besoin de charger un aggregate, elle le fait depuis ce cache, puis lit le num\xe9ro du dernier event pris en compte, et va chercher les events manquants dans l'event store pour les appliquer elle-m\xeame et obtenir l'\xe9tat \xe0 jour de l'aggregate.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ainsi donc, m\xeame si l'aggregate a 100 000 events, l'application n'a \xe0 chaque fois qu'\xe0 appliquer les quelques events \xe0 rattraper qui n'avaient pas encore \xe9t\xe9 appliqu\xe9s sur la BDD d\xe9normalis\xe9e servant de cache."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Attention cependant, avant d'utiliser une technique avanc\xe9e comme celle du snapshot il faut :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"S'assurer qu'on a un vrai probl\xe8me de performance (+ de 10 000 events par aggregate)."}),"\n",(0,i.jsx)(n.li,{children:"V\xe9rifier les limites de notre aggregate et voir si il n'est pas trop gros et qu'on ne pourrait pas plut\xf4t le scinder."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["L'event sourcing ",(0,i.jsx)(n.strong,{children:"scale tr\xe8s bien"})," : vu qu'on a une s\xe9paration claire des donn\xe9es d'event par aggregate, on peut tr\xe8s bien sharder par identifiant d'aggregate."]}),"\n",(0,i.jsx)(n.li,{children:"Le CQRS (d\xe9crit au chapitre suivant) peut r\xe9pondre \xe0 la probl\xe9matique de performance de par sa nature."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Comment ",(0,i.jsx)(n.strong,{children:"supprimer des donn\xe9es"})," de l'event store (par ex pour des consid\xe9rations l\xe9gales) ?"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'id\xe9e de l'event sourcing c'est qu'on ne supprime pas les donn\xe9es d'event, c'est la condition pour toujours pouvoir rejouer, mais aussi la condition pour qu'elles ne soient jamais corrompues."}),"\n",(0,i.jsxs)(n.li,{children:["On peut utiliser la technique du ",(0,i.jsx)(n.strong,{children:"forgettable payload"})," : on stocke dans notre event une version chiffr\xe9e des donn\xe9e sensibles, et on stocke une paire ",(0,i.jsx)(n.em,{children:"cl\xe9 de chiffrement / ID de l'aggregate"})," dans un stockage key-value \xe0 part. Quand on a envie d'effacer une des donn\xe9es sensibles, il suffit de supprimer sa cl\xe9."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Ne pourrait-on pas continuer \xe0 utiliser une BDD relationnelle comme BDD principale, et \xe9crire en plus les events soit dans un log, soit en utilisant un database trigger pour \xe9crire dans une table en m\xeame temps ?"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"C'est une mauvaise id\xe9e parce que le log qui ne serait pas la source de v\xe9rit\xe9 finirait par se d\xe9grader au fil du temps, parce qu'on y ferait moins attention."}),"\n",(0,i.jsx)(n.li,{children:"Et en plus il est difficile de se donner du mal \xe0 bien repr\xe9senter le sens des events dans ceux-ci si ils ne sont pas la source de v\xe9rit\xe9 et que cette info n'est pas destin\xe9e \xe0 la BDD principale."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"8---architectural-patterns",children:"8 - Architectural Patterns"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Jusqu'ici on s'est int\xe9ress\xe9 aux patterns tactiques pour la logique business, ici on d\xe9zoome un peu et on s'int\xe9resse \xe0 la relation entre les diverses parties du code du syst\xe8me (la logique business est une de ces parties)."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Si on ne maintient pas une limite claire entre le code business et le reste, on risque d'avoir une logique diffuse un peu partout."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\xc7a rend le code difficile \xe0 changer parce qu'il faut passer partout."}),"\n",(0,i.jsx)(n.li,{children:"Ca fait qu'on peut oublier certains endroits et avoir des inconsistances."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"On voit dans ce chapitre 3 architectural patterns :"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Layered architecture"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"C'est un des patterns les plus courants, il s'agit d'avoir 3 couches."}),"\n",(0,i.jsxs)(n.li,{children:["1- la ",(0,i.jsx)(n.strong,{children:"couche de pr\xe9sentation"})," repr\xe9sente l'interface utilisateur, mais de nos jours c'est plus large : Interface graphique, interface en ligne de commande, API programmatique ou r\xe9seau.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On l'appelle parfois aussi la ",(0,i.jsx)(n.em,{children:"user interface layer"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["2- la ",(0,i.jsx)(n.strong,{children:"couche business"})," : c'est l\xe0 o\xf9 on a les patterns d\xe9crits avant : active record, domain model pattern etc.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On l'appelle parfois aussi le ",(0,i.jsx)(n.em,{children:"domain layer"})," ou le ",(0,i.jsx)(n.em,{children:"model layer"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["3- la ",(0,i.jsx)(n.strong,{children:"couche data access"})," o\xf9 on stocke et manipule des donn\xe9es dans des bases de donn\xe9es, dans du cloud etc.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On l 'appelle parfois aussi l'",(0,i.jsx)(n.em,{children:"infrastructure layer"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["C\xf4t\xe9 d\xe9pendance, la couche de pr\xe9sentation n'a acc\xe8s qu'\xe0 la couche business, et la couche business qu'\xe0 la couche data access : ",(0,i.jsx)(n.code,{children:"presentation -> business -> data access"})]}),"\n",(0,i.jsxs)(n.li,{children:["Ce pattern est souvent \xe9tendu avec une ",(0,i.jsx)(n.strong,{children:"couche additionnelle appel\xe9e service"})," : elle va venir se placer entre la pr\xe9sentation et le business. ",(0,i.jsx)(n.code,{children:"presentation -> service -> business -> data access"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le service layer permet de faire la logique d'orchestration autour de la couche business, et permet de d\xe9coupler davantage les couches pr\xe9sentation et business."}),"\n",(0,i.jsx)(n.li,{children:"Par exemple, on peut avoir un controller (du pattern MVC) qui r\xe9ceptionne un appel API, et qui va simplement faire appel au bon service, puis renvoyer la r\xe9ponse de celui-ci. Le service quant \xe0 lui va commencer une transaction, faire appel par exemple \xe0 un objet Active Record, et soit valider soit annuler la transaction avant de renvoyer le r\xe9sultat."}),"\n",(0,i.jsx)(n.li,{children:"Le service layer peut \xeatre utile dans le cas o\xf9 la partie business est un Active Record, mais si c'est un Transaction Script alors il n'y a rien \xe0 abstraire vis-\xe0-vis de la couche pr\xe9sentation."}),"\n",(0,i.jsxs)(n.li,{children:["On l'appelle parfois aussi l'",(0,i.jsx)(n.em,{children:"application layer"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Attention \xe0 ne pas confondre la layered architecture avec une architecture ",(0,i.jsx)(n.strong,{children:"N-Tier"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"N-Tier fait r\xe9f\xe9rence au fait d'avoir des composants d\xe9ployables ind\xe9pendamment et donc qu'on consid\xe8re s\xe9par\xe9s “physiquement”, qui n'ont pas le m\xeame cycle de vie : par exemple ce qui tourne dans un navigateur, ce qui tourne sur un serveur applicatif, le serveur de base de donn\xe9es etc."}),"\n",(0,i.jsx)(n.li,{children:"Quand on parle de layered architecture, on parle bien des couches logicielles au sein d'une m\xeame entit\xe9 physique, avec le m\xeame cycle de vie."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Etant donn\xe9 la d\xe9pendance entre couche business et couche de data access, ",(0,i.jsx)(n.strong,{children:"la layered architecture est mal adapt\xe9e \xe0 du code business sous forme de domain model pattern"}),". Elle est par contre adapt\xe9e pour du transaction script ou de l'active record."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Ports and adapters"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Elle est bien plus ",(0,i.jsx)(n.strong,{children:"adapt\xe9e au domain model pattern"})," parce que le code business va \xeatre d\xe9coupl\xe9 du reste."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"On va mettre le business layer d'abord, sans qu'il ne d\xe9pende de rien, et ensuite on va regrouper tout ce qui est communication avec la BDD, frameworks, providers externes etc. dans une couche qu'on appellera infrastructure. Et enfin on ajoute une couche application layer (c'est plus parlant que service layer) au milieu."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"Business layer <- Application layer <- infrastructure layer"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Gr\xe2ce au ",(0,i.jsx)(n.strong,{children:"Dependency Inversion Principle"}),", on va \xe0 chaque fois injecter les d\xe9pendances des couches sup\xe9rieures dans les couches du dessous : la couche business ne conna\xeet pas la nature concr\xe8te de la couche application, et la couche application ne conna\xeet pas la nature concr\xe8te de la couche infrastructure."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["C'est ici que la notion de “ports and adapters” prend son sens : On a des ",(0,i.jsx)(n.strong,{children:"ports"})," qui sont des interfaces mises en place par les couches du dessus, et des ",(0,i.jsx)(n.strong,{children:"adapters"})," qui sont des impl\xe9mentations concr\xe8tes faites par les couches du dessous, et pass\xe9s en param\xe8tre des fonctions des couches du dessus."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Exemple :"}),"\n",(0,i.jsx)(n.pre,{"data-language":"typescript","data-theme":"default",children:(0,i.jsxs)(n.code,{"data-language":"typescript","data-theme":"default",children:[(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"// le port (couche business)"})}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"interface"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"IMessaging"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" {"})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"void"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"publish"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"(Message payload);"})]}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"}"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:" "}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"// l'adapter (couche infrastructure)"})}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"public "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"class"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"SQBus"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"implements"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"Imessaging"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" {"})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:"void"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-function)"},children:"publish"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"(Message payload) {"})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"        "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-comment)"},children:"// ..."})]}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    }"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ici la classe adapter qui respecte le contrat (le port) \xe9tabli par la couche business pourra \xeatre donn\xe9e en param\xe8tre dans les fonctions de la couche business o\xf9 elle accepte un objet ",(0,i.jsx)(n.code,{children:"Imessaging"}),". Elle pourra utiliser l'objet sans savoir exactement ce qu'il fait (publier dans un bus, mettre l'info simplement dans une variable etc..)."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["On l'appelle aussi (avec quelques variations) : ",(0,i.jsx)(n.em,{children:"hexagonal architecture"}),", ",(0,i.jsx)(n.em,{children:"onion architecture"})," ou encore ",(0,i.jsx)(n.em,{children:"clean architecture"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Dans ces variantes, l'application est parfois appel\xe9e ",(0,i.jsx)(n.em,{children:"service layer"})," ou encore ",(0,i.jsx)(n.em,{children:"use case layer"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Et le business layer est parfois appel\xe9 ",(0,i.jsx)(n.em,{children:"domain layer"}),", ou encore ",(0,i.jsx)(n.em,{children:"core layer"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"CQRS"})," (Command-Query Responsibility Segregation)"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cette architecture est similaire au ports & adapters pour ce qui est de la place centrale du code business ind\xe9pendant du reste. La diff\xe9rence se trouve dans la mani\xe8re de g\xe9rer les donn\xe9es : on va vouloir adopter un “polyglot modeling”, c'est-\xe0-dire plusieurs formes d\xe9normalis\xe9es de la donn\xe9e pour la lecture."}),"\n",(0,i.jsxs)(n.li,{children:["A l'origine le CQRS a \xe9t\xe9 pens\xe9 pour r\xe9pondre au probl\xe8me de l'event sourcing, en fournissant la possibilit\xe9 de lire le state actuel des donn\xe9es directement, au lieu d'avoir \xe0 repartir de la forme primaire (qui est la liste d'\xe9v\xe9nements) et de rejouer tous les events pour obtenir le state actuel.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Mais il est utile aussi sans event sourcing, c'est-\xe0-dire dans le cas classique o\xf9 la BDD “source de v\xe9rit\xe9” est par exemple relationnelle."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Comme l'indique le nom, on va faire une s\xe9gr\xe9gation (une s\xe9paration) entre les commands (les \xe9critures) et les queries (les lectures).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["D'un c\xf4t\xe9 les ",(0,i.jsx)(n.strong,{children:"commands sont faites vers la base de donn\xe9es principale"}),", source de v\xe9rit\xe9, et fortement coh\xe9rente (les invariants sont respect\xe9s, les r\xe8gles business valid\xe9es etc.)."]}),"\n",(0,i.jsxs)(n.li,{children:["De l'autre les ",(0,i.jsx)(n.strong,{children:"queries sont faites vers des bases de donn\xe9es d\xe9riv\xe9es"}),", utiles pour chaque cas particulier.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple des data warehouses sous forme de colonnes pour l'analyse, des BDD adapt\xe9es \xe0 la recherche, des BDD relationnelles pour avoir le state des aggregates tout de suite etc."}),"\n",(0,i.jsx)(n.li,{children:"Les BDD de lecture peuvent aussi \xeatre des fichiers, ou encore des BDD in-memory. Et on peut normalement les supprimer et les reconstituer \xe0 nouveau \xe0 partir de la BDD principale."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Il faut que les BDD secondaires soient mises \xe0 jour \xe0 chaque fois que la BDD principale est modifi\xe9e. On appelle \xe7a les ",(0,i.jsx)(n.strong,{children:"projections"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Il y a les ",(0,i.jsx)(n.strong,{children:"projections synchrones"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Il s'agit d'un mod\xe8le de catch-up subscription.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Quand une requ\xeate est faite \xe0 la BDD de lecture, le syst\xe8me de projection va faire une requ\xeate vers la BDD principale pour obtenir tous les changements de la donn\xe9e voulue jusqu'au pr\xe9c\xe9dent checkpoint."}),"\n",(0,i.jsx)(n.li,{children:"Les nouvelles donn\xe9es sont utilis\xe9es pour mettre \xe0 jour la BDD de lecture."}),"\n",(0,i.jsx)(n.li,{children:"Le syst\xe8me de projection retient le nouveau checkpoint \xe0 partir duquel il faudra faire la prochaine mise \xe0 jour de la donn\xe9e en question."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour que \xe7a puisse fonctionner, il faut que la BDD principale note toutes les modifications faites \xe0 l'ensemble des entr\xe9es qu'elle poss\xe8de, avec des checkpoints (des versions) pour chacune.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"NDLR : Ca ressemble \xe0 des domain events parce que chaque changement est not\xe9 en BDD. Mais pour que \xe7a en soit il faut aussi que la signification m\xe9tier de chaque changement soit not\xe9, et pas juste “telle entr\xe9e est modifi\xe9e \xe0 telle valeur”. C'est dans cette mesure que le CQRS peut \xeatre utilis\xe9 m\xeame sans event sourcing."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Et les ",(0,i.jsx)(n.strong,{children:"projections asynchrones"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Il s'agit d'un m\xe9canisme de souscription :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"La BDD principale publie chacun de ses changements dans un message bus, auquel souscrivent les projection engines de chaque BDD secondaire.."}),"\n",(0,i.jsx)(n.li,{children:"A chaque message chaque BDD secondaire est mise \xe0 jour."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Ce mod\xe8le est plus scalable et plus performant, mais il est soumis aussi \xe0 des probl\xe9matiques de consistance des donn\xe9es des BDD secondaires, et une plus grande difficult\xe9 \xe0 les reconstruire.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il est donc conseill\xe9 de rester sur le mod\xe8le synchrone et \xe9ventuellement construire une projection asynchrone par dessus."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Les queries ne peuvent pas \xe9crire de donn\xe9es, par contre les commands qui \xe9crivent les donn\xe9es peuvent aussi retourner des valeurs, notamment le statut de succ\xe8s ou d'\xe9chec de la commande, avec l'erreur sp\xe9cifique."}),"\n",(0,i.jsx)(n.li,{children:"Le CQRS est adapt\xe9 au domain model pattern, il est utile quand on veut avoir plusieurs mod\xe8les de donn\xe9es adapt\xe9s \xe0 plusieurs besoins. Il est aussi adapt\xe9 \xe0 l'event sourced domain model pattern pour lequel il est quasi obligatoire."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Ces patterns doivent \xeatre appliqu\xe9s au cas par cas pour les besoins de chaque brique logicielle"}),". Il ne faut pas choisir un seul pattern pour tout le syst\xe8me, ni m\xeame forc\xe9ment un seul pattern pour un m\xeame bounded context, dans la mesure o\xf9 plusieurs subdomains peuvent exister dans un m\xeame bounded context."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"9---communication-patterns",children:"9 - Communication Patterns"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Dans ce chapitre il est question des patterns de communication entre briques logicielles distinctes et ayant chacune leur bounded context. C'est la mise en application technique du chapitre 4."}),"\n",(0,i.jsxs)(n.li,{children:["Pour ",(0,i.jsx)(n.strong,{children:"impl\xe9menter un anticorruption layer ou un open-host service"}),", on peut proc\xe9der de plusieurs mani\xe8res :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["En mode ",(0,i.jsx)(n.strong,{children:"stateless"})," : chaque requ\xeate est autonome. Dans ce cas, le bounded context contient le layer de transformation.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On va utiliser le pattern Proxy pour que la requ\xeate passe d'abord par le layer (le proxy), puis soit traduite correctement vers la target."}),"\n",(0,i.jsxs)(n.li,{children:["La traduction peut \xeatre ",(0,i.jsx)(n.strong,{children:"synchrone"}),", auquel cas le proxy est dans le m\xeame composant.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On peut aussi vouloir utiliser un ",(0,i.jsx)(n.strong,{children:"API gateway pattern"}),", en ayant un composant externe tenant le r\xf4le du proxy et permettant d'int\xe9grer plusieurs flux vers une m\xeame target.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Dans ce cas, on pourra utiliser une solution open source comme ",(0,i.jsx)(l.U,{children:"Kong"})," ou ",(0,i.jsx)(l.U,{children:"KrakenD"}),", ou une solution payante comme ",(0,i.jsx)(l.U,{children:"AWS API Gateway"}),", ",(0,i.jsx)(l.U,{children:"Google Api-gee"})," ou ",(0,i.jsx)(l.U,{children:"Azure API Management"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["La traduction peut aussi \xeatre ",(0,i.jsx)(n.strong,{children:"asynchrone"}),", auquel cas le proxy est un composant qui souscrit \xe0 des events, et envoie des messages.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il pourrait en plus filtrer certains messages non pertinents."}),"\n",(0,i.jsxs)(n.li,{children:["Dans le cas d'un Open-Host Service, le mod\xe8le asynchrone est tr\xe8s pratique parce qu'il permet de ",(0,i.jsx)(n.strong,{children:"traduire correctement les \xe9v\xe9nements du langage priv\xe9 vers les \xe9v\xe9nements du langage public"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Et m\xeame de filtrer certains \xe9v\xe9nements qui n'ont d'utilit\xe9 qu'au sein du bounded context et pas pour l'int\xe9gration avec les autres."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["En mode ",(0,i.jsx)(n.strong,{children:"statefull"})," o\xf9 le layer poss\xe8de sa BDD et impl\xe9mente une logique complexe.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On a le cas o\xf9 on veut ",(0,i.jsx)(n.strong,{children:"agr\xe9ger les donn\xe9es entrantes"}),". Soit parce qu'on veut les traiter par batchs, soit parce qu'on veut cr\xe9er un plus gros message \xe0 partir de plus petits messages arrivant.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le BDD propre au proxy sert alors \xe0 g\xe9rer ce processus d'agr\xe9gation."}),"\n",(0,i.jsxs)(n.li,{children:["Parfois on peut utiliser un outil tout fait comme ",(0,i.jsx)(l.U,{children:"Kafka"}),", ",(0,i.jsx)(l.U,{children:"AWS Kinesis"}),", ou une solution de batch comme ",(0,i.jsx)(l.U,{children:"Apache Nifi"}),", ",(0,i.jsx)(l.U,{children:"AWS Glue"}),", ",(0,i.jsx)(l.U,{children:"Spark"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["On a aussi le cas o\xf9 on veut ",(0,i.jsx)(n.strong,{children:"unifier des sources de donn\xe9es"}),". Par exemple un backend for frontend qui va chercher des donn\xe9es chez plusieurs autres bounded contexts pour les afficher."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["A propos de l'",(0,i.jsx)(n.strong,{children:"impl\xe9mentation technique des domain events \xe9mis par les aggregates"})," et consomm\xe9 par les autres composants.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Une fa\xe7on de faire triviale mais mauvaise serait de laisser l'aggregate faire l'ajout de l'event dans le message bus.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L'event serait \xe9mis avant m\xeame que la transaction (qui a lieu dans le layer applicatif, apr\xe8s que le code de l'aggregate ait \xe9t\xe9 ex\xe9cut\xe9) n'ait \xe9t\xe9 commit\xe9e. On pourrait alors avoir des composants avertis d'une chose qui n'est pas encore vraie en DB.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Voir m\xeame qui ne sera jamais vraie en DB si la transaction \xe9choue."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Une variante serait d'\xe9mettre l'event dans le layer applicatif juste apr\xe8s le commit dans la BDD.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Mais l\xe0 encore que se passerait-il si la publication de l'event ne marchait pas ? Ou encore si le serveur crashait juste avant la publication de l'event ? On aurait la transaction valid\xe9e mais pas d'event pour pr\xe9venir les autres."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le pattern ",(0,i.jsx)(n.strong,{children:"Outbox"})," permet d'adresser ces cas.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["1- Le state et l'event sont ajout\xe9s dans la BDD en une seule transaction.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'event peut \xeatre ajout\xe9 dans une table diff\xe9rente si c'est possible. Si c'est une database NoSQL qui ne le permet pas, alors on peut le rajouter dans l'\xe9tat de l'aggregate."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["2- Un message relay va s'occuper de traiter les events non publi\xe9s de la BDD en envoyant le message dans le message bus.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le relay peut soit poller r\xe9guli\xe8rement la BDD (il faut faire attention \xe0 ne pas la surcharger), soit on peut utiliser les fonctionnalit\xe9s proactives de la BDD pour d\xe9clencher le relay."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["3- Une fois que l'event est envoy\xe9, le message relay va enlever l'event de la BDD, ou le marquer comme publi\xe9.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A noter que le relay garantit la publication du message au moins une fois : si il crash lui-m\xeame apr\xe8s avoir publi\xe9 l'event mais avant de l'avoir enlev\xe9 de la BDD, il va le republier une 2\xe8me fois."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le pattern ",(0,i.jsx)(n.strong,{children:"Saga"})," permet d'adresser les cas o\xf9 on doit ",(0,i.jsx)(n.strong,{children:"\xe9crire dans plusieurs aggregates"}),", vu que par principe on a d\xe9cid\xe9 qu'une transaction ne devait \xe9crire que dans un seul aggregate.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le saga ",(0,i.jsx)(n.strong,{children:"va \xe9couter des events \xe9mis par certains composants, et d\xe9clencher des commandes sur d'autres"}),". Si la commande \xe9choue, le saga est responsable de d\xe9clencher des commandes pour assurer la logique business."]}),"\n",(0,i.jsxs)(n.li,{children:["Exemple : imaginons deux entities qu'on ne veut pas mettre dans le m\xeame aggregate parce qu'elles sont trop peu li\xe9es entre elles : une campagne de publicit\xe9 et un publisher.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On veut que l'activation d'une campagne d\xe9clenche sa publication aupr\xe8s du publisher, et qu'en fonction de la d\xe9cision du publisher, elle soit soit valid\xe9e soit annul\xe9e."}),"\n",(0,i.jsx)(n.li,{children:"Le saga va \xe9couter l'event d'activation de l'aggregate de la campagne, et d\xe9clencher la commande de publication aupr\xe8s de l'aggregate du publisher. Et il \xe9coute aussi les events de validation ou d'annulation aupr\xe8s de l'aggregate du publisher, pour d\xe9clencher une commande aupr\xe8s de celui de la campagne en retour."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["La logique de la saga peut aussi n\xe9cessiter de garder en m\xe9moire son \xe9tat, par exemple pour g\xe9rer correctement les actions de compensation. Dans ce cas les events de la saga peuvent \xeatre mis en BDD, et la saga peut \xeatre impl\xe9ment\xe9e elle-m\xeame comme un event-sourced aggregate.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Dans ce cas il faut s\xe9parer la logique d'ex\xe9cution des commandes de la mise \xe0 jour du state de la saga, et utiliser le m\xeame principe que pour l'outbox pattern. On aura un message relay qui garantira l'ex\xe9cution de la commande m\xeame si on \xe9choue \xe0 quelque \xe9tape que ce soit."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Attention tout de m\xeame \xe0 ne pas utiliser les saga pour compenser des limites d'aggregates mal pens\xe9es. L'action du saga \xe9tant asynchrone, les donn\xe9es seront eventually consistent entre-elles. ",(0,i.jsx)(n.strong,{children:"Les seules donn\xe9es fortement consistantes sont celles qui sont dans un m\xeame aggregate"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"Process Manager"})," se base sur le m\xeame principe que la saga, mais l\xe0 o\xf9 la saga associe juste un event \xe0 une commande, le process manager va impl\xe9menter une logique plus complexe li\xe9e \xe0 plusieurs events pour choisir les commandes \xe0 d\xe9clencher.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il est impl\xe9ment\xe9 sous forme de state-based ou event-sourced aggregate avec une persistance de son \xe9tat en BDD."}),"\n",(0,i.jsx)(n.li,{children:"L\xe0 o\xf9 la saga est d\xe9clench\xe9e implicitement quand un \xe9v\xe9nement qu'elle doit \xe9couter se produit, le process manager est instanci\xe9 par l'application et s'occupe de mener \xe0 bien un flow en plusieurs \xe9tapes."}),"\n",(0,i.jsx)(n.li,{children:"Exemple : la r\xe9servation d'un voyage business commence par la s\xe9lection du trajet le plus optimal, puis la validation par l'employ\xe9. Dans le cas o\xf9 l'employ\xe9 pr\xe9f\xe8re un autre trajet, le manager doit valider. Puis l'h\xf4tel pr\xe9-approuv\xe9 doit \xeatre r\xe9serv\xe9. Et en cas d'absence d'h\xf4tels disponibles, l'ensemble de la r\xe9servation est annul\xe9."}),"\n",(0,i.jsx)(n.li,{children:"L\xe0 encore, vu qu'on a des commandes et un \xe9tat, il vaut mieux impl\xe9menter l'outbox pattern pour jouer les commandes et mettre \xe0 jour l'\xe9tat de mani\xe8re s\xfbre."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"part-iii--applying-domain-driven-design-in-practice",children:"Part III : Applying Domain-Driven Design in Practice"}),"\n",(0,i.jsx)(n.h3,{id:"10---heuristics",children:"10 - Heuristics"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ce chapitre donne des ",(0,i.jsx)(n.strong,{children:"heuristiques"}),", c'est-\xe0-dire des r\xe8gles \xe0 appliquer qui marchent dans la plupart des cas."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Bounded contexts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Recomposer diff\xe9remment des bounded contexts quand on se rend compte que le d\xe9coupage n'est pas bon co\xfbte cher. Il vaut donc mieux ",(0,i.jsx)(n.strong,{children:"commencer par des bounded contexts grands"}),", et les red\xe9couper plus finement par la suite."]}),"\n",(0,i.jsx)(n.li,{children:"Cette r\xe8gle s'applique en particulier pour les bounded contexts contenant un core subdomain, qui change par nature beaucoup. Il peut \xeatre sage de laisser d'autres subdomains avec lesquels il r\xe9agit beaucoup dans le m\xeame bounded context."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Business logic patterns"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Si le subdomain trace des transactions mon\xe9taires, ou doit permettre une tra\xe7abilit\xe9, ou encore des possibilit\xe9s d'analyse approfondies des donn\xe9es, alors il faut choisir l'",(0,i.jsx)(n.strong,{children:"event sourced domain model"})," pattern."]}),"\n",(0,i.jsxs)(n.li,{children:["Sinon, si la logique business est quand m\xeame complexe (core subdomain), alors il faut choisir le ",(0,i.jsx)(n.strong,{children:"domain model"})," pattern classique."]}),"\n",(0,i.jsxs)(n.li,{children:["Sinon, si la logique business inclut des transformations de donn\xe9es complexes, alors il faut choisir l'",(0,i.jsx)(n.strong,{children:"active record"})," pattern."]}),"\n",(0,i.jsxs)(n.li,{children:["Et sinon, il faut se rabattre sur le ",(0,i.jsx)(n.strong,{children:"transaction script"})," pattern."]}),"\n",(0,i.jsxs)(n.li,{children:["Concernant le fait de savoir si une logique business est complexe :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Elle l'est si elle contient des r\xe8gles business compliqu\xe9es, des invariants et des algorithmes compliqu\xe9s. On peut s'en rendre compte \xe0 partir de la validation des inputs (?)."}),"\n",(0,i.jsx)(n.li,{children:"Elle l'est aussi si l'ubiquitous language est compliqu\xe9. Et \xe0 l'inverse s'il d\xe9crit surtout des op\xe9rations CRUD, alors elle ne l'est pas."}),"\n",(0,i.jsxs)(n.li,{children:["Si on se retrouve \xe0 avoir une diff\xe9rence entre le pattern qu'on veut utiliser pour r\xe9pondre \xe0 la nature de la logique business, et la cat\xe9gorie de notre subdomain, alors c'est l'occasion de s'interroger sur la pertinence de notre cat\xe9gorisation.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Mais il ne faut pas oublier non plus que l'avantage comp\xe9titif peut ne pas r\xe9sider dans la technique."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Architectural patterns"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L'event sourced domain model n\xe9cessite le ",(0,i.jsx)(n.strong,{children:"CQRS"}),". Dans le cas contraire, on est vraiment limit\xe9 : on ne pourra qu'obtenir les entities par leur ID."]}),"\n",(0,i.jsxs)(n.li,{children:["Le domain model classique n\xe9cessite le ",(0,i.jsx)(n.strong,{children:"ports & adapters"}),", sinon on va avoir du mal \xe0 isoler la logique business de la persistance."]}),"\n",(0,i.jsxs)(n.li,{children:["L'active record va bien avec une ",(0,i.jsx)(n.strong,{children:"layered architecture \xe0 4 couches"}),", avec la couche service qui va contenir la logique qui manipule l'active record."]}),"\n",(0,i.jsxs)(n.li,{children:["Le transaction script peut \xeatre impl\xe9ment\xe9 avec une simple ",(0,i.jsx)(n.strong,{children:"layered architecture \xe0 3 couches"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Enfin, m\xeame dans le cas o\xf9 on n'a pas choisi l'event sourcing pour notre logique business, on peut quand m\xeame adopter le CQRS dans le cas o\xf9 on aurait besoin d'avoir la donn\xe9e sous plusieurs formes diff\xe9rentes."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Testing strategy"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["La ",(0,i.jsx)(n.strong,{children:"testing pyramid"})," (beaucoup de unit tests, moins de tests d'int\xe9gration, et peu de tests end to end) est bien adapt\xe9e aux ",(0,i.jsx)(n.strong,{children:"domain model"})," patterns (event sourced ou classique). Les value objects et les aggregates font de parfaits units autonomes."]}),"\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"testing diamond"})," (peu de test unitaires, beaucoup de tests d'int\xe9gration, et peu de tests end to end) est bien adapt\xe9 \xe0 l'",(0,i.jsx)(n.strong,{children:"active record"})," pattern. La logique business \xe9tant \xe9parpill\xe9e \xe0 travers le layer service et business, il est pertinent de les tester ensemble. (avec la BDD du coup ?)"]}),"\n",(0,i.jsxs)(n.li,{children:["La ",(0,i.jsx)(n.strong,{children:"reversed testing pyramid"})," (peu de unit tests, plus de tests d'int\xe9gration, et beaucoup de tests end to end) est bien adapt\xe9e au ",(0,i.jsx)(n.strong,{children:"transaction script"}),". La logique business \xe9tant simple, et le nombre de couches faible, on peut directement tester de bout en bout."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"L'auteur a d\xe9j\xe0 rencontr\xe9 des \xe9quipes qui utilisaient par exemple l'event sourced domain model pattern partout. Pour autant il ne le conseille pas, et a rencontr\xe9 beaucoup plus d'\xe9quipes qui s'en sortaient bien avec ces r\xe8gles d'heuristiques."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"11---evolving-design-decisions",children:"11 - Evolving Design Decisions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Identifier les subdomains"})," a des implications importantes. Mais il faut r\xe9guli\xe8rement questionner leur statut et \xe9ventuellement le r\xe9\xe9valuer.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Core -> supporting"})," : Si l'avantage comp\xe9titif apport\xe9 par le subdomain n'est plus justifi\xe9, l'entreprise peut d\xe9cider de r\xe9duire la complexit\xe9 du subdomain au minimum pour se concentrer sur ceux qui ont plus de valeur."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Core -> generic"})," : On peut avoir un proc\xe9d\xe9 qui constituait un avantage comp\xe9titif, qui se fait d\xe9passer par un acteur qui se met \xe0 fournir le fournir sous forme de service sur le march\xe9. Dans ce cas on se retrouve contraint d'utiliser sa solution pour rester \xe0 la page, et notre core subdomain devient un generic subdomain."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Supporting -> core"})," : Il s'agit de cas o\xf9 un supporting subdomain dont la logique se complexifie. Si elle n'apporte pas d'avantage comp\xe9titif, alors il n'y a pas de raison \xe0 cette complexification et il faut la corriger. Sinon c'est qu'on se retrouve avec un core subdomain."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Supporting -> generic"})," : On peut imaginer qu'on ait cr\xe9\xe9 un syst\xe8me simple pour g\xe9rer quelque chose. Puis il appara\xeet un syst\xe8me open source qui fait la m\xeame chose, mais a aussi des fonctionnalit\xe9s que l'entreprise n'avait pas prioris\xe9 \xe9tant donn\xe9 la faible valeur apport\xe9e par ce syst\xe8me. Mais si c'est \xe0 faible co\xfbt alors pourquoi pas : l'entreprise abandonne la solution maison pour la solution open source."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Generic -> core"})," : Une entreprise utilisant une solution externe se retrouve limit\xe9e par celle-ci. Elle d\xe9cide finalement d'impl\xe9menter une solution maison qui r\xe9ponde vraiment \xe0 son besoin, et gr\xe2ce \xe0 \xe7a de mieux rendre son service. Un exemple est Amazon qui a cr\xe9\xe9 une solution d'infrastructure web maison pour ses besoins, et a fini par la commercialiser sous le nom AWS."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Generic -> supporting"})," : Pour la raison inverse de passer de supporting \xe0 generic, on peut d\xe9cider que la solution open source ne vaut plus le coup parce qu'elle co\xfbte trop cher \xe0 int\xe9grer, et revenir \xe0 une solution maison simple."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Quand ",(0,i.jsx)(n.strong,{children:"ajouter des fonctionnalit\xe9s devient douloureux"}),", c'est un signe qu'on se retrouve avec ",(0,i.jsx)(n.strong,{children:"des patterns tactiques qui ne sont plus adapt\xe9s"})," \xe0 la complexit\xe9 de notre logique business.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple, si un supporting subdomain se met \xe0 avoir une logique de plus en plus complexe, il est peut \xeatre temps de le transformer en core."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Si on a fait nos choix en conscience, et qu'on a connaissance des diff\xe9rents patterns existants, migrer n'est pas si difficile.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Transaction script -> active record"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il s'agit dans les deux cas de logique proc\xe9durale. Quand on a des structures de donn\xe9es compliqu\xe9es, il faut les rep\xe9rer et les encapsuler la logique de lecture/\xe9criture dans des objets."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Active record -> domain model"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On pense \xe0 le faire quand on remarque que la logique business qui manipule les active records devient complexe, et qu'on se trouve face \xe0 des duplications qui m\xe8nent \xe0 des inconsistances \xe0 travers la codebase."}),"\n",(0,i.jsxs)(n.li,{children:["On ",(0,i.jsx)(n.strong,{children:"identifie d'abord les value objects"})," immuables dans notre logique. On identifie aussi la logique qui pourrait aller dans ces objets et on la migre dedans."]}),"\n",(0,i.jsxs)(n.li,{children:["Ensuite on essaye de ",(0,i.jsx)(n.strong,{children:"d\xe9limiter les donn\xe9es qui doivent \xeatre mises \xe0 jour ensemble"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut mettre les setters des active records priv\xe9s, et constater o\xf9 ils sont appel\xe9s dans le code."}),"\n",(0,i.jsx)(n.li,{children:"On peut alors d\xe9placer tout le code qui est cass\xe9 \xe0 l'int\xe9rieur de l'active record. On obtient un bon candidat pour un aggregate."}),"\n",(0,i.jsx)(n.li,{children:"On va ensuite examiner la hi\xe9rarchie d'entities qu'il faut construire, et extraire \xe9ventuellement plusieurs aggregates du code : un aggregate sera la plus petite unit\xe9 dont les donn\xe9es doivent \xeatre fortement consistantes."}),"\n",(0,i.jsx)(n.li,{children:"Enfin on se d\xe9brouille pour que les m\xe9thodes de l'aggregate ne soient appelables que par l'aggregate root, et que seule l'interface publique soit appelable de l'ext\xe9rieur."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Domain model -> event sourced domain model"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il faut commencer par mod\xe9liser les domain events."}),"\n",(0,i.jsxs)(n.li,{children:["La partie la plus compliqu\xe9e va \xeatre de ",(0,i.jsx)(n.strong,{children:"g\xe9rer les events pass\xe9s qui n'existent pas"}),". On a deux mani\xe8res de le faire :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"G\xe9n\xe9rer de fausses transitions pass\xe9es"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On va analyser chaque aggregate et on va imaginer une mani\xe8re r\xe9aliste d'obtenir l'\xe9tat actuel par une succession de domain events successifs."}),"\n",(0,i.jsx)(n.li,{children:"On va alors g\xe9n\xe9rer ces events en base et faire comme si notre aggregate avait toujours \xe9t\xe9 event-sourced."}),"\n",(0,i.jsx)(n.li,{children:"L'avantage c'est qu'on pourra toujours faire des projections, y compris en partant de z\xe9ro."}),"\n",(0,i.jsx)(n.li,{children:"Le d\xe9savantage c'est que les events avant la migration seront invent\xe9s, et pourraient aussi induire en erreur sur une analyse."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Mod\xe9liser des events de migration"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L'autre solution c'est d'accepter explicitement qu'avant un certain point on n'a pas de donn\xe9es. On va alors cr\xe9er un ",(0,i.jsx)(n.strong,{children:"event initial"})," pour chaque aggregate, qui va simplement avoir pour effet de mettre la valeur actuelle de l'\xe9tat de toutes les valeurs de l'aggregate."]}),"\n",(0,i.jsx)(n.li,{children:"L'avantage c'est qu'on ne pourra pas avoir de fausses projections."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"changements organisationnels peuvent affecter les patterns d'int\xe9gration des bounded contexts"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple, si une seule \xe9quipe g\xe9rait un bounded context avec plusieurs subdomains, l'arriv\xe9e d'une 2\xe8me \xe9quipe m\xe8nera \xe0 la s\xe9paration du bounded context en deux, parce qu'un bounded context ne doit pas \xeatre g\xe9r\xe9 par deux \xe9quipes diff\xe9rentes."}),"\n",(0,i.jsx)(n.li,{children:"Autre exemple : si un des bounded contexts est affect\xe9 \xe0 une autre \xe9quipe, et que la communication n'est pas bonne, on va passer du partnership \xe0 du customer-supplier."}),"\n",(0,i.jsx)(n.li,{children:"Et quand on a encore plus de probl\xe8mes de communication, il vaut parfois mieux dupliquer la fonctionnalit\xe9 et passer sur du separate ways."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Il faut ",(0,i.jsx)(n.strong,{children:"prendre soin de la connaissance du domaine"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"En particulier pour les core subdomains, la mod\xe9lisation du domaine est complexe et change souvent. Il faut donc r\xe9guli\xe8rement revoir les value objects, les aggregates etc."}),"\n",(0,i.jsx)(n.li,{children:"Parfois la connaissance du domaine se perd, la documentation n'est plus \xe0 jour, les gens bougent etc. Il faut alors la retrouver, par exemple avec des sessions d'event storming."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["A mesure que le ",(0,i.jsx)(n.strong,{children:"code grossit"}),", les d\xe9cisions de design deviennent obsol\xe8tes et doivent \xeatre adapt\xe9es. Si on ne le fait pas, on va obtenir un ",(0,i.jsx)(n.strong,{children:"big ball of mud"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Il faut identifier et r\xe9guli\xe8rement \xe9liminer l'",(0,i.jsx)(n.strong,{children:"accidental complexity"})," r\xe9sultant des d\xe9cisions design obsol\xe8tes, et n'adresser que l'",(0,i.jsx)(n.strong,{children:"essential complexity"})," inh\xe9rente au domaine avec les outils tactiques du DDD."]}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"subdomains"})," qui deviennent de plus en plus gros peuvent \xeatre ",(0,i.jsx)(n.strong,{children:"distill\xe9s pour en mettre en \xe9vidence d'autres"}),". Il faut en particulier le faire avec les core subdomains pour que la partie core soit circonscrite \xe0 ce qui est vraiment n\xe9cessaire."]}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"bounded contexts"})," peuvent aussi \xeatre revisit\xe9s quand ils grossissent trop :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut simplifier le mod\xe8le du bounded context en extrayant un bounded context charg\xe9 d'un probl\xe8me sp\xe9cifique qui a grossi."}),"\n",(0,i.jsx)(n.li,{children:"Parfois on se rend compte qu'un bounded context n'arrive pas \xe0 faire une action sans \xeatre d\xe9pendant d'un autre bounded context. On peut alors revoir ses limites pour augmenter son autonomie."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"aggregates"})," doivent rester des unit\xe9s incluant ",(0,i.jsx)(n.strong,{children:"le plus petit set de donn\xe9es possible qui doivent \xeatre fortement consistantes entre elles"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Au fil du temps on peut \xeatre amen\xe9 \xe0 ajouter des choses dans des aggregates existants parce que c'est plus pratique."}),"\n",(0,i.jsx)(n.li,{children:"Il faut donc r\xe9guli\xe8rement rev\xe9rifier le contenu des aggregates. Et ne pas h\xe9siter \xe0 extraire des fonctionnalit\xe9s dans un nouvel aggregate pour simplifier le premier."}),"\n",(0,i.jsx)(n.li,{children:"On se rend souvent compte que le nouvel aggregate r\xe9v\xe8le un nouveau mod\xe8le et am\xe8ne \xe0 la cr\xe9ation d'un nouveau bounded context."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"12---eventstorming",children:"12 - EventStorming"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L'event storming est un atelier qui permet de ",(0,i.jsx)(n.strong,{children:"mod\xe9liser ensemble un process business particulier."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il s'agit de construire la story du business process concern\xe9, \xe0 travers une timeline d'events qu'on fait appara\xeetre sur un tableau au cours de l'atelier."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les membres participant \xe0 l'atelier doivent \xeatre ",(0,i.jsx)(n.strong,{children:"le plus divers possible"})," (devs, domain experts, product owners, UI/UX, CSM etc.). Mais il vaut mieux ne pas d\xe9passer 10 personnes."]}),"\n",(0,i.jsxs)(n.li,{children:["C\xf4t\xe9 mat\xe9riel :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\xc7a se passe sur un mur, avec un gros rouleau de papier sur lequel on va pouvoir coller des post-its."}),"\n",(0,i.jsx)(n.li,{children:"Il faut des post-its de couleur, chaque couleur repr\xe9sentant un concept particulier. Et des marqueurs pour \xe9crire dessus."}),"\n",(0,i.jsx)(n.li,{children:"L'atelier dure 2 \xe0 4 heures, donc il faut pr\xe9voir de quoi grignoter."}),"\n",(0,i.jsxs)(n.li,{children:["Il faut une salle spacieuse, et rien qui ne g\xe8ne pour que chaque participant acc\xe8de librement au tableau.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il ne faut pas de chaises, les participants sont debout."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["L'atelier se passe en 10 \xe9tapes, pendant lequel le mod\xe8le est enrichi collectivement :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 1 - Unstructured Exploration"})," : il s'agit d'une \xe9tape en mode brainstorming : tous les participants prennent des ",(0,i.jsx)(a,{children:"post-its oranges"}),", et ",(0,i.jsx)(n.strong,{children:"\xe9crivent dessus des events li\xe9s au process business"})," auquel on s'int\xe9resse.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les events sont coll\xe9s sur le tableau sans se soucier de l'ordre ou de la redondance."}),"\n",(0,i.jsx)(n.li,{children:"Les events sont formul\xe9s au pass\xe9."}),"\n",(0,i.jsx)(n.li,{children:"Exemple d'events : “Notification sent”, “Destination chosen”, “Order shipped”."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 2 - Timelines"})," : Les participants vont ",(0,i.jsx)(n.strong,{children:"organiser les post-its dans le bon ordre"}),", en commen\xe7ant par le “happy path scenario”, puis par les cas d'erreur.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut tracer des fl\xe8ches \xe0 partir d'un post-it pour mener \xe0 plusieurs flows de posi-its possibles."}),"\n",(0,i.jsx)(n.li,{children:"C'est aussi le moment d'enlever les doublons."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 3 - Pain Points"})," : On va marquer les points qui ",(0,i.jsx)(n.strong,{children:"requi\xe8rent une attention particuli\xe8re"})," : des bottlenecks, des \xe9tapes manuelles \xe0 automatiser, de la doc ou du domain knowledge manquant etc.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On fait \xe7a avec des ",(0,i.jsx)(o,{children:"post-its roses, tourn\xe9s de 45\xb0"})," pour \xeatre “en diamant”."]}),"\n",(0,i.jsx)(n.li,{children:"Cette \xe9tape y est d\xe9di\xe9e sp\xe9cifiquement, mais le facilitateur doit aussi faire attention aux pain points lev\xe9s tout au long de l'atelier et les marquer."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 4 - Pivotal Events"})," : On va s'int\xe9resser \xe0 des events ",(0,i.jsx)(n.strong,{children:"marquant une \xe9tape importante"})," dans le processus, et tracer ",(0,i.jsx)(n.strong,{children:"une barre verticale"})," le long du tableau, pour d\xe9limiter l'avant et l'apr\xe8s cet event.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Exemple : dans un flow d'achat, “order initialized”, “order shipped” et “order delivered” peuvent \xeatre des events importants."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 5 - Commands"})," : On va ajouter des commandes sur des ",(0,i.jsx)(c,{children:"post-its bleus"}),", juste avant l'event qui r\xe9sulte de la commande.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les commandes sont formul\xe9es \xe0 l'imp\xe9ratif."}),"\n",(0,i.jsx)(n.li,{children:"Exemple : “Publish campaign”, “Submit order”."}),"\n",(0,i.jsxs)(n.li,{children:["Si l'actor (la persona du business domain, ex : client, administrateur etc.) qui \xe9met la commande est \xe9vident, on l'ajoute sur le post-it de la commande avec un ",(0,i.jsx)(u,{children:"post-it jaune"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 6 - Policies"})," : Presque \xe0 chaque fois il y a des commandes qui n'ont pas d'actor associ\xe9. On peut alors leur ajouter une ",(0,i.jsx)(n.strong,{children:"automation policy"})," qui consiste \xe0 les ",(0,i.jsx)(n.strong,{children:"d\xe9clencher lors d'un domain event, sans intervention manuelle"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On ajoute ces policies avec des ",(0,i.jsx)(d,{children:"post-its violets"}),", et on va les placer entre la commande et l'event concern\xe9s."]}),"\n",(0,i.jsx)(n.li,{children:"On peut ajouter d'\xe9ventuels crit\xe8res de d\xe9clenchement. Par exemple, si un event “complaint received” doit d\xe9clencher la commande “escalate” seulement si \xe7a vient d'un client VIP, on peut mettre sur le post-it de policy que c'est seulement si client VIP."}),"\n",(0,i.jsx)(n.li,{children:"Dans le cas o\xf9 l'event et la commande sont loin, ne pas h\xe9siter \xe0 tracer une fl\xe8che pour les joindre."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 7 - Read Models"})," : On ajoute les “read models”, c'est-\xe0-dire les interfaces utilisateur (\xe9cran, rapport, notification etc.) utilis\xe9es par les actors pour prendre leurs d\xe9cisions d'ex\xe9cuter les commandes.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ils seront ajout\xe9s sur des ",(0,i.jsx)(p,{children:"post-its verts"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Exemple de read model : “Shopping cart”, pour un actor “customer”, qui va actionner la commande “submit order”."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 8 - External Systems"})," : On va repr\xe9senter les int\xe9ractions avec des syst\xe8mes externes, c'est-\xe0-dire qui ne font pas partie du domaine qu'on est en train d'explorer.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ils seront ajout\xe9s sur des ",(0,i.jsx)(o,{children:"post-its roses"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"\xc7a peut \xeatre un composant qui d\xe9clenche une commande, par exemple un CRM qui d\xe9clenche l'ordre d'exp\xe9dier une commande?"}),"\n",(0,i.jsx)(n.li,{children:"Ca peut aussi \xeatre un composant qu'on va notifier, par exemple notifier le CRM suite \xe0 un event qui dit que l'exp\xe9dition est approuv\xe9e."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"A la fin de cette \xe9tape, toutes les commandes devront avoir leur origine associ\xe9e"})," : soit un actor, soit une policy, soit un syst\xe8me externe."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 9 - Aggregates"})," : On va pouvoir organiser les commandes et events repr\xe9sent\xe9s en aggregates, sachant qu'un aggregate re\xe7oit des commandes, et \xe9met des events.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On va ajouter de ",(0,i.jsx)(u,{children:"longs post-its jaunes verticaux"})," pour repr\xe9senter l'aggregate. On va les placer entre les commandes et les events."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\xc9tape 10 - Bounded Contexts"})," : On va finalement essayer de ",(0,i.jsx)(n.strong,{children:"regrouper les aggregates entre eux"}),", soit parce qu'ils repr\xe9sentent des fonctionnalit\xe9s li\xe9es entre elles, soit par leur couplage via des policies.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ces groupes d'aggregates seront de bons candidats pour des bounded contexts."}),"\n",(0,i.jsx)(n.li,{children:"On peut les mat\xe9rialiser avec des pointill\xe9s entourant les groupes d'aggregates li\xe9s."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le cr\xe9ateur de l'event storming lui-m\xeame (Alberto Brandolini) dit qu'il s'agit simplement de conseil sur la mani\xe8re de mener l'atelier. On peut tr\xe8s ",(0,i.jsx)(n.strong,{children:"bien l'adapter comme \xe7a nous convient"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'auteur du livre applique d'abord les \xe9tapes 1 \xe0 4 sur le domaine tout entier pour obtenir une vision large du domaine et identifier les process business."}),"\n",(0,i.jsx)(n.li,{children:"Ensuite il organise un atelier pour chaque process business pertinent, en suivant cette fois toutes les \xe9tapes."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["La ",(0,i.jsx)(n.strong,{children:"vraie valeur de l'event storming c'est surtout le processus en lui-m\xeame"}),", et le fait qu'il permette la communication entre les diff\xe9rentes parties prenantes, en leur permettant d'aligner leur mod\xe8le mental, de d\xe9couvrir d'\xe9ventuels mod\xe8les en conflit, et de formuler un ubiquitous language.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les objets obtenus sur le tableau sont un bonus. Tous les ingr\xe9dients sont l\xe0 pour impl\xe9menter un event-sourced domain model pattern si on est bien face \xe0 un core subdomain et qu'on veut faire ce choix."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["L'utilisation de l'event storming permet non seulement de construire l'ubiquitous language, et construire le domain model, mais il est aussi utile pour ",(0,i.jsx)(n.strong,{children:"explorer de nouvelles fonctionnalit\xe9s, retrouver de la connaissance du domaine perdue, onboarder de nouvelles recrues"})," en leur donnant de la connaissance du domaine.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"En revanche, l'event storming sera peu utile si le process business examin\xe9 est simple et \xe9vident."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Tips pour les facilitateurs :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Au d\xe9but de l'atelier, donner une vision d'ensemble du processus, et pr\xe9senter les \xe9l\xe9ments de mod\xe9lisation qui vont \xeatre utilis\xe9s tout au long (en construisant une l\xe9gende avec les post-its de chaque couleur par exemple)."}),"\n",(0,i.jsx)(n.li,{children:"Si on sent un ralentissement du dynamisme du groupe, on peut relancer avec une question par exemple, ou peut \xeatre que c'est le moment de passer \xe0 l'\xe9tape suivante."}),"\n",(0,i.jsx)(n.li,{children:"Tout le monde doit participer, si certain(e)s sont en retrait, essayer de les inclure en leur posant une question sur l'\xe9tat actuel du mod\xe8le."}),"\n",(0,i.jsxs)(n.li,{children:["L'activit\xe9 \xe9tant intense, il y aura au moins un break.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il ne faut pas reprendre l'activit\xe9 tant que tout le monde n'est pas de retour."}),"\n",(0,i.jsx)(n.li,{children:"On peut reprendre en r\xe9capitulant le mod\xe8le tel qu'il a \xe9t\xe9 d\xe9fini pour le moment."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les ateliers en remote sont plus difficiles \xe0 mener, l'auteur conseille de se limiter \xe0 5 personnes.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Parmi les outils existants, miro.com est celui qui est le plus connu au moment de l'\xe9criture du livre."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Pas besoin d'\xeatre ceinture noire pour faciliter une session : on apprend en faisant."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"13---domain-driven-design-in-the-real-world",children:"13 - Domain-Driven Design in the Real World"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les techniques du domain driven design ",(0,i.jsx)(n.strong,{children:"apporteront le plus de b\xe9n\xe9fices aux brownfield projects"})," : les projets ayant d\xe9j\xe0 un business et s'\xe9tant \xe9ventuellement embourb\xe9s sous forme de big ball of mud."]}),"\n",(0,i.jsxs)(n.li,{children:["Pas besoin que tous les devs soient des ceintures noires du DDD, ni d'appliquer toutes les techniques que le DDD propose.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Par exemple, si on pr\xe9f\xe8re d'autres patterns tactiques que ceux du DDD, c'est tout \xe0 fait OK."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Il faut d'abord ",(0,i.jsx)(n.strong,{children:"commencer par l'analyse strat\xe9gique"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"D'abord comprendre le domaine avec une vue haut niveau (qui sont les clients, que fait l'entreprise, qui sont les comp\xe9titeurs etc.)."}),"\n",(0,i.jsxs)(n.li,{children:["Puis ",(0,i.jsx)(n.strong,{children:"identifier les subdomains"}),". Pour \xe7a on peut partir de l'organigramme de l'entreprise.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Pour les core subdomains, on peut se demander ce qui diff\xe9rencie l'entreprise de ses comp\xe9titeurs :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Peut-\xeatre un algorithme maison que les autres n'ont pas ?"}),"\n",(0,i.jsx)(n.li,{children:"Peut \xeatre un avantage non-technique comme la capacit\xe9 \xe0 embaucher du personnel top niveau, ou de produire un design artistique unique ?"}),"\n",(0,i.jsxs)(n.li,{children:["Une heuristique qui fonctionne bien est de ",(0,i.jsx)(n.strong,{children:"trouver les composants qui sont dans le pire \xe9tat"})," : ceux qui sont devenus des big balls of mud, que les devs d\xe9testent mais que les dirigeants refusent de faire r\xe9\xe9crire \xe0 cause du risque business."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"Pour les generic subdomains il s'agit simplement de trouver les solutions pr\xeates \xe0 l'emploi, soit open source, soit payantes."}),"\n",(0,i.jsxs)(n.li,{children:["Les supporting subdomains sont les composants restants.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ils peuvent \xeatre dans un mauvais \xe9tat mais suscitent moins de plainte de la part des devs parce qu'ils sont moins souvent modifi\xe9s."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"On n'est pas oblig\xe9s d'identifier tous les subdomains. On peut commencer par les plus importants."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["On peut ensuite ",(0,i.jsx)(n.strong,{children:"identifier et analyser les diff\xe9rents composants logiciels"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le crit\xe8re ici c'est le cycle de vie : les diff\xe9rents composants sont ceux qu'on peut faire \xe9voluer et d\xe9ployer ind\xe9pendamment des autres."}),"\n",(0,i.jsx)(n.li,{children:"On peut alors regarder les patterns d'architecture utilis\xe9s pour chaque composant, et v\xe9rifier si un pattern complexe serait plus adapt\xe9, ou \xe0 l'inverse si on pourrait utiliser un plus simple ou m\xeame une solution existante."}),"\n",(0,i.jsxs)(n.li,{children:["On peut ensuite faire comme si ces composants \xe9taient des bounded contexts, et tracer le context map avec la relation entre chacun d'entre eux.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut l\xe0 aussi v\xe9rifier si les patterns d'int\xe9gration de bounded context sont am\xe9liorables : plusieurs \xe9quipes travaillant sur le m\xeame composant, impl\xe9mentations de core subdomain dupliqu\xe9es, impl\xe9mentation de core subdomain sous-trait\xe9e, frictions \xe0 cause d'une mauvaise communication entre \xe9quipes etc."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"On pourra par la suite utiliser l'event storming pour construire un ubiquitous language, et \xe9ventuellement retrouver de la connaissance du domaine perdue."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Ensuite on peut ",(0,i.jsx)(n.strong,{children:"mettre en place une strat\xe9gie de modernisation"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il ne s'agira pas de tout r\xe9\xe9crire parce que \xe7a marche rarement, et que c'est support\xe9 par le management encore plus rarement."}),"\n",(0,i.jsxs)(n.li,{children:["Il faut accepter que dans un grand syst\xe8me, tout ne sera pas bien design\xe9, et ",(0,i.jsx)(n.strong,{children:"se concentrer sur les composants qu'on estime strat\xe9giques"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Mais pour \xe7a il faut d\xe9j\xe0 s'assurer qu'on a bien une d\xe9limitation, au moins logique, entre les subdomains (code s\xe9par\xe9 sous forme de modules, namespaces, packages etc.)."}),"\n",(0,i.jsx)(n.li,{children:"Ne pas oublier aussi les bouts de code du subdomain qui seraient ailleurs, sous forme de stored procedures d'une BDD, ou sous forme de serverless functions."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.li,{children:"On peut alors commencer \xe0 extraire des composants logiques en bounded contexts physiques, en commen\xe7ant par ceux qui apportent le plus de valeur."}),"\n",(0,i.jsxs)(n.li,{children:["Il faut ensuite bien examiner les composants extraits et r\xe9fl\xe9chir \xe0 comment les moderniser :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il faut examiner leur int\xe9gration vis-\xe0-vis de la relation entre les \xe9quipes qui en ont la charge et de leur niveau de communication (partnership vers customer/supplier, shared kernel vers separate ways etc.)."}),"\n",(0,i.jsx)(n.li,{children:"C\xf4t\xe9 tactique, il faut se concentrer sur les composants qui apportent beaucoup de valeur (core) mais dont l'impl\xe9mentation ne serait pas adapt\xe9e et rendrait difficile la maintenance, en utilisant plut\xf4t un domain model pattern."}),"\n",(0,i.jsx)(n.li,{children:"Il faut aussi ne pas oublier de construire un ubiquitous language avec les domain experts, notamment au travers d'ateliers d'event storming."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Concernant la modernisation de chaque bounded context extrait, on peut proc\xe9der de deux mani\xe8res :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"strangler pattern"})," : on va cr\xe9er un nouveau bounded context \xe0 c\xf4t\xe9 de l'ancien, et toutes les nouvelles fonctionnalit\xe9s iront dedans. On migrera aussi les anciennes progressivement jusqu'\xe0 ce qu'il ne reste plus rien du premier.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut mettre en place une fa\xe7ade devant les deux bounded contexts pour rediriger les appels vers l'un ou l'autre. Elle dispara\xeet quand le composant legacy meurt."}),"\n",(0,i.jsx)(n.li,{children:"Les deux bounded contexts peuvent temporairement partager une m\xeame base de donn\xe9es (chose qu'on ne fait pas d'habitude pour deux bounded contexts)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"refactoring progressif"})," : on va changer le mod\xe8le et les patterns progressivement au sein du bounded context comme expliqu\xe9 au chapitre 11.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il faut proc\xe9der par \xe9tapes, et ne pas sauter d'un transaction script \xe0 un event sourced domain model par exemple."}),"\n",(0,i.jsx)(n.li,{children:"Il faut passer du temps \xe0 trouver les bonnes limites pour les aggregates, en particulier si on va jusqu'\xe0 l'event sourced domain model, les changer ensuite est plus difficile."}),"\n",(0,i.jsx)(n.li,{children:"L'introduction du domain model pattern elle-m\xeame peut se faire en plusieurs \xe9tapes : par exemple commencer par trouver les objets immutables pour les extraire en value objects."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Comment ",(0,i.jsx)(n.strong,{children:"introduire le DDD au sein de mon organisation"})," ?","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\xc9tant donn\xe9 les changements importants, y compris organisationnels et d'implication des effectifs hors ing\xe9nierie, ",(0,i.jsx)(n.strong,{children:"avoir un appui du top management"})," peut beaucoup aider. Mais c'est plut\xf4t rare."]}),"\n",(0,i.jsxs)(n.li,{children:["Ceci dit, l'essentiel du DDD reste des pratiques d'ing\xe9nierie logicielle, donc on peut commencer \xe0 l'utiliser dans ses activit\xe9s quotidiennes ",(0,i.jsx)(n.strong,{children:"m\xeame sans mise en place \xe0 l'\xe9chelle de l'organisation"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On peut d\xe9j\xe0 commencer \xe0 ",(0,i.jsx)(n.strong,{children:"construire un ubiquitous language et l'utiliser"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\xc9couter les domain experts parler, leur demander des clarifications, rep\xe9rer les doublons et demander \xe0 ce qu'on n'utilise qu'un des termes."}),"\n",(0,i.jsx)(n.li,{children:"Parler avec les domain experts plus souvent, pas forc\xe9ment au cours de meetings formels. En g\xe9n\xe9ral ils sont ravis de parler aux devs qui sont sinc\xe8rement int\xe9ress\xe9s par comprendre le domaine."}),"\n",(0,i.jsx)(n.li,{children:"Utiliser la terminologie qu'on a constitu\xe9 dans le code, et dans tous les autres supports ou \xe9changes."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour les ",(0,i.jsx)(n.strong,{children:"bounded contexts"}),", l'important est de ",(0,i.jsx)(n.strong,{children:"comprendre les principes sous-jacents"})," pour pouvoir les utiliser :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pourquoi cr\xe9er plusieurs mod\xe8les utiles \xe0 chaque probl\xe8me ? Parce qu'utiliser un tr\xe8s gros mod\xe8le est rarement efficace."}),"\n",(0,i.jsx)(n.li,{children:"Pourquoi un bounded context ne doit pas avoir des mod\xe8les en conflit en son sein : \xe0 cause de la complexit\xe9 que \xe7a engendre."}),"\n",(0,i.jsx)(n.li,{children:"Pourquoi plusieurs \xe9quipes ne devraient pas travailler sur un m\xeame bounded context ? A cause de la friction et de la mauvaise collaboration que \xe7a engendre."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["C'est la m\xeame chose pour les ",(0,i.jsx)(n.strong,{children:"patterns tactiques"})," : il faut comprendre la logique de chaque pattern et utiliser cette logique pour am\xe9liorer son design, plut\xf4t que faire appel \xe0 l'argument d'autorit\xe9 “DDD” qui ne m\xe8nera nulle part.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Pourquoi faire des limites transactionnelles explicites ? Pour prot\xe9ger la consistance de la donn\xe9e."}),"\n",(0,i.jsx)(n.li,{children:"Pourquoi une transaction DB ne peut pas modifier plus d'une instance d'un aggregate \xe0 la fois ? Pour \xeatre s\xfbr que les limites de consistance sont correctes."}),"\n",(0,i.jsx)(n.li,{children:"Pourquoi l'\xe9tat d'un aggregate ne peut pas \xeatre modifi\xe9 directement par un autre composant ? Pour s'assurer que toute la logique business est situ\xe9e au m\xeame endroit et pas dupliqu\xe9e."}),"\n",(0,i.jsxs)(n.li,{children:["Pourquoi ne pourrait-on pas d\xe9placer une partie de la logique d'un aggregate dans une ",(0,i.jsx)(n.em,{children:"stored procedure"})," ? Pour \xeatre s\xfbr de ne pas dupliquer la logique, parce que la logique dupliqu\xe9e dans un autre composant a tendance \xe0 se d\xe9synchroniser et mener \xe0 de la corruption de donn\xe9es."]}),"\n",(0,i.jsx)(n.li,{children:"Pourquoi essayer d'avoir des limites d'aggregates petites ? Parce que des limites transactionnelles larges augmentent la complexit\xe9 de l'aggregate et impactent n\xe9gativement la performance."}),"\n",(0,i.jsx)(n.li,{children:"Pourquoi, \xe0 la place de l'event sourcing, ne pourrait-on pas \xe9crire la donn\xe9e dans un fichier de log ? Parce qu'on n'aura pas de garantie de consistance de longue dur\xe9e pour la donn\xe9e."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["A propos de l'",(0,i.jsx)(n.strong,{children:"event sourcing"})," en particulier, ",(0,i.jsx)(n.strong,{children:"expliquer le principe aux domain experts"}),", et en particulier le niveau d'insight qu'on acquiert sur la donn\xe9e, va en g\xe9n\xe9ral les convaincre que c'est une bonne id\xe9e."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"part-iv--relationships-to-other-methodologies-and-patterns",children:"Part IV : Relationships to Other Methodologies and Patterns"}),"\n",(0,i.jsx)(n.h3,{id:"14---microservices",children:"14 - Microservices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Un ",(0,i.jsx)(n.strong,{children:"service"})," est une entit\xe9 qui re\xe7oit des donn\xe9es en entr\xe9e et envoie des donn\xe9es en sortie. Ca peut \xeatre de mani\xe8re synchrone comme avec le mod\xe8le request/response, ou asynchrone comme avec le mod\xe8les bas\xe9 sur les events.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Il a une ",(0,i.jsx)(n.strong,{children:"interface publique"})," qui d\xe9crit comment on peut communiquer avec. Elle est en g\xe9n\xe9ral suffisante pour comprendre ce que le service fait."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Un ",(0,i.jsx)(n.strong,{children:"microservice"})," est un service avec une ",(0,i.jsx)(n.strong,{children:"petite interface publique"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"En limitant son interface on le rend plus facilement compr\xe9hensible, et on r\xe9duit les raisons qu'il a de changer."}),"\n",(0,i.jsx)(n.li,{children:"C'est aussi pour \xe7a qu'un microservice poss\xe8de sa propre base de donn\xe9es et ne l'expose pas."}),"\n",(0,i.jsxs)(n.li,{children:["NDLR : cette courte d\xe9finition n'est pas partag\xe9e par tout le monde.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Dave Farley d\xe9finit le microservice comme \xe9tant d'abord une unit\xe9 d\xe9ployable ind\xe9pendamment, et donc con\xe7ue de telle mani\xe8re qu'elle n'ait pas besoin d'\xeatre test\xe9e avec d'autres unit\xe9s. cf. ",(0,i.jsx)(n.a,{href:"https://www.youtube.com/watch?v=zzMLg3Ys5vI",children:"vid\xe9o 1"}),", ",(0,i.jsx)(n.a,{href:"https://www.youtube.com/watch?v=bWZVx6TgVvc",children:"vid\xe9o 2"})]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Quand on se pose la question d'\xe0 quel point notre service devrait avoir une petite interface, il faut prendre en compte la ",(0,i.jsx)(n.strong,{children:"complexit\xe9 locale"})," (la complexit\xe9 interne de chaque microservice) et la ",(0,i.jsx)(n.strong,{children:"complexit\xe9 globale"}),". (la complexit\xe9 de l'ensemble r\xe9sultant de l'interaction entre microservices).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Pour r\xe9duire au maximum la complexit\xe9 globale, il suffit d'impl\xe9menter l'ensemble sous forme d'un unique service monolithique. La complexit\xe9 locale est alors maximale, et le risque est de finir avec un ",(0,i.jsx)(n.strong,{children:"big ball of mud"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Pour r\xe9duire au maximum la complexit\xe9 locale, on pourrait mettre chaque fonction dans un microservice, avec sa base de donn\xe9es. La complexit\xe9 globale est alors maximale, et on risque alors de se retrouver avec un ",(0,i.jsx)(n.strong,{children:"distributed big ball of mud"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Il s'agit donc de trouver un ",(0,i.jsx)(n.strong,{children:"juste milieu entre complexit\xe9 locale et globale"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["L'auteur \xe9voque le concept de ",(0,i.jsx)(n.em,{children:"depth"})," propos\xe9 par John Ousterhout dans son livre ",(0,i.jsx)(n.em,{children:"The philosophy of Software Design"})," : un deep module a une petite interface mais une plus grande impl\xe9mentation, alors qu'un shallow module a une grande interface compar\xe9 \xe0 son impl\xe9mentation (donc beaucoup de choses sont expos\xe9es).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["C'est la m\xeame chose pour les microservices, il faut les concevoir avec l'interface la plus petite possible, tout en ayant une impl\xe9mentation importante en comparaison. ",(0,i.jsx)(n.strong,{children:"Il faut que le microservice en tant qu'entit\xe9 d'encapsulation encapsule des choses"}),", sinon il ne fera qu'ajouter de la complexit\xe9 accidentelle."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les microservices sont souvent confondus avec les ",(0,i.jsx)(n.strong,{children:"bounded contexts"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il est vrai qu'un microservice est forc\xe9ment un bounded context : il ne peut pas \xeatre g\xe9r\xe9 par deux \xe9quipes, et il ne peut pas y avoir plusieurs mod\xe8les en conflit en son sein."}),"\n",(0,i.jsx)(n.li,{children:"En revanche, un bounded context peut \xeatre plus large que ce qui serait raisonnable pour un microservice, il peut contenir plusieurs subdomains tant qu'un m\xeame mod\xe8le (et un m\xeame ubiquitous language) permet d'en rendre compte."}),"\n",(0,i.jsxs)(n.li,{children:["Du coup :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Des ensembles trop vastes contenant des mod\xe8les en conflit m\xe8nent \xe0 du big ball of mud."}),"\n",(0,i.jsx)(n.li,{children:"Des ensembles moins vastes avec un mod\xe8le unique sont des bounded contexts."}),"\n",(0,i.jsx)(n.li,{children:"Des ensemble suffisamment petits pour avoir une petite interface publique sont des microservices et aussi des bounded contexts."}),"\n",(0,i.jsx)(n.li,{children:"Si on d\xe9coupe au-del\xe0, on tombe sur du distributed big ball of mud."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Parfois on a envie d'utiliser des ",(0,i.jsx)(n.strong,{children:"aggregates"})," comme microservices.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Il s'agit de regarder le couplage entre l'aggregate et les autres composants du subdomain : s'il communique souvent avec d'autres composants, si le changer m\xe8nerait souvent \xe0 changer d'autres composants etc. Plus ce couplage est fort, plus le microservice r\xe9sultant sera “shallow”."}),"\n",(0,i.jsxs)(n.li,{children:["Parfois l'aggregate est suffisamment ind\xe9pendant et \xe7a marche bien, mais ",(0,i.jsx)(n.strong,{children:"la plupart du temps c'est une mauvaise id\xe9e"})," : l'aggregate se trouve \xeatre un d\xe9coupage trop petit et m\xe8ne au distributed big ball of mud."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Enfin, une autre possibilit\xe9 est d'utiliser les ",(0,i.jsx)(n.strong,{children:"subdomains"})," pour les microservices.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les subdomains sont de bons candidats pour des deep modules.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ils sont concentr\xe9s sur les use-cases plut\xf4t que sur la mani\xe8re dont ceux-ci seront impl\xe9ment\xe9s."}),"\n",(0,i.jsx)(n.li,{children:"Les use-cases sont d\xe9pendants les uns des autres."}),"\n",(0,i.jsx)(n.li,{children:"Le subdomain agit sur un m\xeame jeu de donn\xe9es."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Choisir les subdomains comme heuristique pour ses microservices est donc une bonne id\xe9e"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Parfois il sera pr\xe9f\xe9rable de choisir un ensemble plus vaste qui sera un bounded context, parfois un ensemble plus restreint qui sera un aggregate. Mais la plupart du temps les subdomains feront l'affaire."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"Open-Host Services"}),", et ",(0,i.jsx)(n.strong,{children:"Anticorruption Layers"})," peuvent contribuer \xe0 r\xe9duire davantage l'interface publique des microservices, en n'exposant qu'une version r\xe9duite du mod\xe8le interne.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Dans le cas de l'ACL, il peut \xeatre mis dans un service \xe0 part, r\xe9duisant donc l'interface publique du service consommateur qui se prot\xe8ge."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"15---event-driven-architecture",children:"15 - Event-Driven Architecture"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L'",(0,i.jsx)(n.strong,{children:"event driven architecture"})," est une architecture dans laquelle les composants souscrivent et r\xe9agissent \xe0 des \xe9v\xe9nements de mani\xe8re ",(0,i.jsx)(n.strong,{children:"asynchrone"}),", plut\xf4t que sous forme de requ\xeate/r\xe9ponse de mani\xe8re synchrone.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le pattern saga en est un exemple."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["On parle bien ici de communication entre composants (ie. bounded contexts). ",(0,i.jsx)(n.strong,{children:"Alors que l'event sourcing porte sur l'utilisation d'events \xe0 l'int\xe9rieur du BC, l'event driven architecture s'int\xe9resse aux events utilis\xe9s pour communiquer entre BCs"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["L'event et la commande sont tous deux des ",(0,i.jsx)(n.strong,{children:"messages"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L'",(0,i.jsx)(n.strong,{children:"event"})," d\xe9crit quelque chose qui s'est d\xe9j\xe0 pass\xe9 et ne peut pas \xeatre annul\xe9 ou refus\xe9."]}),"\n",(0,i.jsxs)(n.li,{children:["La ",(0,i.jsx)(n.strong,{children:"commande"})," d\xe9crit quelque chose qui doit \xeatre fait, et qui pourrait \xeatre refus\xe9, auquel cas on peut d\xe9clencher des commandes de compensation."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["On peut classer les events en 3 cat\xe9gories :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["1- L'",(0,i.jsx)(n.strong,{children:"event notification"})," est un event qui sert \xe0 notifier un composant de quelque chose, pour le ",(0,i.jsx)(n.strong,{children:"pousser \xe0 faire une query"})," d\xe8s qu'il est disponible.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On ne va pas mettre toute l'info dans l'event, \xe9tant donn\xe9 qu'on s'attend \xe0 ce que le composant refasse une query quand il est pr\xeat."}),"\n",(0,i.jsxs)(n.li,{children:["Avantages d'obliger \xe0 faire une query :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ca peut \xeatre bien niveau s\xe9curit\xe9 : notifier avec des infos non sensibles dans l'event, et v\xe9rifier avec une autorisation plus forte quand la query explicite est faite."}),"\n",(0,i.jsx)(n.li,{children:"\xc7a peut permettre au composant d'\xeatre s\xfbr d'avoir des infos \xe0 jour au moment du processing vu que la query sera synchrone, contrairement \xe0 l'event."}),"\n",(0,i.jsx)(n.li,{children:"\xc7a peut permettre de mettre en place une op\xe9ration bloquante du point de vue concurrence pour que ce soit fait par une seule instance."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Exemple : ici on n'a quasi aucune info \xe0 part l'ID et un lien pour en savoir plus.","\n",(0,i.jsx)(n.pre,{"data-language":"json","data-theme":"default",children:(0,i.jsxs)(n.code,{"data-language":"json","data-theme":"default",children:[(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"{"})}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"type"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"mariage-recorded"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"person-id"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"01b9a761"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"payload"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" {"})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"person-id"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"01b9a761"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"details"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"/01b9a761/mariage-data"'})]}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  }"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["2- L'",(0,i.jsx)(n.strong,{children:"event-carried state transfer"})," (ECST) est un event qui va donner l'information compl\xe8te permettant \xe0 un composant externe de ",(0,i.jsx)(n.strong,{children:"maintenir un cache de l'\xe9tat interne de nos objets"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On peut soit envoyer \xe0 chaque fois un snapshot complet de l'\xe9tat d'un objet, ou alors ne renvoyer que les modifications de cet \xe9tat et le receveur se d\xe9brouille pour maintenir la coh\xe9rence de l'\xe9tat au fur et \xe0 mesure."}),"\n",(0,i.jsxs)(n.li,{children:["Avantages de maintenir un cache \xe0 distance :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On est plus tol\xe9rant aux fautes : le composant qui nous consomme peut continuer \xe0 fonctionner m\xeame si on est down."}),"\n",(0,i.jsx)(n.li,{children:"On \xe9conomise des requ\xeates : le composant consommateur n'a pas \xe0 faire de requ\xeate \xe0 chaque fois pour obtenir la donn\xe9e, et si elle ne change pas il n'y aura pas non plus d'event vu que le cache sera d\xe9j\xe0 \xe0 jour."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Exemple : ici on a la donn\xe9e qui a chang\xe9 dans le state de la personne concern\xe9e, pour qu'on mette \xe0 jour notre cache.","\n",(0,i.jsx)(n.pre,{"data-language":"json","data-theme":"default",children:(0,i.jsxs)(n.code,{"data-language":"json","data-theme":"default",children:[(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"{"})}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"type"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"personal-details-changed"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"person-id"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"01b9a761"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"payload"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" {"})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"new-last-name"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"Williams"'})]}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  }"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["3- Le ",(0,i.jsx)(n.strong,{children:"domain event"})," d\xe9crit un \xe9v\xe9nement li\xe9 au business domain, et qui s'est produit dans le pass\xe9. Il est l\xe0 dans un but de ",(0,i.jsx)(n.strong,{children:"mod\xe9lisation du business domain"})," et pas sp\xe9cialement pour des consid\xe9rations techniques vis-\xe0-vis des autres composants.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Par rapport \xe0 l'event notification :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le domain event inclut toute l'info n\xe9cessaire pour d\xe9crire l'event, alors que l'event notification non."}),"\n",(0,i.jsx)(n.li,{children:"Le domain event est utile en interne m\xeame si aucun composant externe s'y int\xe9resse, alors que le but de l'event notification est uniquement l'int\xe9gration avec les composants externes."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Par rapport \xe0 l'ECST :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le but est diff\xe9rent : le domain event d\xe9crit le fonctionnement du domaine, alors que l'ECST est l\xe0 pour exposer l'\xe9tat interne des objets pour des raisons techniques."}),"\n",(0,i.jsx)(n.li,{children:"En s'abonnant \xe0 un type pr\xe9cis de domain event, on n'a pas du tout la garantie d'obtenir tous les changements d'un aggregate par exemple, contrairement \xe0 ce que permet l'ECST."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Exemple : on mod\xe9lise l'\xe9v\xe9nement qui s'est produit au plus pr\xe8s possible du domaine.","\n",(0,i.jsx)(n.pre,{"data-language":"json","data-theme":"default",children:(0,i.jsxs)(n.code,{"data-language":"json","data-theme":"default",children:[(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"{"})}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"type"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"married"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"person-id"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"01b9a761"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"payload"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" {"})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"person-id"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"01b9a761"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:","})]}),"\n",(0,i.jsxs)(n.span,{className:"line",children:[(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"    "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-keyword)"},children:'"assumed-partner-last-name"'}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-punctuation)"},children:":"}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:" "}),(0,i.jsx)(n.span,{style:{color:"var(--shiki-token-string-expression)"},children:'"true"'})]}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"  }"})}),"\n",(0,i.jsx)(n.span,{className:"line",children:(0,i.jsx)(n.span,{style:{color:"var(--shiki-color-text)"},children:"}"})})]})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Pour montrer qu'il ne suffit pas de saupoudrer un syst\xe8me d'events pour le transformer en event driven architecture, voici un exemple r\xe9el d'architecture produisant un distributed big ball of mud :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Imaginons un composant (bounded context) CRM utilisant l'event sourced domain model. Trois autres composants choisissent de consommer l'ensemble de ses domain events :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le BC Marketing les transforme en \xe9tat, puis les utilise pour se mettre \xe0 jour."}),"\n",(0,i.jsx)(n.li,{children:"Le BC AdsOptimization fait quelque chose de similaire \xe0 Marketing pour d'autres besoins."}),"\n",(0,i.jsx)(n.li,{children:"Le BC Reporting les consomme, puis attend 5 mn avant de faire une query vers AdsOptimization, pour esp\xe9rer qu'AdsOptimization aura d\xe9j\xe0 trait\xe9 les donn\xe9es li\xe9es \xe0 cet event."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["On se retrouve avec 3 probl\xe8mes :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Un ",(0,i.jsx)(n.strong,{children:"couplage temporel"})," : Reporting attend 5 mn avant de faire sa requ\xeate, mais rien de garantit que ce sera suffisant. Si AdsOptimization est surcharg\xe9, qu'on a des probl\xe8mes r\xe9seau ou autres, Reporting risque de faire sa requ\xeate avant qu'AdsOptimization n'ait fini de processer les donn\xe9es li\xe9es \xe0 cet event.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Solution : plut\xf4t que de faire consommer les events de CRM \xe0 Reporting, on peut faire en sorte que ce soit AdsOptimization qui envoie un ",(0,i.jsx)(n.strong,{children:"notification event"})," \xe0 Reporting quand il a process\xe9 quelque chose de nouveau, pour que Reporting fasse sa requ\xeate."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Un ",(0,i.jsx)(n.strong,{children:"couplage fonctionnel"})," : Marketing et AdsOptimization consomment tous deux les m\xeames events, qu'ils transforment tous deux en objets avec \xe9tat exactement de la m\xeame mani\xe8re. \xc7a cr\xe9e une duplication de logique dans ces deux bounded contexts.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Solution : CRM peut impl\xe9menter l'",(0,i.jsx)(n.strong,{children:"open-host service"})," pour y impl\xe9menter la logique qui \xe9tait dupliqu\xe9e dans Marketing et AdsOptimization. Comme \xe7a les consommateurs ne s'encombrent pas d'impl\xe9menter \xe7a."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Un ",(0,i.jsx)(n.strong,{children:"couplage \xe0 l'impl\xe9mentation"})," : vu que CRM est event-sourced, les autres BCs sont coupl\xe9s \xe0 l'impl\xe9mentation de CRM. A chaque fois qu'il change quelque chose, il faut qu'ils mettent \xe0 jour leur code aussi.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Solution : CRM, bien qu'event-sourced, n'a pas besoin d'exposer tous ses domain events. Il peut choisir publiquement d'exposer seulement certains d'entre eux, ou ",(0,i.jsx)(n.strong,{children:"choisir d'exposer un type d'event diff\xe9rent"}),", par exemple ici des ECST vu que Marketing et AdsOptimization sont int\xe9ress\xe9s par le fait d'avoir un cache de l'\xe9tat de certains des objets de CRM."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Quelques bonnes pratiques pour l'event driven architecture :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Il faut toujours ",(0,i.jsx)(n.strong,{children:"s'attendre au pire"})," : \xe9viter le mindset “things will be ok” et partir du principe que tout peut \xe9chouer.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On parle d'architecture distribu\xe9e : le r\xe9seau peut avoir des probl\xe8mes, les serveurs peuvent crasher, les events peuvent arriver deux fois ou pas du tout etc."}),"\n",(0,i.jsxs)(n.li,{children:["Il faut donc s'assurer \xe0 tout prix que les events arrivent bien correctement :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Utiliser l'",(0,i.jsx)(n.strong,{children:"outbox pattern"})," pour publier les messages."]}),"\n",(0,i.jsxs)(n.li,{children:["S'assurer que les messages pourront \xeatre ",(0,i.jsx)(n.strong,{children:"d\xe9dupliqu\xe9s"})," ou ",(0,i.jsx)(n.strong,{children:"r\xe9ordonn\xe9s"})," gr\xe2ce \xe0 leur num\xe9ro s' ils arrivent dans le mauvais ordre."]}),"\n",(0,i.jsxs)(n.li,{children:["Utiliser les patterns ",(0,i.jsx)(n.strong,{children:"saga"})," et ",(0,i.jsx)(n.strong,{children:"process manager"})," pour orchestrer des process cross-bounded contexts qui n\xe9cessitent des actions de compensation."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Il faut bien ",(0,i.jsx)(n.strong,{children:"distinguer les events publics des priv\xe9s"})," : ne pas tout exposer tel quel mais traiter les events qu'on expose comme une interface publique classique.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ne jamais exposer l'ensemble des domain events d'un event sourced bounded context."}),"\n",(0,i.jsx)(n.li,{children:"Quand on impl\xe9mente un open-host service, bien s'assurer que le mod\xe8le qu'on veut exposer est bien diff\xe9rent du mod\xe8le interne \xe0 notre bounded context, ce qui peut impliquer de transformer certains events, et pas seulement les filtrer."}),"\n",(0,i.jsx)(n.li,{children:"Exposer plut\xf4t des ECST et des notification events, et des domain events avec parcimonie, en distinguant bien ceux qu'on expose."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["On peut utiliser le ",(0,i.jsx)(n.strong,{children:"besoin de consistance comme crit\xe8re suppl\xe9mentaire pour le choix du type d'event"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Si l'eventual consistency est OK, on peut utiliser l'ECST."}),"\n",(0,i.jsx)(n.li,{children:"Si le BC consommateur a besoin de lire la derni\xe8re \xe9criture dans le state du producteur, alors le notification event appelant \xe0 faire une query est sans doute plus adapt\xe9."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"16---data-mesh",children:"16 - Data Mesh"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les transactions ",(0,i.jsx)(n.strong,{children:"OLTP"})," (T pour transaction) et ",(0,i.jsx)(n.strong,{children:"OLAP"})," (A pour analytics) ont des buts, des consommateurs et des temporalit\xe9s diff\xe9rents.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Les OLTP permet de servir les clients sur des op\xe9rations plut\xf4t en temps r\xe9el, et dont les fonctionnalit\xe9s sont connues et optimis\xe9es."}),"\n",(0,i.jsxs)(n.li,{children:["Les OLAP sont l\xe0 pour obtenir des insights \xe0 partir des donn\xe9es, et permettre \xe0 l'entreprise d'optimiser le business.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ils prennent en g\xe9n\xe9ral plus de temps parce qu'ils portent sur de grandes quantit\xe9s de donn\xe9es, et utilisent des donn\xe9es moins \xe0 jour."}),"\n",(0,i.jsx)(n.li,{children:"Ils portent sur des donn\xe9es normalis\xe9es qui permettent une grande flexibilit\xe9 de requ\xeates de la part des data analysts."}),"\n",(0,i.jsx)(n.li,{children:"NDLR : les OLAP utilisent souvent des BDD orient\xe9es colonne plut\xf4t que lignes, c'est-\xe0-dire que les donn\xe9es de toutes les entr\xe9es d'une m\xeame colonne sont stock\xe9es physiquement les unes \xe0 la suite des autres, pour faciliter les requ\xeates qui portent sur peu de colonnes et beaucoup d'entr\xe9es. (cf. Designing Data-Intensive Applications)."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les OLTP vont typiquement utiliser des donn\xe9es organis\xe9es ",(0,i.jsx)(n.strong,{children:"sous forme relationnelle"})," avec des ",(0,i.jsx)(n.strong,{children:"entit\xe9s individuelles"})," reli\xe9es entre elles, pour faciliter le fonctionnement des syst\xe8mes op\xe9rationnels."]}),"\n",(0,i.jsxs)(n.li,{children:["Les OLAP en revanche s'int\xe9ressent plus aux ",(0,i.jsx)(n.strong,{children:"activit\xe9s business"})," et vont utiliser un mod\xe8le de donn\xe9es bas\xe9 sur les fact tables et dimension tables.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"fact tables"})," sont des tables qu'on va remplir avec des \xe9v\xe9nements li\xe9s au business qui se sont produits dans le pass\xe9.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Exemple : ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Fact_Sales"})})," peut \xeatre un fact table contenant une entr\xe9e pour chaque vente qui a eu lieu."]}),"\n",(0,i.jsx)(n.li,{children:"Ils sont choisis pour r\xe9pondre aux besoins des data analysts qui vont utiliser la BDD."}),"\n",(0,i.jsx)(n.li,{children:"Selon les besoins, on peut choisir d'y mettre seulement certaines donn\xe9es, par exemple des changements de statut dont on garde seulement une entr\xe9e toutes les 30 minutes, parce que plus serait inutile ou inefficace pour ce qu'on veut."}),"\n",(0,i.jsx)(n.li,{children:"Les donn\xe9es y sont ajout\xe9es pour \xeatre lues, on n'y fait pas de modification."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"dimension tables"})," sont r\xe9f\xe9renc\xe9es par des foreign keys \xe0 partir de la fact table, et d\xe9crivent des propri\xe9t\xe9s du fact en question.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Exemple : ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Dim_Agents"})}),", ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"Dim_Customers"})})," etc. qui vont chacun avoir leurs propres champs qui les d\xe9crivent."]}),"\n",(0,i.jsxs)(n.li,{children:["On remarque bien la forte ",(0,i.jsx)(n.strong,{children:"normalisation"})," avec la fact table au centre, et les dimension tables autour, qui permettent de maximiser la flexibilit\xe9 des requ\xeates possibles sur les donn\xe9es autour de ce fact."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["On appelle ce mod\xe8le fact tables / dimension tables le ",(0,i.jsx)(n.strong,{children:"star schema"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Il existe une variante appel\xe9e le ",(0,i.jsx)(n.strong,{children:"snowflake schema"}),", o\xf9 les dimensions sont sur plusieurs niveaux : les dimension tables ont elles-m\xeames des foreign keys vers d'autres dimensions qui les d\xe9crivent."]}),"\n",(0,i.jsx)(n.li,{children:"L'avantage du snowflake c'est qu'il prend moins de place pour les m\xeames donn\xe9es, par contre il faudra faire plus de jointures et donc les requ\xeates seront plus lentes."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"data warehouse"})," consiste \xe0 extraire les donn\xe9es des syst\xe8mes op\xe9rationnels, et les mettre dans une grande BDD avec un mod\xe8le orient\xe9 analytics (star, snowflakes etc.). Les data analysts et ing\xe9nieurs BI vont alors consommer cette BDD avec du SQL.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On a des flows de type ETL qui vont consommer les BDD mais aussi \xe9ventuellement des events, des logs etc. pour construire le data warehouse."}),"\n",(0,i.jsx)(n.li,{children:"Il peut y avoir de la d\xe9duplication, de l'\xe9limination d'informations sensibles, de l'agr\xe9gation etc."}),"\n",(0,i.jsxs)(n.li,{children:["Le data warehouse pose plusieurs ",(0,i.jsx)(n.strong,{children:"probl\xe8mes"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["On retombe sur la probl\xe9matique d'un ",(0,i.jsx)(n.strong,{children:"mod\xe8le unique"})," pour r\xe9gler tous les probl\xe8mes (dont on s'\xe9tait sorti par la cr\xe9ation de bounded contexts), qui est inefficace.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Une des solutions qui a \xe9t\xe9 trouv\xe9e c'est de cr\xe9er des ",(0,i.jsx)(n.strong,{children:"data marts"})," qui vont constituer des BDD sp\xe9cifiques, soit extraites \xe0 partir de la data warehouse, soit extraite directement \xe0 partir d'un syst\xe8me op\xe9rationnel."]}),"\n",(0,i.jsx)(n.li,{children:"Le probl\xe8me c'est que si le data mart est extrait de la data warehouse on ne r\xe8gle pas le probl\xe8me du mod\xe8le unique dont on d\xe9pend. Et si on extrait \xe0 partir d'un syst\xe8me op\xe9rationnel, on a du mal ensuite \xe0 faire des requ\xeates cross-database entre plusieurs data marts, \xe0 cause de probl\xe8mes de performance."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["On a aussi un ",(0,i.jsx)(n.strong,{children:"couplage \xe0 l'impl\xe9mentation des syst\xe8mes op\xe9rationnels"}),". Or \xeatre coupl\xe9 \xe0 l'impl\xe9mentation de gens \xe0 qui on parle peu c'est catastrophique. D\xe8s qu'ils modifient leur sch\xe9ma de donn\xe9es, \xe7a casse les scripts d'ETL qui nourrit le data warehouse."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"data lake"})," est cens\xe9 r\xe9soudre certains de ces probl\xe8mes, en se pla\xe7ant entre les syst\xe8mes op\xe9rationnels et la data warehouse.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Elle centralise au m\xeame endroit les donn\xe9es op\xe9rationnelles ",(0,i.jsx)(n.strong,{children:"sans changer leur sch\xe9ma"}),". Le data warehouse va alors pouvoir \xeatre rempli avec un ou plusieurs flows ETL \xe0 partir du data lake."]}),"\n",(0,i.jsx)(n.li,{children:"Quand le mod\xe8le du warehouse n'est plus satisfaisant, les data analysts vont pouvoir piocher dans le data lake avec d'autres scripts ETL."}),"\n",(0,i.jsxs)(n.li,{children:["Il y a cependant des ",(0,i.jsx)(n.strong,{children:"probl\xe8mes"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le processus est plus complexe, et les data engineers se retrouvent souvent \xe0 maintenir plusieurs versions d'un m\xeame script ETL pour g\xe9rer plusieurs versions d'un syst\xe8me op\xe9rationnel.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["=> on n'a pas vraiment r\xe9gl\xe9 le souci de ",(0,i.jsx)(n.strong,{children:"couplage \xe0 une impl\xe9mentation g\xe9r\xe9e par une autre \xe9quipe"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le data lake \xe9tant schema-less, il n'apporte pas de garantie vis-\xe0-vis de la consistance des donn\xe9es venant des syst\xe8mes op\xe9rationnels.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Quand les donn\xe9es deviennent grandes, le data lake se transforme en data swamp (mar\xe9cage de donn\xe9es), rendant le travail des data scientists tr\xe8s difficile."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Le ",(0,i.jsx)(n.strong,{children:"data mesh"})," tente de r\xe9pondre \xe0 son tour \xe0 ces probl\xe9matiques, en adoptant d'une certaine mani\xe8re une approche DDD appliqu\xe9e \xe0 la data.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Le data mesh a 4 grands principes :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Decompose data around domains"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On va prendre les bounded contexts qu'on avait cr\xe9\xe9s, et y int\xe9grer une partie data correspondant aux donn\xe9es issues des BDD op\xe9rationnelles de ce bounded context."}),"\n",(0,i.jsxs)(n.li,{children:["L'\xe9quipe en charge du bounded context aura alors ",(0,i.jsx)(n.strong,{children:"sous sa responsabilit\xe9 \xe0 la fois la partie OLTP et la partie OLAP de son bounded context"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["On \xe9limine donc la friction qu'il y avait entre \xe9quipe feature et \xe9quipe data ",(0,i.jsx)(n.strong,{children:"en int\xe9grant une personne avec les comp\xe9tences data dans l'\xe9quipe feature"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Data as a product"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Fini les scripts ETL douteux pour construire la data, chaque bounded context expose sa data proprement avec une ",(0,i.jsx)(n.strong,{children:"API publique"}),", \xe0 laquelle il accorde le m\xeame soin qu'une API publique destin\xe9e \xe0 \xeatre consomm\xe9e par un composant OLTP du syst\xe8me.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"On va mettre en place des SLA/SLO, on versionne le mod\xe8le de donn\xe9es expos\xe9, les endpoints doivent \xeatre faciles \xe0 trouver et le sch\xe9ma clairement d\xe9fini etc."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["La data \xe9tant un produit plut\xf4t qu'un \xe9l\xe9ment de seconde classe, chaque \xe9quipe g\xe9rant le bounded context a la ",(0,i.jsx)(n.strong,{children:"responsabilit\xe9 d'assurer la qualit\xe9 et l'int\xe9grit\xe9 de la data expos\xe9e"}),". Mais aussi servir la donn\xe9e sous les formats qui pourront int\xe9resser les consommateurs (SQL, fichier etc.).","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'id\xe9e c'est que les data analysts/BI puissent aller chercher facilement des donn\xe9es de plusieurs bounded context, appliquer \xe9ventuellement des transformations en local, et faire leur analyse."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Enable autonomy"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Cr\xe9er une infrastructure pour g\xe9rer la data \xe9tant difficile, il faut une ",(0,i.jsx)(n.strong,{children:"\xe9quipe centrale"})," d\xe9di\xe9e \xe0 l'infrastructure de la plateforme data."]}),"\n",(0,i.jsx)(n.li,{children:"Elle sera en charge de maintenir la plateforme qui permet aux feature teams de cr\xe9er facilement leur produit data sous les diff\xe9rents formats possibles."}),"\n",(0,i.jsx)(n.li,{children:"Par contre elle reste la plus agnostique possible par rapport au mod\xe8le de donn\xe9es, qui est de la responsabilit\xe9 des \xe9quipes qui produisent la donn\xe9e."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Build ecosystem"})," :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Il faut un corps de “",(0,i.jsx)(n.strong,{children:"gouvernance f\xe9d\xe9rale"}),"” pour penser l'\xe9cosyst\xe8me data au sein de l'entreprise, et notamment la question de ",(0,i.jsx)(n.strong,{children:"l'interop\xe9rabilit\xe9"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Ce corps est compos\xe9 de repr\xe9sentants data et produit des \xe9quipes feature, et de repr\xe9sentants de l'\xe9quipe plateforme centrale."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["C\xf4t\xe9 relation avec le DDD :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Le DDD aide \xe0 structurer la donn\xe9e analytique en amenant l'ubiquitous language et la connaissance du domaine."}),"\n",(0,i.jsxs)(n.li,{children:["Exposer une donn\xe9e diff\xe9rente de la donn\xe9e utilis\xe9e est l'",(0,i.jsx)(n.strong,{children:"open-host service"})," pattern du DDD."]}),"\n",(0,i.jsxs)(n.li,{children:["Gr\xe2ce au ",(0,i.jsx)(n.strong,{children:"CQRS"}),", on peut facilement mettre en place une ou plusieurs formes d\xe9normalis\xe9es de plus qui auront un mod\xe8le analytique."]}),"\n",(0,i.jsx)(n.li,{children:"Les patterns de relation entre bounded context s'appliquent aussi aux donn\xe9es analytiques (partnership, ACL, separate ways etc.)."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"appendix-a---applying-ddd-a-case-study",children:"Appendix A - Applying DDD: A Case Study"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Vlad a pass\xe9 quelques ann\xe9es dans une ",(0,i.jsx)(n.strong,{children:"startup"})," qui appliquait le DDD. Il s'agit ici d'une description de ce qu'ils ont fait, et des ",(0,i.jsx)(n.strong,{children:"erreurs commises"}),".","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"L'entreprise portait sur le marketing en ligne, de la strat\xe9gie marketing aux \xe9l\xe9ments graphiques, campagnes marketing et appels des prospects r\xe9colt\xe9s."}),"\n",(0,i.jsx)(n.li,{children:"Il y avait aussi une importante partie data analytics sur l'optimisation des campagnes de marketing, le fait de faire travailler les agents sur les prospects les plus int\xe9ressants etc."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les 5 bounded contexts qu'il nous pr\xe9sente pour en tirer des le\xe7ons :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["1- Marketing : il s'agit d'une solution de gestion des campagnes.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Quasiment chaque nom pr\xe9sent dans les requirements \xe9tait un aggregate. Pour autant la plupart n'avaient que peu de logique, celle-ci \xe9tant essentiellement dans un \xe9norme service layer.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Quand on essaye d'impl\xe9menter un domain model mais qu'on finit avec un active record pattern, on appelle \xe7a un ",(0,i.jsx)(n.strong,{children:"anemic domain model"})," antipattern."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Malgr\xe9 l'architecture mal adapt\xe9e, le projet a \xe9t\xe9 un succ\xe8s, gr\xe2ce \xe0 l'",(0,i.jsx)(n.strong,{children:"ubiquitous language"})," mis en place d\xe8s le d\xe9but, et les ",(0,i.jsx)(n.strong,{children:"conversations tr\xe8s fr\xe9quentes avec les domain experts"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["2- CRM : les sales l'utilisaient pour se r\xe9partir les prospects de mani\xe8re optimis\xe9e.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ils ont d'abord commenc\xe9 \xe0 d\xe9velopper le CRM \xe0 l'int\xe9rieur du m\xeame monolithe que Marketing. Puis voyant que le mod\xe8le avait des incoh\xe9rences, ils ont extrait CRM dans son propre bounded context (au niveau du code seulement)."}),"\n",(0,i.jsxs)(n.li,{children:["Ils ont cette fois tent\xe9 d'utiliser le domain model pattern en mettant ",(0,i.jsx)(n.strong,{children:"beaucoup de logique dans les aggregates"}),", et chaque transaction n'affectant qu'un aggregate."]}),"\n",(0,i.jsx)(n.li,{children:"Le tout prenant beaucoup de temps, le management a d\xe9cid\xe9 de donner certaines fonctionnalit\xe9s \xe0 l'\xe9quipe database, qui l'a fait sous forme de stored procedures."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Deux \xe9quipes qui ne se parlent que peu, et qui travaillent sur le m\xeame bounded context"})," : de la duplication de logique, des corruptions de donn\xe9es etc. la cata."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["3- Event Crunchers : ils ont remarqu\xe9 que les \xe9v\xe9nements venant des clients amenaient \xe0 modifier les deux bounded contexts, alors ils ont extrait la logique dans un 3\xe8me.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Initialement pens\xe9 comme un supporting subdomain, et d\xe9velopp\xe9 avec du ",(0,i.jsx)(n.strong,{children:"transaction script"}),", la logique s'est vite complexifi\xe9e, et la qualit\xe9 d\xe9grad\xe9e."]}),"\n",(0,i.jsxs)(n.li,{children:["Finalement au fil du temps la logique \xe9tait devenue tellement complexe et bord\xe9lique, qu'ils ont d\xfb le refaire sous forme d'",(0,i.jsx)(n.strong,{children:"event-sourced domain model"}),", avec les autres bounded contexts souscrivant \xe0 ses events."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["4- Bonuses : il s'agit de calculer les bonus des sales.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["L\xe0 encore \xe7a partait d'une logique simple, donc un ",(0,i.jsx)(n.strong,{children:"supporting subdomain"}),". Ils ont choisi d'utiliser l'",(0,i.jsx)(n.strong,{children:"active record pattern"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["L\xe0 encore la logique s'est complexifi\xe9e assez vite, gr\xe2ce \xe0 l'",(0,i.jsx)(n.strong,{children:"ubiquitous language"})," qui \xe9tait en place avec les domain experts, ils ont pu se rendre compte que le mod\xe8le ne convenait plus \xe0 la complexit\xe9 plus t\xf4t que pour Event Crunchers : ils l'ont recod\xe9 sous forme d'",(0,i.jsx)(n.strong,{children:"event-sourced domain"})," model."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["5- Marketing Hub : une nouvelle id\xe9e du management : se servir des nombreux prospects acquis pour les vendre \xe0 des clients.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Ils ont d\xe8s le d\xe9but catalogu\xe9 le subdomain comme ",(0,i.jsx)(n.strong,{children:"core"}),", et utilis\xe9 l'",(0,i.jsx)(n.strong,{children:"event-sourcing et CQRS"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Ils ont aussi utilis\xe9 les ",(0,i.jsx)(n.strong,{children:"microservices"}),", un concept qui devenait populaire \xe0 ce moment. Mais ils ont fait ",(0,i.jsx)(n.strong,{children:"un microservice par aggregate"}),", avec un aggregate event-sourced, et les autres state-based."]}),"\n",(0,i.jsx)(n.li,{children:"Au fil du temps chaque micro service avait besoin de quasiment tous les autres, et ils se sont retrouv\xe9s avec un distributed monolith."}),"\n",(0,i.jsxs)(n.li,{children:["Finalement, m\xeame si le subdomain \xe9tait une source de profit et donc core, la partie logicielle en elle-m\xeame \xe9tait tr\xe8s simple, et le pattern utilis\xe9 s'est r\xe9v\xe9l\xe9 \xeatre largement overkill, amenant de la ",(0,i.jsx)(n.strong,{children:"complexit\xe9 accidentelle"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["L'",(0,i.jsx)(n.strong,{children:"ubiquitous language"})," est selon Vlad le “core subdomain” du DDD : \xe0 chaque fois qu'ils l'ont bien mis en place, le projet a plut\xf4t march\xe9, et \xe0 chaque fois qu'ils ne l'ont pas fait, le projet a plut\xf4t \xe9chou\xe9.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Plus on le met en place t\xf4t, plus on \xe9vite des probl\xe8mes."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Les ",(0,i.jsx)(n.strong,{children:"subdomains"})," sont aussi tr\xe8s importants. Mal les identifier am\xe8ne \xe0 utiliser les mauvais patterns.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Vlad propose d'",(0,i.jsx)(n.strong,{children:"inverser la relation entre le subdomain et les patterns tactiques"})," : d'abord choisir le pattern tactique qui convient le mieux au requirement, puis qualifier le type de subdomain, et enfin v\xe9rifier ce type avec les gens du business.","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Si le business pense que le subdomain est core, mais qu'on peut le r\xe9aliser facilement, on l'a peut \xeatre mal d\xe9coup\xe9 et analys\xe9, ou il faut se poser des questions sur la viabilit\xe9 de l'id\xe9e business."}),"\n",(0,i.jsxs)(n.li,{children:["Si le business pense que c'est supporting, mais qu'on ne peut le r\xe9aliser qu'avec des patterns complexes, alors :","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Soit le business s'enflamme sur les requirements et ajoute de l'",(0,i.jsx)(n.strong,{children:"accidental business complexity"})," (mettre beaucoup de ressources sur une activit\xe9 non rentable)."]}),"\n",(0,i.jsx)(n.li,{children:"Soit les gens du business ne se rendent pas compte qu'ils obtiennent un gain comp\xe9titif qu'ils n'avaient pas envisag\xe9 avec le subdomain en question."}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Il ne faut pas ignorer la douleur"})," : si elle se manifeste, c'est sans doute que les patterns utilis\xe9s ne sont pas en phase avec la probl\xe9matique business. Il ne faut pas h\xe9siter \xe0 ",(0,i.jsx)(n.strong,{children:"requalifier le subdomain"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["A propos des ",(0,i.jsx)(n.strong,{children:"bounded contexts"}),", comme \xe9voqu\xe9 pr\xe9c\xe9demment, le mieux est de ",(0,i.jsx)(n.strong,{children:"les choisir larges"}),", puis de les d\xe9couper quand le besoin se fait sentir, et que la connaissance du domaine augmente."]}),"\n",(0,i.jsx)(n.li,{children:"Finalement la startup a \xe9t\xe9 profitable assez vite, et a fini par \xeatre rachet\xe9e par un de leur gros client. Pendant ces ann\xe9es, ils ont \xe9t\xe9 en mode startup : changer les priorit\xe9s et requirements rapidement, des timeframes agressives, et une petite \xe9quipe R&D. Pour Vlad le DDD a rempli ses promesses."}),"\n"]})]})}var x=(0,r.j)({MDXContent:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:n}=Object.assign({},(0,t.a)(),e.components);return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)},pageOpts:{filePath:"pages/books/learning-domain-driven-design.mdx",route:"/books/learning-domain-driven-design",title:"Learning Domain Driven Design: Aligning Software Architecture and Business Strategy",headings:h},pageNextRoute:"/books/learning-domain-driven-design"})},8397:function(e,n,s){"use strict";s.d(n,{U:function(){return r}});var i=s(5893);function r(e){let{children:n}=e;return(0,i.jsx)("em",{style:{color:"#3d85c6",fontWeight:"bold",fontStyle:"normal"},children:n})}}},function(e){e.O(0,[673,888,774,179],function(){return e(e.s=8061)}),_N_E=e.O()}]);